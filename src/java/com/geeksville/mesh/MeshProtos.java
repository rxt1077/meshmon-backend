// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mesh.proto

package com.geeksville.mesh;

public final class MeshProtos {
  private MeshProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Note: these enum names must EXACTLY match the string used in the device
   * bin/build-all.sh script.
   * Because they will be used to find firmware filenames in the android app for OTA updates.
   * To match the old style filenames, _ is converted to -, p is converted to .
   * </pre>
   *
   * Protobuf enum {@code HardwareModel}
   */
  public enum HardwareModel
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>UNSET = 0;</code>
     */
    UNSET(0),
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>TLORA_V2 = 1;</code>
     */
    TLORA_V2(1),
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>TLORA_V1 = 2;</code>
     */
    TLORA_V1(2),
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>TLORA_V2_1_1P6 = 3;</code>
     */
    TLORA_V2_1_1P6(3),
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>TBEAM = 4;</code>
     */
    TBEAM(4),
    /**
     * <pre>
     * The original heltec WiFi_Lora_32_V2, which had battery voltage sensing hooked to GPIO 13
     * (see HELTEC_V2 for the new version).
     * </pre>
     *
     * <code>HELTEC_V2_0 = 5;</code>
     */
    HELTEC_V2_0(5),
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>TBEAM_V0P7 = 6;</code>
     */
    TBEAM_V0P7(6),
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>T_ECHO = 7;</code>
     */
    T_ECHO(7),
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>TLORA_V1_1P3 = 8;</code>
     */
    TLORA_V1_1P3(8),
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>RAK4631 = 9;</code>
     */
    RAK4631(9),
    /**
     * <pre>
     * The new version of the heltec WiFi_Lora_32_V2 board that has battery sensing hooked to GPIO 37.
     * Sadly they did not update anything on the silkscreen to identify this board
     * </pre>
     *
     * <code>HELTEC_V2_1 = 10;</code>
     */
    HELTEC_V2_1(10),
    /**
     * <pre>
     * Ancient heltec WiFi_Lora_32 board
     * </pre>
     *
     * <code>HELTEC_V1 = 11;</code>
     */
    HELTEC_V1(11),
    /**
     * <pre>
     * New T-BEAM with ESP32-S3 CPU
     * </pre>
     *
     * <code>LILYGO_TBEAM_S3_CORE = 12;</code>
     */
    LILYGO_TBEAM_S3_CORE(12),
    /**
     * <pre>
     * RAK WisBlock ESP32 core: https://docs.rakwireless.com/Product-Categories/WisBlock/RAK11200/Overview/
     * </pre>
     *
     * <code>RAK11200 = 13;</code>
     */
    RAK11200(13),
    /**
     * <pre>
     * B&amp;Q Consulting Nano Edition G1: https://uniteng.com/wiki/doku.php?id=meshtastic:nano
     * </pre>
     *
     * <code>NANO_G1 = 14;</code>
     */
    NANO_G1(14),
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>TLORA_V2_1_1P8 = 15;</code>
     */
    TLORA_V2_1_1P8(15),
    /**
     * <pre>
     * B&amp;Q Consulting Station Edition G1: https://uniteng.com/wiki/doku.php?id=meshtastic:station
     * </pre>
     *
     * <code>STATION_G1 = 25;</code>
     */
    STATION_G1(25),
    /**
     * <pre>
     * Less common/prototype boards listed here (needs one more byte over the air)
     * </pre>
     *
     * <code>LORA_RELAY_V1 = 32;</code>
     */
    LORA_RELAY_V1(32),
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>NRF52840DK = 33;</code>
     */
    NRF52840DK(33),
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>PPR = 34;</code>
     */
    PPR(34),
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>GENIEBLOCKS = 35;</code>
     */
    GENIEBLOCKS(35),
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>NRF52_UNKNOWN = 36;</code>
     */
    NRF52_UNKNOWN(36),
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>PORTDUINO = 37;</code>
     */
    PORTDUINO(37),
    /**
     * <pre>
     * The simulator built into the android app
     * </pre>
     *
     * <code>ANDROID_SIM = 38;</code>
     */
    ANDROID_SIM(38),
    /**
     * <pre>
     * Custom DIY device based on &#64;NanoVHF schematics: https://github.com/NanoVHF/Meshtastic-DIY/tree/main/Schematics
     * </pre>
     *
     * <code>DIY_V1 = 39;</code>
     */
    DIY_V1(39),
    /**
     * <pre>
     * nRF52840 Dongle : https://www.nordicsemi.com/Products/Development-hardware/nrf52840-dongle/
     * </pre>
     *
     * <code>NRF52840_PCA10059 = 40;</code>
     */
    NRF52840_PCA10059(40),
    /**
     * <pre>
     * Custom Disaster Radio esp32 v3 device https://github.com/sudomesh/disaster-radio/tree/master/hardware/board_esp32_v3
     * </pre>
     *
     * <code>DR_DEV = 41;</code>
     */
    DR_DEV(41),
    /**
     * <pre>
     * M5 esp32 based MCU modules with enclosure, TFT and LORA Shields. All Variants (Basic, Core, Fire, Core2, Paper) https://m5stack.com/
     * </pre>
     *
     * <code>M5STACK = 42;</code>
     */
    M5STACK(42),
    /**
     * <pre>
     * New Heltec LoRA32 with ESP32-S3 CPU
     * </pre>
     *
     * <code>HELTEC_V3 = 43;</code>
     */
    HELTEC_V3(43),
    /**
     * <pre>
     * New Heltec Wireless Stick Lite with ESP32-S3 CPU
     * </pre>
     *
     * <code>HELTEC_WSL_V3 = 44;</code>
     */
    HELTEC_WSL_V3(44),
    /**
     * <pre>
     * Reserved ID For developing private Ports. These will show up in live traffic sparsely, so we can use a high number. Keep it within 8 bits.
     * </pre>
     *
     * <code>PRIVATE_HW = 255;</code>
     */
    PRIVATE_HW(255),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>UNSET = 0;</code>
     */
    public static final int UNSET_VALUE = 0;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>TLORA_V2 = 1;</code>
     */
    public static final int TLORA_V2_VALUE = 1;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>TLORA_V1 = 2;</code>
     */
    public static final int TLORA_V1_VALUE = 2;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>TLORA_V2_1_1P6 = 3;</code>
     */
    public static final int TLORA_V2_1_1P6_VALUE = 3;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>TBEAM = 4;</code>
     */
    public static final int TBEAM_VALUE = 4;
    /**
     * <pre>
     * The original heltec WiFi_Lora_32_V2, which had battery voltage sensing hooked to GPIO 13
     * (see HELTEC_V2 for the new version).
     * </pre>
     *
     * <code>HELTEC_V2_0 = 5;</code>
     */
    public static final int HELTEC_V2_0_VALUE = 5;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>TBEAM_V0P7 = 6;</code>
     */
    public static final int TBEAM_V0P7_VALUE = 6;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>T_ECHO = 7;</code>
     */
    public static final int T_ECHO_VALUE = 7;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>TLORA_V1_1P3 = 8;</code>
     */
    public static final int TLORA_V1_1P3_VALUE = 8;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>RAK4631 = 9;</code>
     */
    public static final int RAK4631_VALUE = 9;
    /**
     * <pre>
     * The new version of the heltec WiFi_Lora_32_V2 board that has battery sensing hooked to GPIO 37.
     * Sadly they did not update anything on the silkscreen to identify this board
     * </pre>
     *
     * <code>HELTEC_V2_1 = 10;</code>
     */
    public static final int HELTEC_V2_1_VALUE = 10;
    /**
     * <pre>
     * Ancient heltec WiFi_Lora_32 board
     * </pre>
     *
     * <code>HELTEC_V1 = 11;</code>
     */
    public static final int HELTEC_V1_VALUE = 11;
    /**
     * <pre>
     * New T-BEAM with ESP32-S3 CPU
     * </pre>
     *
     * <code>LILYGO_TBEAM_S3_CORE = 12;</code>
     */
    public static final int LILYGO_TBEAM_S3_CORE_VALUE = 12;
    /**
     * <pre>
     * RAK WisBlock ESP32 core: https://docs.rakwireless.com/Product-Categories/WisBlock/RAK11200/Overview/
     * </pre>
     *
     * <code>RAK11200 = 13;</code>
     */
    public static final int RAK11200_VALUE = 13;
    /**
     * <pre>
     * B&amp;Q Consulting Nano Edition G1: https://uniteng.com/wiki/doku.php?id=meshtastic:nano
     * </pre>
     *
     * <code>NANO_G1 = 14;</code>
     */
    public static final int NANO_G1_VALUE = 14;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>TLORA_V2_1_1P8 = 15;</code>
     */
    public static final int TLORA_V2_1_1P8_VALUE = 15;
    /**
     * <pre>
     * B&amp;Q Consulting Station Edition G1: https://uniteng.com/wiki/doku.php?id=meshtastic:station
     * </pre>
     *
     * <code>STATION_G1 = 25;</code>
     */
    public static final int STATION_G1_VALUE = 25;
    /**
     * <pre>
     * Less common/prototype boards listed here (needs one more byte over the air)
     * </pre>
     *
     * <code>LORA_RELAY_V1 = 32;</code>
     */
    public static final int LORA_RELAY_V1_VALUE = 32;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>NRF52840DK = 33;</code>
     */
    public static final int NRF52840DK_VALUE = 33;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>PPR = 34;</code>
     */
    public static final int PPR_VALUE = 34;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>GENIEBLOCKS = 35;</code>
     */
    public static final int GENIEBLOCKS_VALUE = 35;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>NRF52_UNKNOWN = 36;</code>
     */
    public static final int NRF52_UNKNOWN_VALUE = 36;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>PORTDUINO = 37;</code>
     */
    public static final int PORTDUINO_VALUE = 37;
    /**
     * <pre>
     * The simulator built into the android app
     * </pre>
     *
     * <code>ANDROID_SIM = 38;</code>
     */
    public static final int ANDROID_SIM_VALUE = 38;
    /**
     * <pre>
     * Custom DIY device based on &#64;NanoVHF schematics: https://github.com/NanoVHF/Meshtastic-DIY/tree/main/Schematics
     * </pre>
     *
     * <code>DIY_V1 = 39;</code>
     */
    public static final int DIY_V1_VALUE = 39;
    /**
     * <pre>
     * nRF52840 Dongle : https://www.nordicsemi.com/Products/Development-hardware/nrf52840-dongle/
     * </pre>
     *
     * <code>NRF52840_PCA10059 = 40;</code>
     */
    public static final int NRF52840_PCA10059_VALUE = 40;
    /**
     * <pre>
     * Custom Disaster Radio esp32 v3 device https://github.com/sudomesh/disaster-radio/tree/master/hardware/board_esp32_v3
     * </pre>
     *
     * <code>DR_DEV = 41;</code>
     */
    public static final int DR_DEV_VALUE = 41;
    /**
     * <pre>
     * M5 esp32 based MCU modules with enclosure, TFT and LORA Shields. All Variants (Basic, Core, Fire, Core2, Paper) https://m5stack.com/
     * </pre>
     *
     * <code>M5STACK = 42;</code>
     */
    public static final int M5STACK_VALUE = 42;
    /**
     * <pre>
     * New Heltec LoRA32 with ESP32-S3 CPU
     * </pre>
     *
     * <code>HELTEC_V3 = 43;</code>
     */
    public static final int HELTEC_V3_VALUE = 43;
    /**
     * <pre>
     * New Heltec Wireless Stick Lite with ESP32-S3 CPU
     * </pre>
     *
     * <code>HELTEC_WSL_V3 = 44;</code>
     */
    public static final int HELTEC_WSL_V3_VALUE = 44;
    /**
     * <pre>
     * Reserved ID For developing private Ports. These will show up in live traffic sparsely, so we can use a high number. Keep it within 8 bits.
     * </pre>
     *
     * <code>PRIVATE_HW = 255;</code>
     */
    public static final int PRIVATE_HW_VALUE = 255;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HardwareModel valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static HardwareModel forNumber(int value) {
      switch (value) {
        case 0: return UNSET;
        case 1: return TLORA_V2;
        case 2: return TLORA_V1;
        case 3: return TLORA_V2_1_1P6;
        case 4: return TBEAM;
        case 5: return HELTEC_V2_0;
        case 6: return TBEAM_V0P7;
        case 7: return T_ECHO;
        case 8: return TLORA_V1_1P3;
        case 9: return RAK4631;
        case 10: return HELTEC_V2_1;
        case 11: return HELTEC_V1;
        case 12: return LILYGO_TBEAM_S3_CORE;
        case 13: return RAK11200;
        case 14: return NANO_G1;
        case 15: return TLORA_V2_1_1P8;
        case 25: return STATION_G1;
        case 32: return LORA_RELAY_V1;
        case 33: return NRF52840DK;
        case 34: return PPR;
        case 35: return GENIEBLOCKS;
        case 36: return NRF52_UNKNOWN;
        case 37: return PORTDUINO;
        case 38: return ANDROID_SIM;
        case 39: return DIY_V1;
        case 40: return NRF52840_PCA10059;
        case 41: return DR_DEV;
        case 42: return M5STACK;
        case 43: return HELTEC_V3;
        case 44: return HELTEC_WSL_V3;
        case 255: return PRIVATE_HW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HardwareModel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        HardwareModel> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HardwareModel>() {
            public HardwareModel findValueByNumber(int number) {
              return HardwareModel.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final HardwareModel[] VALUES = values();

    public static HardwareModel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private HardwareModel(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:HardwareModel)
  }

  /**
   * <pre>
   * Shared constants between device and phone
   * </pre>
   *
   * Protobuf enum {@code Constants}
   */
  public enum Constants
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * First enum must be zero, and we are just using this enum to
     * pass int constants between two very different environments
     * </pre>
     *
     * <code>ZERO = 0;</code>
     */
    ZERO(0),
    /**
     * <pre>
     * From mesh.options
     * note: this payload length is ONLY the bytes that are sent inside of the Data protobuf (excluding protobuf overhead). The 16 byte header is
     * outside of this envelope
     * </pre>
     *
     * <code>DATA_PAYLOAD_LEN = 237;</code>
     */
    DATA_PAYLOAD_LEN(237),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * First enum must be zero, and we are just using this enum to
     * pass int constants between two very different environments
     * </pre>
     *
     * <code>ZERO = 0;</code>
     */
    public static final int ZERO_VALUE = 0;
    /**
     * <pre>
     * From mesh.options
     * note: this payload length is ONLY the bytes that are sent inside of the Data protobuf (excluding protobuf overhead). The 16 byte header is
     * outside of this envelope
     * </pre>
     *
     * <code>DATA_PAYLOAD_LEN = 237;</code>
     */
    public static final int DATA_PAYLOAD_LEN_VALUE = 237;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Constants valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Constants forNumber(int value) {
      switch (value) {
        case 0: return ZERO;
        case 237: return DATA_PAYLOAD_LEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Constants>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Constants> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Constants>() {
            public Constants findValueByNumber(int number) {
              return Constants.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.getDescriptor().getEnumTypes().get(1);
    }

    private static final Constants[] VALUES = values();

    public static Constants valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Constants(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Constants)
  }

  /**
   * <pre>
   * Error codes for critical errors
   * The device might report these fault codes on the screen.
   * If you encounter a fault code, please post on the meshtastic.discourse.group
   * and we'll try to help.
   * </pre>
   *
   * Protobuf enum {@code CriticalErrorCode}
   */
  public enum CriticalErrorCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <pre>
     * A software bug was detected while trying to send lora
     * </pre>
     *
     * <code>TX_WATCHDOG = 1;</code>
     */
    TX_WATCHDOG(1),
    /**
     * <pre>
     * A software bug was detected on entry to sleep
     * </pre>
     *
     * <code>SLEEP_ENTER_WAIT = 2;</code>
     */
    SLEEP_ENTER_WAIT(2),
    /**
     * <pre>
     * No Lora radio hardware could be found
     * </pre>
     *
     * <code>NO_RADIO = 3;</code>
     */
    NO_RADIO(3),
    /**
     * <pre>
     * Not normally used
     * </pre>
     *
     * <code>UNSPECIFIED = 4;</code>
     */
    UNSPECIFIED(4),
    /**
     * <pre>
     * We failed while configuring a UBlox GPS
     * </pre>
     *
     * <code>UBLOX_UNIT_FAILED = 5;</code>
     */
    UBLOX_UNIT_FAILED(5),
    /**
     * <pre>
     * This board was expected to have a power management chip and it is missing or broken
     * </pre>
     *
     * <code>NO_AXP192 = 6;</code>
     */
    NO_AXP192(6),
    /**
     * <pre>
     * The channel tried to set a radio setting which is not supported by this chipset,
     * radio comms settings are now undefined.
     * </pre>
     *
     * <code>INVALID_RADIO_SETTING = 7;</code>
     */
    INVALID_RADIO_SETTING(7),
    /**
     * <pre>
     * Radio transmit hardware failure. We sent data to the radio chip, but it didn't
     * reply with an interrupt.
     * </pre>
     *
     * <code>TRANSMIT_FAILED = 8;</code>
     */
    TRANSMIT_FAILED(8),
    /**
     * <pre>
     * We detected that the main CPU voltage dropped below the minumum acceptable value
     * </pre>
     *
     * <code>BROWNOUT = 9;</code>
     */
    BROWNOUT(9),
    /**
     * <pre>
     * Selftest of SX1262 radio chip failed 
     * </pre>
     *
     * <code>SX1262_FAILURE = 10;</code>
     */
    SX1262_FAILURE(10),
    /**
     * <pre>
     * A (likely software but possibly hardware) failure was detected while trying to send packets.
     * If this occurs on your board, please post in the forum so that we can ask you to collect some information to allow fixing this bug
     * </pre>
     *
     * <code>RADIO_SPI_BUG = 11;</code>
     */
    RADIO_SPI_BUG(11),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <pre>
     * A software bug was detected while trying to send lora
     * </pre>
     *
     * <code>TX_WATCHDOG = 1;</code>
     */
    public static final int TX_WATCHDOG_VALUE = 1;
    /**
     * <pre>
     * A software bug was detected on entry to sleep
     * </pre>
     *
     * <code>SLEEP_ENTER_WAIT = 2;</code>
     */
    public static final int SLEEP_ENTER_WAIT_VALUE = 2;
    /**
     * <pre>
     * No Lora radio hardware could be found
     * </pre>
     *
     * <code>NO_RADIO = 3;</code>
     */
    public static final int NO_RADIO_VALUE = 3;
    /**
     * <pre>
     * Not normally used
     * </pre>
     *
     * <code>UNSPECIFIED = 4;</code>
     */
    public static final int UNSPECIFIED_VALUE = 4;
    /**
     * <pre>
     * We failed while configuring a UBlox GPS
     * </pre>
     *
     * <code>UBLOX_UNIT_FAILED = 5;</code>
     */
    public static final int UBLOX_UNIT_FAILED_VALUE = 5;
    /**
     * <pre>
     * This board was expected to have a power management chip and it is missing or broken
     * </pre>
     *
     * <code>NO_AXP192 = 6;</code>
     */
    public static final int NO_AXP192_VALUE = 6;
    /**
     * <pre>
     * The channel tried to set a radio setting which is not supported by this chipset,
     * radio comms settings are now undefined.
     * </pre>
     *
     * <code>INVALID_RADIO_SETTING = 7;</code>
     */
    public static final int INVALID_RADIO_SETTING_VALUE = 7;
    /**
     * <pre>
     * Radio transmit hardware failure. We sent data to the radio chip, but it didn't
     * reply with an interrupt.
     * </pre>
     *
     * <code>TRANSMIT_FAILED = 8;</code>
     */
    public static final int TRANSMIT_FAILED_VALUE = 8;
    /**
     * <pre>
     * We detected that the main CPU voltage dropped below the minumum acceptable value
     * </pre>
     *
     * <code>BROWNOUT = 9;</code>
     */
    public static final int BROWNOUT_VALUE = 9;
    /**
     * <pre>
     * Selftest of SX1262 radio chip failed 
     * </pre>
     *
     * <code>SX1262_FAILURE = 10;</code>
     */
    public static final int SX1262_FAILURE_VALUE = 10;
    /**
     * <pre>
     * A (likely software but possibly hardware) failure was detected while trying to send packets.
     * If this occurs on your board, please post in the forum so that we can ask you to collect some information to allow fixing this bug
     * </pre>
     *
     * <code>RADIO_SPI_BUG = 11;</code>
     */
    public static final int RADIO_SPI_BUG_VALUE = 11;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CriticalErrorCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CriticalErrorCode forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return TX_WATCHDOG;
        case 2: return SLEEP_ENTER_WAIT;
        case 3: return NO_RADIO;
        case 4: return UNSPECIFIED;
        case 5: return UBLOX_UNIT_FAILED;
        case 6: return NO_AXP192;
        case 7: return INVALID_RADIO_SETTING;
        case 8: return TRANSMIT_FAILED;
        case 9: return BROWNOUT;
        case 10: return SX1262_FAILURE;
        case 11: return RADIO_SPI_BUG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CriticalErrorCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CriticalErrorCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CriticalErrorCode>() {
            public CriticalErrorCode findValueByNumber(int number) {
              return CriticalErrorCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.getDescriptor().getEnumTypes().get(2);
    }

    private static final CriticalErrorCode[] VALUES = values();

    public static CriticalErrorCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CriticalErrorCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CriticalErrorCode)
  }

  public interface PositionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Position)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The new preferred location encoding, multiply by 1e-7 to get degrees
     * in floating point
     * </pre>
     *
     * <code>sfixed32 latitude_i = 1;</code>
     * @return The latitudeI.
     */
    int getLatitudeI();

    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>sfixed32 longitude_i = 2;</code>
     * @return The longitudeI.
     */
    int getLongitudeI();

    /**
     * <pre>
     * In meters above MSL (but see issue #359)
     * </pre>
     *
     * <code>int32 altitude = 3;</code>
     * @return The altitude.
     */
    int getAltitude();

    /**
     * <pre>
     * This is usually not sent over the mesh (to save space), but it is sent
     * from the phone so that the local device can set its RTC If it is sent over
     * the mesh (because there are devices on the mesh without GPS), it will only
     * be sent by devices which has a hardware GPS clock.
     * seconds since 1970
     * </pre>
     *
     * <code>fixed32 time = 4;</code>
     * @return The time.
     */
    int getTime();

    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>.Position.LocSource location_source = 5;</code>
     * @return The enum numeric value on the wire for locationSource.
     */
    int getLocationSourceValue();
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>.Position.LocSource location_source = 5;</code>
     * @return The locationSource.
     */
    com.geeksville.mesh.MeshProtos.Position.LocSource getLocationSource();

    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>.Position.AltSource altitude_source = 6;</code>
     * @return The enum numeric value on the wire for altitudeSource.
     */
    int getAltitudeSourceValue();
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>.Position.AltSource altitude_source = 6;</code>
     * @return The altitudeSource.
     */
    com.geeksville.mesh.MeshProtos.Position.AltSource getAltitudeSource();

    /**
     * <pre>
     * Positional timestamp (actual timestamp of GPS solution) in integer epoch seconds
     * </pre>
     *
     * <code>fixed32 timestamp = 7;</code>
     * @return The timestamp.
     */
    int getTimestamp();

    /**
     * <pre>
     * Pos. timestamp milliseconds adjustment (rarely available or required)
     * </pre>
     *
     * <code>int32 timestamp_millis_adjust = 8;</code>
     * @return The timestampMillisAdjust.
     */
    int getTimestampMillisAdjust();

    /**
     * <pre>
     * HAE altitude in meters - can be used instead of MSL altitude
     * </pre>
     *
     * <code>sint32 altitude_hae = 9;</code>
     * @return The altitudeHae.
     */
    int getAltitudeHae();

    /**
     * <pre>
     * Geoidal separation in meters
     * </pre>
     *
     * <code>sint32 altitude_geoidal_separation = 10;</code>
     * @return The altitudeGeoidalSeparation.
     */
    int getAltitudeGeoidalSeparation();

    /**
     * <pre>
     * Horizontal, Vertical and Position Dilution of Precision, in 1/100 units
     * - PDOP is sufficient for most cases
     * - for higher precision scenarios, HDOP and VDOP can be used instead,
     *   in which case PDOP becomes redundant (PDOP=sqrt(HDOP^2 + VDOP^2))
     * TODO: REMOVE/INTEGRATE
     * </pre>
     *
     * <code>uint32 PDOP = 11;</code>
     * @return The pDOP.
     */
    int getPDOP();

    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>uint32 HDOP = 12;</code>
     * @return The hDOP.
     */
    int getHDOP();

    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>uint32 VDOP = 13;</code>
     * @return The vDOP.
     */
    int getVDOP();

    /**
     * <pre>
     * GPS accuracy (a hardware specific constant) in mm
     *   multiplied with DOP to calculate positional accuracy
     * Default: "'bout three meters-ish" :)
     * </pre>
     *
     * <code>uint32 gps_accuracy = 14;</code>
     * @return The gpsAccuracy.
     */
    int getGpsAccuracy();

    /**
     * <pre>
     * Ground speed in m/s and True North TRACK in 1/100 degrees
     * Clarification of terms:
     * - "track" is the direction of motion (measured in horizontal plane)
     * - "heading" is where the fuselage points (measured in horizontal plane)
     * - "yaw" indicates a relative rotation about the vertical axis
     * TODO: REMOVE/INTEGRATE
     * </pre>
     *
     * <code>uint32 ground_speed = 15;</code>
     * @return The groundSpeed.
     */
    int getGroundSpeed();

    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>uint32 ground_track = 16;</code>
     * @return The groundTrack.
     */
    int getGroundTrack();

    /**
     * <pre>
     * GPS fix quality (from NMEA GxGGA statement or similar)
     * </pre>
     *
     * <code>uint32 fix_quality = 17;</code>
     * @return The fixQuality.
     */
    int getFixQuality();

    /**
     * <pre>
     * GPS fix type 2D/3D (from NMEA GxGSA statement)
     * </pre>
     *
     * <code>uint32 fix_type = 18;</code>
     * @return The fixType.
     */
    int getFixType();

    /**
     * <pre>
     * GPS "Satellites in View" number
     * </pre>
     *
     * <code>uint32 sats_in_view = 19;</code>
     * @return The satsInView.
     */
    int getSatsInView();

    /**
     * <pre>
     * Sensor ID - in case multiple positioning sensors are being used
     * </pre>
     *
     * <code>uint32 sensor_id = 20;</code>
     * @return The sensorId.
     */
    int getSensorId();

    /**
     * <pre>
     * Estimated/expected time (in seconds) until next update:
     * - if we update at fixed intervals of X seconds, use X
     * - if we update at dynamic intervals (based on relative movement etc),
     *   but "AT LEAST every Y seconds", use Y
     * </pre>
     *
     * <code>uint32 next_update = 21;</code>
     * @return The nextUpdate.
     */
    int getNextUpdate();

    /**
     * <pre>
     * A sequence number, incremented with each Position message to help
     *   detect lost updates if needed
     * </pre>
     *
     * <code>uint32 seq_number = 22;</code>
     * @return The seqNumber.
     */
    int getSeqNumber();
  }
  /**
   * <pre>
   * a gps position
   * </pre>
   *
   * Protobuf type {@code Position}
   */
  public static final class Position extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Position)
      PositionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Position.newBuilder() to construct.
    private Position(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Position() {
      locationSource_ = 0;
      altitudeSource_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Position();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_Position_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_Position_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.Position.class, com.geeksville.mesh.MeshProtos.Position.Builder.class);
    }

    /**
     * <pre>
     * How the location was acquired: manual, onboard GPS, external (EUD) GPS
     * </pre>
     *
     * Protobuf enum {@code Position.LocSource}
     */
    public enum LocSource
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>LOC_UNSET = 0;</code>
       */
      LOC_UNSET(0),
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>LOC_MANUAL = 1;</code>
       */
      LOC_MANUAL(1),
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>LOC_INTERNAL = 2;</code>
       */
      LOC_INTERNAL(2),
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>LOC_EXTERNAL = 3;</code>
       */
      LOC_EXTERNAL(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>LOC_UNSET = 0;</code>
       */
      public static final int LOC_UNSET_VALUE = 0;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>LOC_MANUAL = 1;</code>
       */
      public static final int LOC_MANUAL_VALUE = 1;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>LOC_INTERNAL = 2;</code>
       */
      public static final int LOC_INTERNAL_VALUE = 2;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>LOC_EXTERNAL = 3;</code>
       */
      public static final int LOC_EXTERNAL_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LocSource valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static LocSource forNumber(int value) {
        switch (value) {
          case 0: return LOC_UNSET;
          case 1: return LOC_MANUAL;
          case 2: return LOC_INTERNAL;
          case 3: return LOC_EXTERNAL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LocSource>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LocSource> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LocSource>() {
              public LocSource findValueByNumber(int number) {
                return LocSource.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.Position.getDescriptor().getEnumTypes().get(0);
      }

      private static final LocSource[] VALUES = values();

      public static LocSource valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LocSource(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Position.LocSource)
    }

    /**
     * <pre>
     * How the altitude was acquired: manual, GPS int/ext, etc
     * Default: same as location_source if present
     * </pre>
     *
     * Protobuf enum {@code Position.AltSource}
     */
    public enum AltSource
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>ALT_UNSET = 0;</code>
       */
      ALT_UNSET(0),
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>ALT_MANUAL = 1;</code>
       */
      ALT_MANUAL(1),
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>ALT_INTERNAL = 2;</code>
       */
      ALT_INTERNAL(2),
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>ALT_EXTERNAL = 3;</code>
       */
      ALT_EXTERNAL(3),
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>ALT_BAROMETRIC = 4;</code>
       */
      ALT_BAROMETRIC(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>ALT_UNSET = 0;</code>
       */
      public static final int ALT_UNSET_VALUE = 0;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>ALT_MANUAL = 1;</code>
       */
      public static final int ALT_MANUAL_VALUE = 1;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>ALT_INTERNAL = 2;</code>
       */
      public static final int ALT_INTERNAL_VALUE = 2;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>ALT_EXTERNAL = 3;</code>
       */
      public static final int ALT_EXTERNAL_VALUE = 3;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>ALT_BAROMETRIC = 4;</code>
       */
      public static final int ALT_BAROMETRIC_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AltSource valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static AltSource forNumber(int value) {
        switch (value) {
          case 0: return ALT_UNSET;
          case 1: return ALT_MANUAL;
          case 2: return ALT_INTERNAL;
          case 3: return ALT_EXTERNAL;
          case 4: return ALT_BAROMETRIC;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AltSource>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AltSource> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AltSource>() {
              public AltSource findValueByNumber(int number) {
                return AltSource.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.Position.getDescriptor().getEnumTypes().get(1);
      }

      private static final AltSource[] VALUES = values();

      public static AltSource valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private AltSource(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Position.AltSource)
    }

    public static final int LATITUDE_I_FIELD_NUMBER = 1;
    private int latitudeI_ = 0;
    /**
     * <pre>
     * The new preferred location encoding, multiply by 1e-7 to get degrees
     * in floating point
     * </pre>
     *
     * <code>sfixed32 latitude_i = 1;</code>
     * @return The latitudeI.
     */
    @java.lang.Override
    public int getLatitudeI() {
      return latitudeI_;
    }

    public static final int LONGITUDE_I_FIELD_NUMBER = 2;
    private int longitudeI_ = 0;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>sfixed32 longitude_i = 2;</code>
     * @return The longitudeI.
     */
    @java.lang.Override
    public int getLongitudeI() {
      return longitudeI_;
    }

    public static final int ALTITUDE_FIELD_NUMBER = 3;
    private int altitude_ = 0;
    /**
     * <pre>
     * In meters above MSL (but see issue #359)
     * </pre>
     *
     * <code>int32 altitude = 3;</code>
     * @return The altitude.
     */
    @java.lang.Override
    public int getAltitude() {
      return altitude_;
    }

    public static final int TIME_FIELD_NUMBER = 4;
    private int time_ = 0;
    /**
     * <pre>
     * This is usually not sent over the mesh (to save space), but it is sent
     * from the phone so that the local device can set its RTC If it is sent over
     * the mesh (because there are devices on the mesh without GPS), it will only
     * be sent by devices which has a hardware GPS clock.
     * seconds since 1970
     * </pre>
     *
     * <code>fixed32 time = 4;</code>
     * @return The time.
     */
    @java.lang.Override
    public int getTime() {
      return time_;
    }

    public static final int LOCATION_SOURCE_FIELD_NUMBER = 5;
    private int locationSource_ = 0;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>.Position.LocSource location_source = 5;</code>
     * @return The enum numeric value on the wire for locationSource.
     */
    @java.lang.Override public int getLocationSourceValue() {
      return locationSource_;
    }
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>.Position.LocSource location_source = 5;</code>
     * @return The locationSource.
     */
    @java.lang.Override public com.geeksville.mesh.MeshProtos.Position.LocSource getLocationSource() {
      com.geeksville.mesh.MeshProtos.Position.LocSource result = com.geeksville.mesh.MeshProtos.Position.LocSource.forNumber(locationSource_);
      return result == null ? com.geeksville.mesh.MeshProtos.Position.LocSource.UNRECOGNIZED : result;
    }

    public static final int ALTITUDE_SOURCE_FIELD_NUMBER = 6;
    private int altitudeSource_ = 0;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>.Position.AltSource altitude_source = 6;</code>
     * @return The enum numeric value on the wire for altitudeSource.
     */
    @java.lang.Override public int getAltitudeSourceValue() {
      return altitudeSource_;
    }
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>.Position.AltSource altitude_source = 6;</code>
     * @return The altitudeSource.
     */
    @java.lang.Override public com.geeksville.mesh.MeshProtos.Position.AltSource getAltitudeSource() {
      com.geeksville.mesh.MeshProtos.Position.AltSource result = com.geeksville.mesh.MeshProtos.Position.AltSource.forNumber(altitudeSource_);
      return result == null ? com.geeksville.mesh.MeshProtos.Position.AltSource.UNRECOGNIZED : result;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 7;
    private int timestamp_ = 0;
    /**
     * <pre>
     * Positional timestamp (actual timestamp of GPS solution) in integer epoch seconds
     * </pre>
     *
     * <code>fixed32 timestamp = 7;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int TIMESTAMP_MILLIS_ADJUST_FIELD_NUMBER = 8;
    private int timestampMillisAdjust_ = 0;
    /**
     * <pre>
     * Pos. timestamp milliseconds adjustment (rarely available or required)
     * </pre>
     *
     * <code>int32 timestamp_millis_adjust = 8;</code>
     * @return The timestampMillisAdjust.
     */
    @java.lang.Override
    public int getTimestampMillisAdjust() {
      return timestampMillisAdjust_;
    }

    public static final int ALTITUDE_HAE_FIELD_NUMBER = 9;
    private int altitudeHae_ = 0;
    /**
     * <pre>
     * HAE altitude in meters - can be used instead of MSL altitude
     * </pre>
     *
     * <code>sint32 altitude_hae = 9;</code>
     * @return The altitudeHae.
     */
    @java.lang.Override
    public int getAltitudeHae() {
      return altitudeHae_;
    }

    public static final int ALTITUDE_GEOIDAL_SEPARATION_FIELD_NUMBER = 10;
    private int altitudeGeoidalSeparation_ = 0;
    /**
     * <pre>
     * Geoidal separation in meters
     * </pre>
     *
     * <code>sint32 altitude_geoidal_separation = 10;</code>
     * @return The altitudeGeoidalSeparation.
     */
    @java.lang.Override
    public int getAltitudeGeoidalSeparation() {
      return altitudeGeoidalSeparation_;
    }

    public static final int PDOP_FIELD_NUMBER = 11;
    private int pDOP_ = 0;
    /**
     * <pre>
     * Horizontal, Vertical and Position Dilution of Precision, in 1/100 units
     * - PDOP is sufficient for most cases
     * - for higher precision scenarios, HDOP and VDOP can be used instead,
     *   in which case PDOP becomes redundant (PDOP=sqrt(HDOP^2 + VDOP^2))
     * TODO: REMOVE/INTEGRATE
     * </pre>
     *
     * <code>uint32 PDOP = 11;</code>
     * @return The pDOP.
     */
    @java.lang.Override
    public int getPDOP() {
      return pDOP_;
    }

    public static final int HDOP_FIELD_NUMBER = 12;
    private int hDOP_ = 0;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>uint32 HDOP = 12;</code>
     * @return The hDOP.
     */
    @java.lang.Override
    public int getHDOP() {
      return hDOP_;
    }

    public static final int VDOP_FIELD_NUMBER = 13;
    private int vDOP_ = 0;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>uint32 VDOP = 13;</code>
     * @return The vDOP.
     */
    @java.lang.Override
    public int getVDOP() {
      return vDOP_;
    }

    public static final int GPS_ACCURACY_FIELD_NUMBER = 14;
    private int gpsAccuracy_ = 0;
    /**
     * <pre>
     * GPS accuracy (a hardware specific constant) in mm
     *   multiplied with DOP to calculate positional accuracy
     * Default: "'bout three meters-ish" :)
     * </pre>
     *
     * <code>uint32 gps_accuracy = 14;</code>
     * @return The gpsAccuracy.
     */
    @java.lang.Override
    public int getGpsAccuracy() {
      return gpsAccuracy_;
    }

    public static final int GROUND_SPEED_FIELD_NUMBER = 15;
    private int groundSpeed_ = 0;
    /**
     * <pre>
     * Ground speed in m/s and True North TRACK in 1/100 degrees
     * Clarification of terms:
     * - "track" is the direction of motion (measured in horizontal plane)
     * - "heading" is where the fuselage points (measured in horizontal plane)
     * - "yaw" indicates a relative rotation about the vertical axis
     * TODO: REMOVE/INTEGRATE
     * </pre>
     *
     * <code>uint32 ground_speed = 15;</code>
     * @return The groundSpeed.
     */
    @java.lang.Override
    public int getGroundSpeed() {
      return groundSpeed_;
    }

    public static final int GROUND_TRACK_FIELD_NUMBER = 16;
    private int groundTrack_ = 0;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>uint32 ground_track = 16;</code>
     * @return The groundTrack.
     */
    @java.lang.Override
    public int getGroundTrack() {
      return groundTrack_;
    }

    public static final int FIX_QUALITY_FIELD_NUMBER = 17;
    private int fixQuality_ = 0;
    /**
     * <pre>
     * GPS fix quality (from NMEA GxGGA statement or similar)
     * </pre>
     *
     * <code>uint32 fix_quality = 17;</code>
     * @return The fixQuality.
     */
    @java.lang.Override
    public int getFixQuality() {
      return fixQuality_;
    }

    public static final int FIX_TYPE_FIELD_NUMBER = 18;
    private int fixType_ = 0;
    /**
     * <pre>
     * GPS fix type 2D/3D (from NMEA GxGSA statement)
     * </pre>
     *
     * <code>uint32 fix_type = 18;</code>
     * @return The fixType.
     */
    @java.lang.Override
    public int getFixType() {
      return fixType_;
    }

    public static final int SATS_IN_VIEW_FIELD_NUMBER = 19;
    private int satsInView_ = 0;
    /**
     * <pre>
     * GPS "Satellites in View" number
     * </pre>
     *
     * <code>uint32 sats_in_view = 19;</code>
     * @return The satsInView.
     */
    @java.lang.Override
    public int getSatsInView() {
      return satsInView_;
    }

    public static final int SENSOR_ID_FIELD_NUMBER = 20;
    private int sensorId_ = 0;
    /**
     * <pre>
     * Sensor ID - in case multiple positioning sensors are being used
     * </pre>
     *
     * <code>uint32 sensor_id = 20;</code>
     * @return The sensorId.
     */
    @java.lang.Override
    public int getSensorId() {
      return sensorId_;
    }

    public static final int NEXT_UPDATE_FIELD_NUMBER = 21;
    private int nextUpdate_ = 0;
    /**
     * <pre>
     * Estimated/expected time (in seconds) until next update:
     * - if we update at fixed intervals of X seconds, use X
     * - if we update at dynamic intervals (based on relative movement etc),
     *   but "AT LEAST every Y seconds", use Y
     * </pre>
     *
     * <code>uint32 next_update = 21;</code>
     * @return The nextUpdate.
     */
    @java.lang.Override
    public int getNextUpdate() {
      return nextUpdate_;
    }

    public static final int SEQ_NUMBER_FIELD_NUMBER = 22;
    private int seqNumber_ = 0;
    /**
     * <pre>
     * A sequence number, incremented with each Position message to help
     *   detect lost updates if needed
     * </pre>
     *
     * <code>uint32 seq_number = 22;</code>
     * @return The seqNumber.
     */
    @java.lang.Override
    public int getSeqNumber() {
      return seqNumber_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (latitudeI_ != 0) {
        output.writeSFixed32(1, latitudeI_);
      }
      if (longitudeI_ != 0) {
        output.writeSFixed32(2, longitudeI_);
      }
      if (altitude_ != 0) {
        output.writeInt32(3, altitude_);
      }
      if (time_ != 0) {
        output.writeFixed32(4, time_);
      }
      if (locationSource_ != com.geeksville.mesh.MeshProtos.Position.LocSource.LOC_UNSET.getNumber()) {
        output.writeEnum(5, locationSource_);
      }
      if (altitudeSource_ != com.geeksville.mesh.MeshProtos.Position.AltSource.ALT_UNSET.getNumber()) {
        output.writeEnum(6, altitudeSource_);
      }
      if (timestamp_ != 0) {
        output.writeFixed32(7, timestamp_);
      }
      if (timestampMillisAdjust_ != 0) {
        output.writeInt32(8, timestampMillisAdjust_);
      }
      if (altitudeHae_ != 0) {
        output.writeSInt32(9, altitudeHae_);
      }
      if (altitudeGeoidalSeparation_ != 0) {
        output.writeSInt32(10, altitudeGeoidalSeparation_);
      }
      if (pDOP_ != 0) {
        output.writeUInt32(11, pDOP_);
      }
      if (hDOP_ != 0) {
        output.writeUInt32(12, hDOP_);
      }
      if (vDOP_ != 0) {
        output.writeUInt32(13, vDOP_);
      }
      if (gpsAccuracy_ != 0) {
        output.writeUInt32(14, gpsAccuracy_);
      }
      if (groundSpeed_ != 0) {
        output.writeUInt32(15, groundSpeed_);
      }
      if (groundTrack_ != 0) {
        output.writeUInt32(16, groundTrack_);
      }
      if (fixQuality_ != 0) {
        output.writeUInt32(17, fixQuality_);
      }
      if (fixType_ != 0) {
        output.writeUInt32(18, fixType_);
      }
      if (satsInView_ != 0) {
        output.writeUInt32(19, satsInView_);
      }
      if (sensorId_ != 0) {
        output.writeUInt32(20, sensorId_);
      }
      if (nextUpdate_ != 0) {
        output.writeUInt32(21, nextUpdate_);
      }
      if (seqNumber_ != 0) {
        output.writeUInt32(22, seqNumber_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (latitudeI_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(1, latitudeI_);
      }
      if (longitudeI_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(2, longitudeI_);
      }
      if (altitude_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, altitude_);
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, time_);
      }
      if (locationSource_ != com.geeksville.mesh.MeshProtos.Position.LocSource.LOC_UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, locationSource_);
      }
      if (altitudeSource_ != com.geeksville.mesh.MeshProtos.Position.AltSource.ALT_UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, altitudeSource_);
      }
      if (timestamp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(7, timestamp_);
      }
      if (timestampMillisAdjust_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, timestampMillisAdjust_);
      }
      if (altitudeHae_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(9, altitudeHae_);
      }
      if (altitudeGeoidalSeparation_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(10, altitudeGeoidalSeparation_);
      }
      if (pDOP_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, pDOP_);
      }
      if (hDOP_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, hDOP_);
      }
      if (vDOP_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, vDOP_);
      }
      if (gpsAccuracy_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, gpsAccuracy_);
      }
      if (groundSpeed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, groundSpeed_);
      }
      if (groundTrack_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, groundTrack_);
      }
      if (fixQuality_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, fixQuality_);
      }
      if (fixType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, fixType_);
      }
      if (satsInView_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, satsInView_);
      }
      if (sensorId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, sensorId_);
      }
      if (nextUpdate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, nextUpdate_);
      }
      if (seqNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, seqNumber_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.Position)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.Position other = (com.geeksville.mesh.MeshProtos.Position) obj;

      if (getLatitudeI()
          != other.getLatitudeI()) return false;
      if (getLongitudeI()
          != other.getLongitudeI()) return false;
      if (getAltitude()
          != other.getAltitude()) return false;
      if (getTime()
          != other.getTime()) return false;
      if (locationSource_ != other.locationSource_) return false;
      if (altitudeSource_ != other.altitudeSource_) return false;
      if (getTimestamp()
          != other.getTimestamp()) return false;
      if (getTimestampMillisAdjust()
          != other.getTimestampMillisAdjust()) return false;
      if (getAltitudeHae()
          != other.getAltitudeHae()) return false;
      if (getAltitudeGeoidalSeparation()
          != other.getAltitudeGeoidalSeparation()) return false;
      if (getPDOP()
          != other.getPDOP()) return false;
      if (getHDOP()
          != other.getHDOP()) return false;
      if (getVDOP()
          != other.getVDOP()) return false;
      if (getGpsAccuracy()
          != other.getGpsAccuracy()) return false;
      if (getGroundSpeed()
          != other.getGroundSpeed()) return false;
      if (getGroundTrack()
          != other.getGroundTrack()) return false;
      if (getFixQuality()
          != other.getFixQuality()) return false;
      if (getFixType()
          != other.getFixType()) return false;
      if (getSatsInView()
          != other.getSatsInView()) return false;
      if (getSensorId()
          != other.getSensorId()) return false;
      if (getNextUpdate()
          != other.getNextUpdate()) return false;
      if (getSeqNumber()
          != other.getSeqNumber()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LATITUDE_I_FIELD_NUMBER;
      hash = (53 * hash) + getLatitudeI();
      hash = (37 * hash) + LONGITUDE_I_FIELD_NUMBER;
      hash = (53 * hash) + getLongitudeI();
      hash = (37 * hash) + ALTITUDE_FIELD_NUMBER;
      hash = (53 * hash) + getAltitude();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (37 * hash) + LOCATION_SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + locationSource_;
      hash = (37 * hash) + ALTITUDE_SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + altitudeSource_;
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + getTimestamp();
      hash = (37 * hash) + TIMESTAMP_MILLIS_ADJUST_FIELD_NUMBER;
      hash = (53 * hash) + getTimestampMillisAdjust();
      hash = (37 * hash) + ALTITUDE_HAE_FIELD_NUMBER;
      hash = (53 * hash) + getAltitudeHae();
      hash = (37 * hash) + ALTITUDE_GEOIDAL_SEPARATION_FIELD_NUMBER;
      hash = (53 * hash) + getAltitudeGeoidalSeparation();
      hash = (37 * hash) + PDOP_FIELD_NUMBER;
      hash = (53 * hash) + getPDOP();
      hash = (37 * hash) + HDOP_FIELD_NUMBER;
      hash = (53 * hash) + getHDOP();
      hash = (37 * hash) + VDOP_FIELD_NUMBER;
      hash = (53 * hash) + getVDOP();
      hash = (37 * hash) + GPS_ACCURACY_FIELD_NUMBER;
      hash = (53 * hash) + getGpsAccuracy();
      hash = (37 * hash) + GROUND_SPEED_FIELD_NUMBER;
      hash = (53 * hash) + getGroundSpeed();
      hash = (37 * hash) + GROUND_TRACK_FIELD_NUMBER;
      hash = (53 * hash) + getGroundTrack();
      hash = (37 * hash) + FIX_QUALITY_FIELD_NUMBER;
      hash = (53 * hash) + getFixQuality();
      hash = (37 * hash) + FIX_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getFixType();
      hash = (37 * hash) + SATS_IN_VIEW_FIELD_NUMBER;
      hash = (53 * hash) + getSatsInView();
      hash = (37 * hash) + SENSOR_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSensorId();
      hash = (37 * hash) + NEXT_UPDATE_FIELD_NUMBER;
      hash = (53 * hash) + getNextUpdate();
      hash = (37 * hash) + SEQ_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getSeqNumber();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Position parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.Position prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * a gps position
     * </pre>
     *
     * Protobuf type {@code Position}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Position)
        com.geeksville.mesh.MeshProtos.PositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_Position_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_Position_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.Position.class, com.geeksville.mesh.MeshProtos.Position.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.Position.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        latitudeI_ = 0;
        longitudeI_ = 0;
        altitude_ = 0;
        time_ = 0;
        locationSource_ = 0;
        altitudeSource_ = 0;
        timestamp_ = 0;
        timestampMillisAdjust_ = 0;
        altitudeHae_ = 0;
        altitudeGeoidalSeparation_ = 0;
        pDOP_ = 0;
        hDOP_ = 0;
        vDOP_ = 0;
        gpsAccuracy_ = 0;
        groundSpeed_ = 0;
        groundTrack_ = 0;
        fixQuality_ = 0;
        fixType_ = 0;
        satsInView_ = 0;
        sensorId_ = 0;
        nextUpdate_ = 0;
        seqNumber_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_Position_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Position getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.Position.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Position build() {
        com.geeksville.mesh.MeshProtos.Position result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Position buildPartial() {
        com.geeksville.mesh.MeshProtos.Position result = new com.geeksville.mesh.MeshProtos.Position(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.geeksville.mesh.MeshProtos.Position result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.latitudeI_ = latitudeI_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.longitudeI_ = longitudeI_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.altitude_ = altitude_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.time_ = time_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.locationSource_ = locationSource_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.altitudeSource_ = altitudeSource_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.timestamp_ = timestamp_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.timestampMillisAdjust_ = timestampMillisAdjust_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.altitudeHae_ = altitudeHae_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.altitudeGeoidalSeparation_ = altitudeGeoidalSeparation_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.pDOP_ = pDOP_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.hDOP_ = hDOP_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.vDOP_ = vDOP_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.gpsAccuracy_ = gpsAccuracy_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.groundSpeed_ = groundSpeed_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.groundTrack_ = groundTrack_;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.fixQuality_ = fixQuality_;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.fixType_ = fixType_;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.satsInView_ = satsInView_;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.sensorId_ = sensorId_;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.nextUpdate_ = nextUpdate_;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.seqNumber_ = seqNumber_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.Position) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.Position)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.Position other) {
        if (other == com.geeksville.mesh.MeshProtos.Position.getDefaultInstance()) return this;
        if (other.getLatitudeI() != 0) {
          setLatitudeI(other.getLatitudeI());
        }
        if (other.getLongitudeI() != 0) {
          setLongitudeI(other.getLongitudeI());
        }
        if (other.getAltitude() != 0) {
          setAltitude(other.getAltitude());
        }
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        if (other.locationSource_ != 0) {
          setLocationSourceValue(other.getLocationSourceValue());
        }
        if (other.altitudeSource_ != 0) {
          setAltitudeSourceValue(other.getAltitudeSourceValue());
        }
        if (other.getTimestamp() != 0) {
          setTimestamp(other.getTimestamp());
        }
        if (other.getTimestampMillisAdjust() != 0) {
          setTimestampMillisAdjust(other.getTimestampMillisAdjust());
        }
        if (other.getAltitudeHae() != 0) {
          setAltitudeHae(other.getAltitudeHae());
        }
        if (other.getAltitudeGeoidalSeparation() != 0) {
          setAltitudeGeoidalSeparation(other.getAltitudeGeoidalSeparation());
        }
        if (other.getPDOP() != 0) {
          setPDOP(other.getPDOP());
        }
        if (other.getHDOP() != 0) {
          setHDOP(other.getHDOP());
        }
        if (other.getVDOP() != 0) {
          setVDOP(other.getVDOP());
        }
        if (other.getGpsAccuracy() != 0) {
          setGpsAccuracy(other.getGpsAccuracy());
        }
        if (other.getGroundSpeed() != 0) {
          setGroundSpeed(other.getGroundSpeed());
        }
        if (other.getGroundTrack() != 0) {
          setGroundTrack(other.getGroundTrack());
        }
        if (other.getFixQuality() != 0) {
          setFixQuality(other.getFixQuality());
        }
        if (other.getFixType() != 0) {
          setFixType(other.getFixType());
        }
        if (other.getSatsInView() != 0) {
          setSatsInView(other.getSatsInView());
        }
        if (other.getSensorId() != 0) {
          setSensorId(other.getSensorId());
        }
        if (other.getNextUpdate() != 0) {
          setNextUpdate(other.getNextUpdate());
        }
        if (other.getSeqNumber() != 0) {
          setSeqNumber(other.getSeqNumber());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                latitudeI_ = input.readSFixed32();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              case 21: {
                longitudeI_ = input.readSFixed32();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              case 24: {
                altitude_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 37: {
                time_ = input.readFixed32();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              case 40: {
                locationSource_ = input.readEnum();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                altitudeSource_ = input.readEnum();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 61: {
                timestamp_ = input.readFixed32();
                bitField0_ |= 0x00000040;
                break;
              } // case 61
              case 64: {
                timestampMillisAdjust_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                altitudeHae_ = input.readSInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                altitudeGeoidalSeparation_ = input.readSInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                pDOP_ = input.readUInt32();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                hDOP_ = input.readUInt32();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                vDOP_ = input.readUInt32();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 112: {
                gpsAccuracy_ = input.readUInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 120: {
                groundSpeed_ = input.readUInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 128: {
                groundTrack_ = input.readUInt32();
                bitField0_ |= 0x00008000;
                break;
              } // case 128
              case 136: {
                fixQuality_ = input.readUInt32();
                bitField0_ |= 0x00010000;
                break;
              } // case 136
              case 144: {
                fixType_ = input.readUInt32();
                bitField0_ |= 0x00020000;
                break;
              } // case 144
              case 152: {
                satsInView_ = input.readUInt32();
                bitField0_ |= 0x00040000;
                break;
              } // case 152
              case 160: {
                sensorId_ = input.readUInt32();
                bitField0_ |= 0x00080000;
                break;
              } // case 160
              case 168: {
                nextUpdate_ = input.readUInt32();
                bitField0_ |= 0x00100000;
                break;
              } // case 168
              case 176: {
                seqNumber_ = input.readUInt32();
                bitField0_ |= 0x00200000;
                break;
              } // case 176
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int latitudeI_ ;
      /**
       * <pre>
       * The new preferred location encoding, multiply by 1e-7 to get degrees
       * in floating point
       * </pre>
       *
       * <code>sfixed32 latitude_i = 1;</code>
       * @return The latitudeI.
       */
      @java.lang.Override
      public int getLatitudeI() {
        return latitudeI_;
      }
      /**
       * <pre>
       * The new preferred location encoding, multiply by 1e-7 to get degrees
       * in floating point
       * </pre>
       *
       * <code>sfixed32 latitude_i = 1;</code>
       * @param value The latitudeI to set.
       * @return This builder for chaining.
       */
      public Builder setLatitudeI(int value) {
        
        latitudeI_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The new preferred location encoding, multiply by 1e-7 to get degrees
       * in floating point
       * </pre>
       *
       * <code>sfixed32 latitude_i = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLatitudeI() {
        bitField0_ = (bitField0_ & ~0x00000001);
        latitudeI_ = 0;
        onChanged();
        return this;
      }

      private int longitudeI_ ;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>sfixed32 longitude_i = 2;</code>
       * @return The longitudeI.
       */
      @java.lang.Override
      public int getLongitudeI() {
        return longitudeI_;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>sfixed32 longitude_i = 2;</code>
       * @param value The longitudeI to set.
       * @return This builder for chaining.
       */
      public Builder setLongitudeI(int value) {
        
        longitudeI_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>sfixed32 longitude_i = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongitudeI() {
        bitField0_ = (bitField0_ & ~0x00000002);
        longitudeI_ = 0;
        onChanged();
        return this;
      }

      private int altitude_ ;
      /**
       * <pre>
       * In meters above MSL (but see issue #359)
       * </pre>
       *
       * <code>int32 altitude = 3;</code>
       * @return The altitude.
       */
      @java.lang.Override
      public int getAltitude() {
        return altitude_;
      }
      /**
       * <pre>
       * In meters above MSL (but see issue #359)
       * </pre>
       *
       * <code>int32 altitude = 3;</code>
       * @param value The altitude to set.
       * @return This builder for chaining.
       */
      public Builder setAltitude(int value) {
        
        altitude_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In meters above MSL (but see issue #359)
       * </pre>
       *
       * <code>int32 altitude = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAltitude() {
        bitField0_ = (bitField0_ & ~0x00000004);
        altitude_ = 0;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <pre>
       * This is usually not sent over the mesh (to save space), but it is sent
       * from the phone so that the local device can set its RTC If it is sent over
       * the mesh (because there are devices on the mesh without GPS), it will only
       * be sent by devices which has a hardware GPS clock.
       * seconds since 1970
       * </pre>
       *
       * <code>fixed32 time = 4;</code>
       * @return The time.
       */
      @java.lang.Override
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       * This is usually not sent over the mesh (to save space), but it is sent
       * from the phone so that the local device can set its RTC If it is sent over
       * the mesh (because there are devices on the mesh without GPS), it will only
       * be sent by devices which has a hardware GPS clock.
       * seconds since 1970
       * </pre>
       *
       * <code>fixed32 time = 4;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(int value) {
        
        time_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is usually not sent over the mesh (to save space), but it is sent
       * from the phone so that the local device can set its RTC If it is sent over
       * the mesh (because there are devices on the mesh without GPS), it will only
       * be sent by devices which has a hardware GPS clock.
       * seconds since 1970
       * </pre>
       *
       * <code>fixed32 time = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        time_ = 0;
        onChanged();
        return this;
      }

      private int locationSource_ = 0;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Position.LocSource location_source = 5;</code>
       * @return The enum numeric value on the wire for locationSource.
       */
      @java.lang.Override public int getLocationSourceValue() {
        return locationSource_;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Position.LocSource location_source = 5;</code>
       * @param value The enum numeric value on the wire for locationSource to set.
       * @return This builder for chaining.
       */
      public Builder setLocationSourceValue(int value) {
        locationSource_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Position.LocSource location_source = 5;</code>
       * @return The locationSource.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Position.LocSource getLocationSource() {
        com.geeksville.mesh.MeshProtos.Position.LocSource result = com.geeksville.mesh.MeshProtos.Position.LocSource.forNumber(locationSource_);
        return result == null ? com.geeksville.mesh.MeshProtos.Position.LocSource.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Position.LocSource location_source = 5;</code>
       * @param value The locationSource to set.
       * @return This builder for chaining.
       */
      public Builder setLocationSource(com.geeksville.mesh.MeshProtos.Position.LocSource value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        locationSource_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Position.LocSource location_source = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLocationSource() {
        bitField0_ = (bitField0_ & ~0x00000010);
        locationSource_ = 0;
        onChanged();
        return this;
      }

      private int altitudeSource_ = 0;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Position.AltSource altitude_source = 6;</code>
       * @return The enum numeric value on the wire for altitudeSource.
       */
      @java.lang.Override public int getAltitudeSourceValue() {
        return altitudeSource_;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Position.AltSource altitude_source = 6;</code>
       * @param value The enum numeric value on the wire for altitudeSource to set.
       * @return This builder for chaining.
       */
      public Builder setAltitudeSourceValue(int value) {
        altitudeSource_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Position.AltSource altitude_source = 6;</code>
       * @return The altitudeSource.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Position.AltSource getAltitudeSource() {
        com.geeksville.mesh.MeshProtos.Position.AltSource result = com.geeksville.mesh.MeshProtos.Position.AltSource.forNumber(altitudeSource_);
        return result == null ? com.geeksville.mesh.MeshProtos.Position.AltSource.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Position.AltSource altitude_source = 6;</code>
       * @param value The altitudeSource to set.
       * @return This builder for chaining.
       */
      public Builder setAltitudeSource(com.geeksville.mesh.MeshProtos.Position.AltSource value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        altitudeSource_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Position.AltSource altitude_source = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAltitudeSource() {
        bitField0_ = (bitField0_ & ~0x00000020);
        altitudeSource_ = 0;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <pre>
       * Positional timestamp (actual timestamp of GPS solution) in integer epoch seconds
       * </pre>
       *
       * <code>fixed32 timestamp = 7;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       * Positional timestamp (actual timestamp of GPS solution) in integer epoch seconds
       * </pre>
       *
       * <code>fixed32 timestamp = 7;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(int value) {
        
        timestamp_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Positional timestamp (actual timestamp of GPS solution) in integer epoch seconds
       * </pre>
       *
       * <code>fixed32 timestamp = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private int timestampMillisAdjust_ ;
      /**
       * <pre>
       * Pos. timestamp milliseconds adjustment (rarely available or required)
       * </pre>
       *
       * <code>int32 timestamp_millis_adjust = 8;</code>
       * @return The timestampMillisAdjust.
       */
      @java.lang.Override
      public int getTimestampMillisAdjust() {
        return timestampMillisAdjust_;
      }
      /**
       * <pre>
       * Pos. timestamp milliseconds adjustment (rarely available or required)
       * </pre>
       *
       * <code>int32 timestamp_millis_adjust = 8;</code>
       * @param value The timestampMillisAdjust to set.
       * @return This builder for chaining.
       */
      public Builder setTimestampMillisAdjust(int value) {
        
        timestampMillisAdjust_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Pos. timestamp milliseconds adjustment (rarely available or required)
       * </pre>
       *
       * <code>int32 timestamp_millis_adjust = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestampMillisAdjust() {
        bitField0_ = (bitField0_ & ~0x00000080);
        timestampMillisAdjust_ = 0;
        onChanged();
        return this;
      }

      private int altitudeHae_ ;
      /**
       * <pre>
       * HAE altitude in meters - can be used instead of MSL altitude
       * </pre>
       *
       * <code>sint32 altitude_hae = 9;</code>
       * @return The altitudeHae.
       */
      @java.lang.Override
      public int getAltitudeHae() {
        return altitudeHae_;
      }
      /**
       * <pre>
       * HAE altitude in meters - can be used instead of MSL altitude
       * </pre>
       *
       * <code>sint32 altitude_hae = 9;</code>
       * @param value The altitudeHae to set.
       * @return This builder for chaining.
       */
      public Builder setAltitudeHae(int value) {
        
        altitudeHae_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * HAE altitude in meters - can be used instead of MSL altitude
       * </pre>
       *
       * <code>sint32 altitude_hae = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearAltitudeHae() {
        bitField0_ = (bitField0_ & ~0x00000100);
        altitudeHae_ = 0;
        onChanged();
        return this;
      }

      private int altitudeGeoidalSeparation_ ;
      /**
       * <pre>
       * Geoidal separation in meters
       * </pre>
       *
       * <code>sint32 altitude_geoidal_separation = 10;</code>
       * @return The altitudeGeoidalSeparation.
       */
      @java.lang.Override
      public int getAltitudeGeoidalSeparation() {
        return altitudeGeoidalSeparation_;
      }
      /**
       * <pre>
       * Geoidal separation in meters
       * </pre>
       *
       * <code>sint32 altitude_geoidal_separation = 10;</code>
       * @param value The altitudeGeoidalSeparation to set.
       * @return This builder for chaining.
       */
      public Builder setAltitudeGeoidalSeparation(int value) {
        
        altitudeGeoidalSeparation_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Geoidal separation in meters
       * </pre>
       *
       * <code>sint32 altitude_geoidal_separation = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearAltitudeGeoidalSeparation() {
        bitField0_ = (bitField0_ & ~0x00000200);
        altitudeGeoidalSeparation_ = 0;
        onChanged();
        return this;
      }

      private int pDOP_ ;
      /**
       * <pre>
       * Horizontal, Vertical and Position Dilution of Precision, in 1/100 units
       * - PDOP is sufficient for most cases
       * - for higher precision scenarios, HDOP and VDOP can be used instead,
       *   in which case PDOP becomes redundant (PDOP=sqrt(HDOP^2 + VDOP^2))
       * TODO: REMOVE/INTEGRATE
       * </pre>
       *
       * <code>uint32 PDOP = 11;</code>
       * @return The pDOP.
       */
      @java.lang.Override
      public int getPDOP() {
        return pDOP_;
      }
      /**
       * <pre>
       * Horizontal, Vertical and Position Dilution of Precision, in 1/100 units
       * - PDOP is sufficient for most cases
       * - for higher precision scenarios, HDOP and VDOP can be used instead,
       *   in which case PDOP becomes redundant (PDOP=sqrt(HDOP^2 + VDOP^2))
       * TODO: REMOVE/INTEGRATE
       * </pre>
       *
       * <code>uint32 PDOP = 11;</code>
       * @param value The pDOP to set.
       * @return This builder for chaining.
       */
      public Builder setPDOP(int value) {
        
        pDOP_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Horizontal, Vertical and Position Dilution of Precision, in 1/100 units
       * - PDOP is sufficient for most cases
       * - for higher precision scenarios, HDOP and VDOP can be used instead,
       *   in which case PDOP becomes redundant (PDOP=sqrt(HDOP^2 + VDOP^2))
       * TODO: REMOVE/INTEGRATE
       * </pre>
       *
       * <code>uint32 PDOP = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearPDOP() {
        bitField0_ = (bitField0_ & ~0x00000400);
        pDOP_ = 0;
        onChanged();
        return this;
      }

      private int hDOP_ ;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>uint32 HDOP = 12;</code>
       * @return The hDOP.
       */
      @java.lang.Override
      public int getHDOP() {
        return hDOP_;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>uint32 HDOP = 12;</code>
       * @param value The hDOP to set.
       * @return This builder for chaining.
       */
      public Builder setHDOP(int value) {
        
        hDOP_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>uint32 HDOP = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearHDOP() {
        bitField0_ = (bitField0_ & ~0x00000800);
        hDOP_ = 0;
        onChanged();
        return this;
      }

      private int vDOP_ ;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>uint32 VDOP = 13;</code>
       * @return The vDOP.
       */
      @java.lang.Override
      public int getVDOP() {
        return vDOP_;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>uint32 VDOP = 13;</code>
       * @param value The vDOP to set.
       * @return This builder for chaining.
       */
      public Builder setVDOP(int value) {
        
        vDOP_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>uint32 VDOP = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearVDOP() {
        bitField0_ = (bitField0_ & ~0x00001000);
        vDOP_ = 0;
        onChanged();
        return this;
      }

      private int gpsAccuracy_ ;
      /**
       * <pre>
       * GPS accuracy (a hardware specific constant) in mm
       *   multiplied with DOP to calculate positional accuracy
       * Default: "'bout three meters-ish" :)
       * </pre>
       *
       * <code>uint32 gps_accuracy = 14;</code>
       * @return The gpsAccuracy.
       */
      @java.lang.Override
      public int getGpsAccuracy() {
        return gpsAccuracy_;
      }
      /**
       * <pre>
       * GPS accuracy (a hardware specific constant) in mm
       *   multiplied with DOP to calculate positional accuracy
       * Default: "'bout three meters-ish" :)
       * </pre>
       *
       * <code>uint32 gps_accuracy = 14;</code>
       * @param value The gpsAccuracy to set.
       * @return This builder for chaining.
       */
      public Builder setGpsAccuracy(int value) {
        
        gpsAccuracy_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * GPS accuracy (a hardware specific constant) in mm
       *   multiplied with DOP to calculate positional accuracy
       * Default: "'bout three meters-ish" :)
       * </pre>
       *
       * <code>uint32 gps_accuracy = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearGpsAccuracy() {
        bitField0_ = (bitField0_ & ~0x00002000);
        gpsAccuracy_ = 0;
        onChanged();
        return this;
      }

      private int groundSpeed_ ;
      /**
       * <pre>
       * Ground speed in m/s and True North TRACK in 1/100 degrees
       * Clarification of terms:
       * - "track" is the direction of motion (measured in horizontal plane)
       * - "heading" is where the fuselage points (measured in horizontal plane)
       * - "yaw" indicates a relative rotation about the vertical axis
       * TODO: REMOVE/INTEGRATE
       * </pre>
       *
       * <code>uint32 ground_speed = 15;</code>
       * @return The groundSpeed.
       */
      @java.lang.Override
      public int getGroundSpeed() {
        return groundSpeed_;
      }
      /**
       * <pre>
       * Ground speed in m/s and True North TRACK in 1/100 degrees
       * Clarification of terms:
       * - "track" is the direction of motion (measured in horizontal plane)
       * - "heading" is where the fuselage points (measured in horizontal plane)
       * - "yaw" indicates a relative rotation about the vertical axis
       * TODO: REMOVE/INTEGRATE
       * </pre>
       *
       * <code>uint32 ground_speed = 15;</code>
       * @param value The groundSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setGroundSpeed(int value) {
        
        groundSpeed_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ground speed in m/s and True North TRACK in 1/100 degrees
       * Clarification of terms:
       * - "track" is the direction of motion (measured in horizontal plane)
       * - "heading" is where the fuselage points (measured in horizontal plane)
       * - "yaw" indicates a relative rotation about the vertical axis
       * TODO: REMOVE/INTEGRATE
       * </pre>
       *
       * <code>uint32 ground_speed = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearGroundSpeed() {
        bitField0_ = (bitField0_ & ~0x00004000);
        groundSpeed_ = 0;
        onChanged();
        return this;
      }

      private int groundTrack_ ;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>uint32 ground_track = 16;</code>
       * @return The groundTrack.
       */
      @java.lang.Override
      public int getGroundTrack() {
        return groundTrack_;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>uint32 ground_track = 16;</code>
       * @param value The groundTrack to set.
       * @return This builder for chaining.
       */
      public Builder setGroundTrack(int value) {
        
        groundTrack_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>uint32 ground_track = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearGroundTrack() {
        bitField0_ = (bitField0_ & ~0x00008000);
        groundTrack_ = 0;
        onChanged();
        return this;
      }

      private int fixQuality_ ;
      /**
       * <pre>
       * GPS fix quality (from NMEA GxGGA statement or similar)
       * </pre>
       *
       * <code>uint32 fix_quality = 17;</code>
       * @return The fixQuality.
       */
      @java.lang.Override
      public int getFixQuality() {
        return fixQuality_;
      }
      /**
       * <pre>
       * GPS fix quality (from NMEA GxGGA statement or similar)
       * </pre>
       *
       * <code>uint32 fix_quality = 17;</code>
       * @param value The fixQuality to set.
       * @return This builder for chaining.
       */
      public Builder setFixQuality(int value) {
        
        fixQuality_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * GPS fix quality (from NMEA GxGGA statement or similar)
       * </pre>
       *
       * <code>uint32 fix_quality = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearFixQuality() {
        bitField0_ = (bitField0_ & ~0x00010000);
        fixQuality_ = 0;
        onChanged();
        return this;
      }

      private int fixType_ ;
      /**
       * <pre>
       * GPS fix type 2D/3D (from NMEA GxGSA statement)
       * </pre>
       *
       * <code>uint32 fix_type = 18;</code>
       * @return The fixType.
       */
      @java.lang.Override
      public int getFixType() {
        return fixType_;
      }
      /**
       * <pre>
       * GPS fix type 2D/3D (from NMEA GxGSA statement)
       * </pre>
       *
       * <code>uint32 fix_type = 18;</code>
       * @param value The fixType to set.
       * @return This builder for chaining.
       */
      public Builder setFixType(int value) {
        
        fixType_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * GPS fix type 2D/3D (from NMEA GxGSA statement)
       * </pre>
       *
       * <code>uint32 fix_type = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearFixType() {
        bitField0_ = (bitField0_ & ~0x00020000);
        fixType_ = 0;
        onChanged();
        return this;
      }

      private int satsInView_ ;
      /**
       * <pre>
       * GPS "Satellites in View" number
       * </pre>
       *
       * <code>uint32 sats_in_view = 19;</code>
       * @return The satsInView.
       */
      @java.lang.Override
      public int getSatsInView() {
        return satsInView_;
      }
      /**
       * <pre>
       * GPS "Satellites in View" number
       * </pre>
       *
       * <code>uint32 sats_in_view = 19;</code>
       * @param value The satsInView to set.
       * @return This builder for chaining.
       */
      public Builder setSatsInView(int value) {
        
        satsInView_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * GPS "Satellites in View" number
       * </pre>
       *
       * <code>uint32 sats_in_view = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearSatsInView() {
        bitField0_ = (bitField0_ & ~0x00040000);
        satsInView_ = 0;
        onChanged();
        return this;
      }

      private int sensorId_ ;
      /**
       * <pre>
       * Sensor ID - in case multiple positioning sensors are being used
       * </pre>
       *
       * <code>uint32 sensor_id = 20;</code>
       * @return The sensorId.
       */
      @java.lang.Override
      public int getSensorId() {
        return sensorId_;
      }
      /**
       * <pre>
       * Sensor ID - in case multiple positioning sensors are being used
       * </pre>
       *
       * <code>uint32 sensor_id = 20;</code>
       * @param value The sensorId to set.
       * @return This builder for chaining.
       */
      public Builder setSensorId(int value) {
        
        sensorId_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sensor ID - in case multiple positioning sensors are being used
       * </pre>
       *
       * <code>uint32 sensor_id = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearSensorId() {
        bitField0_ = (bitField0_ & ~0x00080000);
        sensorId_ = 0;
        onChanged();
        return this;
      }

      private int nextUpdate_ ;
      /**
       * <pre>
       * Estimated/expected time (in seconds) until next update:
       * - if we update at fixed intervals of X seconds, use X
       * - if we update at dynamic intervals (based on relative movement etc),
       *   but "AT LEAST every Y seconds", use Y
       * </pre>
       *
       * <code>uint32 next_update = 21;</code>
       * @return The nextUpdate.
       */
      @java.lang.Override
      public int getNextUpdate() {
        return nextUpdate_;
      }
      /**
       * <pre>
       * Estimated/expected time (in seconds) until next update:
       * - if we update at fixed intervals of X seconds, use X
       * - if we update at dynamic intervals (based on relative movement etc),
       *   but "AT LEAST every Y seconds", use Y
       * </pre>
       *
       * <code>uint32 next_update = 21;</code>
       * @param value The nextUpdate to set.
       * @return This builder for chaining.
       */
      public Builder setNextUpdate(int value) {
        
        nextUpdate_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Estimated/expected time (in seconds) until next update:
       * - if we update at fixed intervals of X seconds, use X
       * - if we update at dynamic intervals (based on relative movement etc),
       *   but "AT LEAST every Y seconds", use Y
       * </pre>
       *
       * <code>uint32 next_update = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearNextUpdate() {
        bitField0_ = (bitField0_ & ~0x00100000);
        nextUpdate_ = 0;
        onChanged();
        return this;
      }

      private int seqNumber_ ;
      /**
       * <pre>
       * A sequence number, incremented with each Position message to help
       *   detect lost updates if needed
       * </pre>
       *
       * <code>uint32 seq_number = 22;</code>
       * @return The seqNumber.
       */
      @java.lang.Override
      public int getSeqNumber() {
        return seqNumber_;
      }
      /**
       * <pre>
       * A sequence number, incremented with each Position message to help
       *   detect lost updates if needed
       * </pre>
       *
       * <code>uint32 seq_number = 22;</code>
       * @param value The seqNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSeqNumber(int value) {
        
        seqNumber_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A sequence number, incremented with each Position message to help
       *   detect lost updates if needed
       * </pre>
       *
       * <code>uint32 seq_number = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeqNumber() {
        bitField0_ = (bitField0_ & ~0x00200000);
        seqNumber_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Position)
    }

    // @@protoc_insertion_point(class_scope:Position)
    private static final com.geeksville.mesh.MeshProtos.Position DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.Position();
    }

    public static com.geeksville.mesh.MeshProtos.Position getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Position>
        PARSER = new com.google.protobuf.AbstractParser<Position>() {
      @java.lang.Override
      public Position parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Position> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Position> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.Position getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:User)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A globally unique ID string for this user.
     * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
     * Note: app developers are encouraged to also use the following standard
     * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * A globally unique ID string for this user.
     * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
     * Note: app developers are encouraged to also use the following standard
     * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * A full name for this user, i.e. "Kevin Hester"
     * </pre>
     *
     * <code>string long_name = 2;</code>
     * @return The longName.
     */
    java.lang.String getLongName();
    /**
     * <pre>
     * A full name for this user, i.e. "Kevin Hester"
     * </pre>
     *
     * <code>string long_name = 2;</code>
     * @return The bytes for longName.
     */
    com.google.protobuf.ByteString
        getLongNameBytes();

    /**
     * <pre>
     * A VERY short name, ideally two characters.
     * Suitable for a tiny OLED screen
     * </pre>
     *
     * <code>string short_name = 3;</code>
     * @return The shortName.
     */
    java.lang.String getShortName();
    /**
     * <pre>
     * A VERY short name, ideally two characters.
     * Suitable for a tiny OLED screen
     * </pre>
     *
     * <code>string short_name = 3;</code>
     * @return The bytes for shortName.
     */
    com.google.protobuf.ByteString
        getShortNameBytes();

    /**
     * <pre>
     * This is the addr of the radio.
     * Not populated by the phone, but added by the esp32 when broadcasting
     * </pre>
     *
     * <code>bytes macaddr = 4;</code>
     * @return The macaddr.
     */
    com.google.protobuf.ByteString getMacaddr();

    /**
     * <pre>
     * TBEAM, HELTEC, etc...
     * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
     * Apps will still need the string here for older builds
     * (so OTA update can find the right image), but if the enum is available it will be used instead.
     * </pre>
     *
     * <code>.HardwareModel hw_model = 5;</code>
     * @return The enum numeric value on the wire for hwModel.
     */
    int getHwModelValue();
    /**
     * <pre>
     * TBEAM, HELTEC, etc...
     * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
     * Apps will still need the string here for older builds
     * (so OTA update can find the right image), but if the enum is available it will be used instead.
     * </pre>
     *
     * <code>.HardwareModel hw_model = 5;</code>
     * @return The hwModel.
     */
    com.geeksville.mesh.MeshProtos.HardwareModel getHwModel();

    /**
     * <pre>
     * In some regions Ham radio operators have different bandwidth limitations than others.
     * If this user is a licensed operator, set this flag.
     * Also, "long_name" should be their licence number.
     * </pre>
     *
     * <code>bool is_licensed = 6;</code>
     * @return The isLicensed.
     */
    boolean getIsLicensed();
  }
  /**
   * <pre>
   * Broadcast when a newly powered mesh node wants to find a node num it can use
   * Sent from the phone over bluetooth to set the user id for the owner of this node.
   * Also sent from nodes to each other when a new node signs on (so all clients can have this info)
   * The algorithm is as follows:
   * when a node starts up, it broadcasts their user and the normal flow is for all
   * other nodes to reply with their User as well (so the new node can build its nodedb)
   * If a node ever receives a User (not just the first broadcast) message where
   * the sender node number equals our node number, that indicates a collision has
   * occurred and the following steps should happen:
   * If the receiving node (that was already in the mesh)'s macaddr is LOWER than the
   * new User who just tried to sign in: it gets to keep its nodenum.
   * We send a broadcast message of OUR User (we use a broadcast so that the other node can
   * receive our message, considering we have the same id - it also serves to let
   * observers correct their nodedb) - this case is rare so it should be okay.
   * If any node receives a User where the macaddr is GTE than their local macaddr,
   * they have been vetoed and should pick a new random nodenum (filtering against
   * whatever it knows about the nodedb) and rebroadcast their User.
   * A few nodenums are reserved and will never be requested:
   * 0xff - broadcast
   * 0 through 3 - for future use
   * </pre>
   *
   * Protobuf type {@code User}
   */
  public static final class User extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:User)
      UserOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use User.newBuilder() to construct.
    private User(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private User() {
      id_ = "";
      longName_ = "";
      shortName_ = "";
      macaddr_ = com.google.protobuf.ByteString.EMPTY;
      hwModel_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new User();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_User_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_User_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.User.class, com.geeksville.mesh.MeshProtos.User.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object id_ = "";
    /**
     * <pre>
     * A globally unique ID string for this user.
     * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
     * Note: app developers are encouraged to also use the following standard
     * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A globally unique ID string for this user.
     * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
     * Note: app developers are encouraged to also use the following standard
     * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LONG_NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object longName_ = "";
    /**
     * <pre>
     * A full name for this user, i.e. "Kevin Hester"
     * </pre>
     *
     * <code>string long_name = 2;</code>
     * @return The longName.
     */
    @java.lang.Override
    public java.lang.String getLongName() {
      java.lang.Object ref = longName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        longName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A full name for this user, i.e. "Kevin Hester"
     * </pre>
     *
     * <code>string long_name = 2;</code>
     * @return The bytes for longName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLongNameBytes() {
      java.lang.Object ref = longName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        longName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHORT_NAME_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object shortName_ = "";
    /**
     * <pre>
     * A VERY short name, ideally two characters.
     * Suitable for a tiny OLED screen
     * </pre>
     *
     * <code>string short_name = 3;</code>
     * @return The shortName.
     */
    @java.lang.Override
    public java.lang.String getShortName() {
      java.lang.Object ref = shortName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        shortName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A VERY short name, ideally two characters.
     * Suitable for a tiny OLED screen
     * </pre>
     *
     * <code>string short_name = 3;</code>
     * @return The bytes for shortName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getShortNameBytes() {
      java.lang.Object ref = shortName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shortName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MACADDR_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString macaddr_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * This is the addr of the radio.
     * Not populated by the phone, but added by the esp32 when broadcasting
     * </pre>
     *
     * <code>bytes macaddr = 4;</code>
     * @return The macaddr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMacaddr() {
      return macaddr_;
    }

    public static final int HW_MODEL_FIELD_NUMBER = 5;
    private int hwModel_ = 0;
    /**
     * <pre>
     * TBEAM, HELTEC, etc...
     * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
     * Apps will still need the string here for older builds
     * (so OTA update can find the right image), but if the enum is available it will be used instead.
     * </pre>
     *
     * <code>.HardwareModel hw_model = 5;</code>
     * @return The enum numeric value on the wire for hwModel.
     */
    @java.lang.Override public int getHwModelValue() {
      return hwModel_;
    }
    /**
     * <pre>
     * TBEAM, HELTEC, etc...
     * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
     * Apps will still need the string here for older builds
     * (so OTA update can find the right image), but if the enum is available it will be used instead.
     * </pre>
     *
     * <code>.HardwareModel hw_model = 5;</code>
     * @return The hwModel.
     */
    @java.lang.Override public com.geeksville.mesh.MeshProtos.HardwareModel getHwModel() {
      com.geeksville.mesh.MeshProtos.HardwareModel result = com.geeksville.mesh.MeshProtos.HardwareModel.forNumber(hwModel_);
      return result == null ? com.geeksville.mesh.MeshProtos.HardwareModel.UNRECOGNIZED : result;
    }

    public static final int IS_LICENSED_FIELD_NUMBER = 6;
    private boolean isLicensed_ = false;
    /**
     * <pre>
     * In some regions Ham radio operators have different bandwidth limitations than others.
     * If this user is a licensed operator, set this flag.
     * Also, "long_name" should be their licence number.
     * </pre>
     *
     * <code>bool is_licensed = 6;</code>
     * @return The isLicensed.
     */
    @java.lang.Override
    public boolean getIsLicensed() {
      return isLicensed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(longName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, longName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(shortName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, shortName_);
      }
      if (!macaddr_.isEmpty()) {
        output.writeBytes(4, macaddr_);
      }
      if (hwModel_ != com.geeksville.mesh.MeshProtos.HardwareModel.UNSET.getNumber()) {
        output.writeEnum(5, hwModel_);
      }
      if (isLicensed_ != false) {
        output.writeBool(6, isLicensed_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(longName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, longName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(shortName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, shortName_);
      }
      if (!macaddr_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, macaddr_);
      }
      if (hwModel_ != com.geeksville.mesh.MeshProtos.HardwareModel.UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, hwModel_);
      }
      if (isLicensed_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isLicensed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.User)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.User other = (com.geeksville.mesh.MeshProtos.User) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getLongName()
          .equals(other.getLongName())) return false;
      if (!getShortName()
          .equals(other.getShortName())) return false;
      if (!getMacaddr()
          .equals(other.getMacaddr())) return false;
      if (hwModel_ != other.hwModel_) return false;
      if (getIsLicensed()
          != other.getIsLicensed()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + LONG_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getLongName().hashCode();
      hash = (37 * hash) + SHORT_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getShortName().hashCode();
      hash = (37 * hash) + MACADDR_FIELD_NUMBER;
      hash = (53 * hash) + getMacaddr().hashCode();
      hash = (37 * hash) + HW_MODEL_FIELD_NUMBER;
      hash = (53 * hash) + hwModel_;
      hash = (37 * hash) + IS_LICENSED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsLicensed());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.User parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.User parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.User prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Broadcast when a newly powered mesh node wants to find a node num it can use
     * Sent from the phone over bluetooth to set the user id for the owner of this node.
     * Also sent from nodes to each other when a new node signs on (so all clients can have this info)
     * The algorithm is as follows:
     * when a node starts up, it broadcasts their user and the normal flow is for all
     * other nodes to reply with their User as well (so the new node can build its nodedb)
     * If a node ever receives a User (not just the first broadcast) message where
     * the sender node number equals our node number, that indicates a collision has
     * occurred and the following steps should happen:
     * If the receiving node (that was already in the mesh)'s macaddr is LOWER than the
     * new User who just tried to sign in: it gets to keep its nodenum.
     * We send a broadcast message of OUR User (we use a broadcast so that the other node can
     * receive our message, considering we have the same id - it also serves to let
     * observers correct their nodedb) - this case is rare so it should be okay.
     * If any node receives a User where the macaddr is GTE than their local macaddr,
     * they have been vetoed and should pick a new random nodenum (filtering against
     * whatever it knows about the nodedb) and rebroadcast their User.
     * A few nodenums are reserved and will never be requested:
     * 0xff - broadcast
     * 0 through 3 - for future use
     * </pre>
     *
     * Protobuf type {@code User}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:User)
        com.geeksville.mesh.MeshProtos.UserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_User_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_User_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.User.class, com.geeksville.mesh.MeshProtos.User.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.User.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = "";
        longName_ = "";
        shortName_ = "";
        macaddr_ = com.google.protobuf.ByteString.EMPTY;
        hwModel_ = 0;
        isLicensed_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_User_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.User getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.User.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.User build() {
        com.geeksville.mesh.MeshProtos.User result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.User buildPartial() {
        com.geeksville.mesh.MeshProtos.User result = new com.geeksville.mesh.MeshProtos.User(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.geeksville.mesh.MeshProtos.User result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.longName_ = longName_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.shortName_ = shortName_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.macaddr_ = macaddr_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.hwModel_ = hwModel_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.isLicensed_ = isLicensed_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.User) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.User)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.User other) {
        if (other == com.geeksville.mesh.MeshProtos.User.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getLongName().isEmpty()) {
          longName_ = other.longName_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getShortName().isEmpty()) {
          shortName_ = other.shortName_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.getMacaddr() != com.google.protobuf.ByteString.EMPTY) {
          setMacaddr(other.getMacaddr());
        }
        if (other.hwModel_ != 0) {
          setHwModelValue(other.getHwModelValue());
        }
        if (other.getIsLicensed() != false) {
          setIsLicensed(other.getIsLicensed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                longName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                shortName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                macaddr_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 40: {
                hwModel_ = input.readEnum();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                isLicensed_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * A globally unique ID string for this user.
       * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
       * Note: app developers are encouraged to also use the following standard
       * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A globally unique ID string for this user.
       * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
       * Note: app developers are encouraged to also use the following standard
       * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A globally unique ID string for this user.
       * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
       * Note: app developers are encouraged to also use the following standard
       * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A globally unique ID string for this user.
       * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
       * Note: app developers are encouraged to also use the following standard
       * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = getDefaultInstance().getId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A globally unique ID string for this user.
       * In the case of Signal that would mean +16504442323, for the default macaddr derived id it would be !&lt;8 hexidecimal bytes&gt;.
       * Note: app developers are encouraged to also use the following standard
       * node IDs "^all" (for broadcast), "^local" (for the locally connected node)
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object longName_ = "";
      /**
       * <pre>
       * A full name for this user, i.e. "Kevin Hester"
       * </pre>
       *
       * <code>string long_name = 2;</code>
       * @return The longName.
       */
      public java.lang.String getLongName() {
        java.lang.Object ref = longName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          longName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A full name for this user, i.e. "Kevin Hester"
       * </pre>
       *
       * <code>string long_name = 2;</code>
       * @return The bytes for longName.
       */
      public com.google.protobuf.ByteString
          getLongNameBytes() {
        java.lang.Object ref = longName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          longName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A full name for this user, i.e. "Kevin Hester"
       * </pre>
       *
       * <code>string long_name = 2;</code>
       * @param value The longName to set.
       * @return This builder for chaining.
       */
      public Builder setLongName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        longName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A full name for this user, i.e. "Kevin Hester"
       * </pre>
       *
       * <code>string long_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongName() {
        longName_ = getDefaultInstance().getLongName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A full name for this user, i.e. "Kevin Hester"
       * </pre>
       *
       * <code>string long_name = 2;</code>
       * @param value The bytes for longName to set.
       * @return This builder for chaining.
       */
      public Builder setLongNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        longName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object shortName_ = "";
      /**
       * <pre>
       * A VERY short name, ideally two characters.
       * Suitable for a tiny OLED screen
       * </pre>
       *
       * <code>string short_name = 3;</code>
       * @return The shortName.
       */
      public java.lang.String getShortName() {
        java.lang.Object ref = shortName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          shortName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A VERY short name, ideally two characters.
       * Suitable for a tiny OLED screen
       * </pre>
       *
       * <code>string short_name = 3;</code>
       * @return The bytes for shortName.
       */
      public com.google.protobuf.ByteString
          getShortNameBytes() {
        java.lang.Object ref = shortName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          shortName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A VERY short name, ideally two characters.
       * Suitable for a tiny OLED screen
       * </pre>
       *
       * <code>string short_name = 3;</code>
       * @param value The shortName to set.
       * @return This builder for chaining.
       */
      public Builder setShortName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        shortName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A VERY short name, ideally two characters.
       * Suitable for a tiny OLED screen
       * </pre>
       *
       * <code>string short_name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearShortName() {
        shortName_ = getDefaultInstance().getShortName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A VERY short name, ideally two characters.
       * Suitable for a tiny OLED screen
       * </pre>
       *
       * <code>string short_name = 3;</code>
       * @param value The bytes for shortName to set.
       * @return This builder for chaining.
       */
      public Builder setShortNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        shortName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString macaddr_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * This is the addr of the radio.
       * Not populated by the phone, but added by the esp32 when broadcasting
       * </pre>
       *
       * <code>bytes macaddr = 4;</code>
       * @return The macaddr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMacaddr() {
        return macaddr_;
      }
      /**
       * <pre>
       * This is the addr of the radio.
       * Not populated by the phone, but added by the esp32 when broadcasting
       * </pre>
       *
       * <code>bytes macaddr = 4;</code>
       * @param value The macaddr to set.
       * @return This builder for chaining.
       */
      public Builder setMacaddr(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        macaddr_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is the addr of the radio.
       * Not populated by the phone, but added by the esp32 when broadcasting
       * </pre>
       *
       * <code>bytes macaddr = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMacaddr() {
        bitField0_ = (bitField0_ & ~0x00000008);
        macaddr_ = getDefaultInstance().getMacaddr();
        onChanged();
        return this;
      }

      private int hwModel_ = 0;
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>.HardwareModel hw_model = 5;</code>
       * @return The enum numeric value on the wire for hwModel.
       */
      @java.lang.Override public int getHwModelValue() {
        return hwModel_;
      }
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>.HardwareModel hw_model = 5;</code>
       * @param value The enum numeric value on the wire for hwModel to set.
       * @return This builder for chaining.
       */
      public Builder setHwModelValue(int value) {
        hwModel_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>.HardwareModel hw_model = 5;</code>
       * @return The hwModel.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.HardwareModel getHwModel() {
        com.geeksville.mesh.MeshProtos.HardwareModel result = com.geeksville.mesh.MeshProtos.HardwareModel.forNumber(hwModel_);
        return result == null ? com.geeksville.mesh.MeshProtos.HardwareModel.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>.HardwareModel hw_model = 5;</code>
       * @param value The hwModel to set.
       * @return This builder for chaining.
       */
      public Builder setHwModel(com.geeksville.mesh.MeshProtos.HardwareModel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        hwModel_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TBEAM, HELTEC, etc...
       * Starting in 1.2.11 moved to hw_model enum in the NodeInfo object.
       * Apps will still need the string here for older builds
       * (so OTA update can find the right image), but if the enum is available it will be used instead.
       * </pre>
       *
       * <code>.HardwareModel hw_model = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearHwModel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hwModel_ = 0;
        onChanged();
        return this;
      }

      private boolean isLicensed_ ;
      /**
       * <pre>
       * In some regions Ham radio operators have different bandwidth limitations than others.
       * If this user is a licensed operator, set this flag.
       * Also, "long_name" should be their licence number.
       * </pre>
       *
       * <code>bool is_licensed = 6;</code>
       * @return The isLicensed.
       */
      @java.lang.Override
      public boolean getIsLicensed() {
        return isLicensed_;
      }
      /**
       * <pre>
       * In some regions Ham radio operators have different bandwidth limitations than others.
       * If this user is a licensed operator, set this flag.
       * Also, "long_name" should be their licence number.
       * </pre>
       *
       * <code>bool is_licensed = 6;</code>
       * @param value The isLicensed to set.
       * @return This builder for chaining.
       */
      public Builder setIsLicensed(boolean value) {
        
        isLicensed_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In some regions Ham radio operators have different bandwidth limitations than others.
       * If this user is a licensed operator, set this flag.
       * Also, "long_name" should be their licence number.
       * </pre>
       *
       * <code>bool is_licensed = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsLicensed() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isLicensed_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:User)
    }

    // @@protoc_insertion_point(class_scope:User)
    private static final com.geeksville.mesh.MeshProtos.User DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.User();
    }

    public static com.geeksville.mesh.MeshProtos.User getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<User>
        PARSER = new com.google.protobuf.AbstractParser<User>() {
      @java.lang.Override
      public User parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<User> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<User> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.User getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RouteDiscoveryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RouteDiscovery)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The list of nodenums this packet has visited so far
     * </pre>
     *
     * <code>repeated fixed32 route = 1;</code>
     * @return A list containing the route.
     */
    java.util.List<java.lang.Integer> getRouteList();
    /**
     * <pre>
     * The list of nodenums this packet has visited so far
     * </pre>
     *
     * <code>repeated fixed32 route = 1;</code>
     * @return The count of route.
     */
    int getRouteCount();
    /**
     * <pre>
     * The list of nodenums this packet has visited so far
     * </pre>
     *
     * <code>repeated fixed32 route = 1;</code>
     * @param index The index of the element to return.
     * @return The route at the given index.
     */
    int getRoute(int index);
  }
  /**
   * <pre>
   * A message used in our Dynamic Source Routing protocol (RFC 4728 based)
   * </pre>
   *
   * Protobuf type {@code RouteDiscovery}
   */
  public static final class RouteDiscovery extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RouteDiscovery)
      RouteDiscoveryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RouteDiscovery.newBuilder() to construct.
    private RouteDiscovery(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RouteDiscovery() {
      route_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RouteDiscovery();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_RouteDiscovery_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_RouteDiscovery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.RouteDiscovery.class, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder.class);
    }

    public static final int ROUTE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList route_;
    /**
     * <pre>
     * The list of nodenums this packet has visited so far
     * </pre>
     *
     * <code>repeated fixed32 route = 1;</code>
     * @return A list containing the route.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRouteList() {
      return route_;
    }
    /**
     * <pre>
     * The list of nodenums this packet has visited so far
     * </pre>
     *
     * <code>repeated fixed32 route = 1;</code>
     * @return The count of route.
     */
    public int getRouteCount() {
      return route_.size();
    }
    /**
     * <pre>
     * The list of nodenums this packet has visited so far
     * </pre>
     *
     * <code>repeated fixed32 route = 1;</code>
     * @param index The index of the element to return.
     * @return The route at the given index.
     */
    public int getRoute(int index) {
      return route_.getInt(index);
    }
    private int routeMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getRouteList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(routeMemoizedSerializedSize);
      }
      for (int i = 0; i < route_.size(); i++) {
        output.writeFixed32NoTag(route_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getRouteList().size();
        size += dataSize;
        if (!getRouteList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        routeMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.RouteDiscovery)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.RouteDiscovery other = (com.geeksville.mesh.MeshProtos.RouteDiscovery) obj;

      if (!getRouteList()
          .equals(other.getRouteList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRouteCount() > 0) {
        hash = (37 * hash) + ROUTE_FIELD_NUMBER;
        hash = (53 * hash) + getRouteList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.RouteDiscovery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.RouteDiscovery prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A message used in our Dynamic Source Routing protocol (RFC 4728 based)
     * </pre>
     *
     * Protobuf type {@code RouteDiscovery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RouteDiscovery)
        com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_RouteDiscovery_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_RouteDiscovery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.RouteDiscovery.class, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.RouteDiscovery.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        route_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_RouteDiscovery_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.RouteDiscovery getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.RouteDiscovery build() {
        com.geeksville.mesh.MeshProtos.RouteDiscovery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.RouteDiscovery buildPartial() {
        com.geeksville.mesh.MeshProtos.RouteDiscovery result = new com.geeksville.mesh.MeshProtos.RouteDiscovery(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.geeksville.mesh.MeshProtos.RouteDiscovery result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          route_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.route_ = route_;
      }

      private void buildPartial0(com.geeksville.mesh.MeshProtos.RouteDiscovery result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.RouteDiscovery) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.RouteDiscovery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.RouteDiscovery other) {
        if (other == com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance()) return this;
        if (!other.route_.isEmpty()) {
          if (route_.isEmpty()) {
            route_ = other.route_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRouteIsMutable();
            route_.addAll(other.route_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                int v = input.readFixed32();
                ensureRouteIsMutable();
                route_.addInt(v);
                break;
              } // case 13
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRouteIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  route_.addInt(input.readFixed32());
                }
                input.popLimit(limit);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList route_ = emptyIntList();
      private void ensureRouteIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          route_ = mutableCopy(route_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * The list of nodenums this packet has visited so far
       * </pre>
       *
       * <code>repeated fixed32 route = 1;</code>
       * @return A list containing the route.
       */
      public java.util.List<java.lang.Integer>
          getRouteList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(route_) : route_;
      }
      /**
       * <pre>
       * The list of nodenums this packet has visited so far
       * </pre>
       *
       * <code>repeated fixed32 route = 1;</code>
       * @return The count of route.
       */
      public int getRouteCount() {
        return route_.size();
      }
      /**
       * <pre>
       * The list of nodenums this packet has visited so far
       * </pre>
       *
       * <code>repeated fixed32 route = 1;</code>
       * @param index The index of the element to return.
       * @return The route at the given index.
       */
      public int getRoute(int index) {
        return route_.getInt(index);
      }
      /**
       * <pre>
       * The list of nodenums this packet has visited so far
       * </pre>
       *
       * <code>repeated fixed32 route = 1;</code>
       * @param index The index to set the value at.
       * @param value The route to set.
       * @return This builder for chaining.
       */
      public Builder setRoute(
          int index, int value) {
        
        ensureRouteIsMutable();
        route_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The list of nodenums this packet has visited so far
       * </pre>
       *
       * <code>repeated fixed32 route = 1;</code>
       * @param value The route to add.
       * @return This builder for chaining.
       */
      public Builder addRoute(int value) {
        
        ensureRouteIsMutable();
        route_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The list of nodenums this packet has visited so far
       * </pre>
       *
       * <code>repeated fixed32 route = 1;</code>
       * @param values The route to add.
       * @return This builder for chaining.
       */
      public Builder addAllRoute(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRouteIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, route_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The list of nodenums this packet has visited so far
       * </pre>
       *
       * <code>repeated fixed32 route = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRoute() {
        route_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RouteDiscovery)
    }

    // @@protoc_insertion_point(class_scope:RouteDiscovery)
    private static final com.geeksville.mesh.MeshProtos.RouteDiscovery DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.RouteDiscovery();
    }

    public static com.geeksville.mesh.MeshProtos.RouteDiscovery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RouteDiscovery>
        PARSER = new com.google.protobuf.AbstractParser<RouteDiscovery>() {
      @java.lang.Override
      public RouteDiscovery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RouteDiscovery> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RouteDiscovery> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.RouteDiscovery getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RoutingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Routing)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A route request going from the requester
     * </pre>
     *
     * <code>.RouteDiscovery route_request = 1;</code>
     * @return Whether the routeRequest field is set.
     */
    boolean hasRouteRequest();
    /**
     * <pre>
     * A route request going from the requester
     * </pre>
     *
     * <code>.RouteDiscovery route_request = 1;</code>
     * @return The routeRequest.
     */
    com.geeksville.mesh.MeshProtos.RouteDiscovery getRouteRequest();
    /**
     * <pre>
     * A route request going from the requester
     * </pre>
     *
     * <code>.RouteDiscovery route_request = 1;</code>
     */
    com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder getRouteRequestOrBuilder();

    /**
     * <pre>
     * A route reply
     * </pre>
     *
     * <code>.RouteDiscovery route_reply = 2;</code>
     * @return Whether the routeReply field is set.
     */
    boolean hasRouteReply();
    /**
     * <pre>
     * A route reply
     * </pre>
     *
     * <code>.RouteDiscovery route_reply = 2;</code>
     * @return The routeReply.
     */
    com.geeksville.mesh.MeshProtos.RouteDiscovery getRouteReply();
    /**
     * <pre>
     * A route reply
     * </pre>
     *
     * <code>.RouteDiscovery route_reply = 2;</code>
     */
    com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder getRouteReplyOrBuilder();

    /**
     * <pre>
     * A failure in delivering a message (usually used for routing control messages, but might be provided
     * in addition to ack.fail_id to provide details on the type of failure).
     * </pre>
     *
     * <code>.Routing.Error error_reason = 3;</code>
     * @return Whether the errorReason field is set.
     */
    boolean hasErrorReason();
    /**
     * <pre>
     * A failure in delivering a message (usually used for routing control messages, but might be provided
     * in addition to ack.fail_id to provide details on the type of failure).
     * </pre>
     *
     * <code>.Routing.Error error_reason = 3;</code>
     * @return The enum numeric value on the wire for errorReason.
     */
    int getErrorReasonValue();
    /**
     * <pre>
     * A failure in delivering a message (usually used for routing control messages, but might be provided
     * in addition to ack.fail_id to provide details on the type of failure).
     * </pre>
     *
     * <code>.Routing.Error error_reason = 3;</code>
     * @return The errorReason.
     */
    com.geeksville.mesh.MeshProtos.Routing.Error getErrorReason();

    public com.geeksville.mesh.MeshProtos.Routing.VariantCase getVariantCase();
  }
  /**
   * <pre>
   * A Routing control Data packet handled by the routing module
   * </pre>
   *
   * Protobuf type {@code Routing}
   */
  public static final class Routing extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Routing)
      RoutingOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Routing.newBuilder() to construct.
    private Routing(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Routing() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Routing();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_Routing_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_Routing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.Routing.class, com.geeksville.mesh.MeshProtos.Routing.Builder.class);
    }

    /**
     * <pre>
     * A failure in delivering a message (usually used for routing control messages, but might be provided in addition to ack.fail_id to provide
     * details on the type of failure).
     * </pre>
     *
     * Protobuf enum {@code Routing.Error}
     */
    public enum Error
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * This message is not a failure
       * </pre>
       *
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       * <pre>
       * Our node doesn't have a route to the requested destination anymore.
       * </pre>
       *
       * <code>NO_ROUTE = 1;</code>
       */
      NO_ROUTE(1),
      /**
       * <pre>
       * We received a nak while trying to forward on your behalf
       * </pre>
       *
       * <code>GOT_NAK = 2;</code>
       */
      GOT_NAK(2),
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>TIMEOUT = 3;</code>
       */
      TIMEOUT(3),
      /**
       * <pre>
       * No suitable interface could be found for delivering this packet
       * </pre>
       *
       * <code>NO_INTERFACE = 4;</code>
       */
      NO_INTERFACE(4),
      /**
       * <pre>
       * We reached the max retransmission count (typically for naive flood routing)
       * </pre>
       *
       * <code>MAX_RETRANSMIT = 5;</code>
       */
      MAX_RETRANSMIT(5),
      /**
       * <pre>
       * No suitable channel was found for sending this packet (i.e. was requested channel index disabled?)
       * </pre>
       *
       * <code>NO_CHANNEL = 6;</code>
       */
      NO_CHANNEL(6),
      /**
       * <pre>
       * The packet was too big for sending (exceeds interface MTU after encoding)
       * </pre>
       *
       * <code>TOO_LARGE = 7;</code>
       */
      TOO_LARGE(7),
      /**
       * <pre>
       * The request had want_response set, the request reached the destination node, but no service on that node wants to send a response
       * (possibly due to bad channel permissions)
       * </pre>
       *
       * <code>NO_RESPONSE = 8;</code>
       */
      NO_RESPONSE(8),
      /**
       * <pre>
       * The application layer service on the remote node received your request, but considered your request somehow invalid
       * </pre>
       *
       * <code>BAD_REQUEST = 32;</code>
       */
      BAD_REQUEST(32),
      /**
       * <pre>
       * The application layer service on the remote node received your request, but considered your request not authorized
       * (i.e you did not send the request on the required bound channel)
       * </pre>
       *
       * <code>NOT_AUTHORIZED = 33;</code>
       */
      NOT_AUTHORIZED(33),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * This message is not a failure
       * </pre>
       *
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <pre>
       * Our node doesn't have a route to the requested destination anymore.
       * </pre>
       *
       * <code>NO_ROUTE = 1;</code>
       */
      public static final int NO_ROUTE_VALUE = 1;
      /**
       * <pre>
       * We received a nak while trying to forward on your behalf
       * </pre>
       *
       * <code>GOT_NAK = 2;</code>
       */
      public static final int GOT_NAK_VALUE = 2;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>TIMEOUT = 3;</code>
       */
      public static final int TIMEOUT_VALUE = 3;
      /**
       * <pre>
       * No suitable interface could be found for delivering this packet
       * </pre>
       *
       * <code>NO_INTERFACE = 4;</code>
       */
      public static final int NO_INTERFACE_VALUE = 4;
      /**
       * <pre>
       * We reached the max retransmission count (typically for naive flood routing)
       * </pre>
       *
       * <code>MAX_RETRANSMIT = 5;</code>
       */
      public static final int MAX_RETRANSMIT_VALUE = 5;
      /**
       * <pre>
       * No suitable channel was found for sending this packet (i.e. was requested channel index disabled?)
       * </pre>
       *
       * <code>NO_CHANNEL = 6;</code>
       */
      public static final int NO_CHANNEL_VALUE = 6;
      /**
       * <pre>
       * The packet was too big for sending (exceeds interface MTU after encoding)
       * </pre>
       *
       * <code>TOO_LARGE = 7;</code>
       */
      public static final int TOO_LARGE_VALUE = 7;
      /**
       * <pre>
       * The request had want_response set, the request reached the destination node, but no service on that node wants to send a response
       * (possibly due to bad channel permissions)
       * </pre>
       *
       * <code>NO_RESPONSE = 8;</code>
       */
      public static final int NO_RESPONSE_VALUE = 8;
      /**
       * <pre>
       * The application layer service on the remote node received your request, but considered your request somehow invalid
       * </pre>
       *
       * <code>BAD_REQUEST = 32;</code>
       */
      public static final int BAD_REQUEST_VALUE = 32;
      /**
       * <pre>
       * The application layer service on the remote node received your request, but considered your request not authorized
       * (i.e you did not send the request on the required bound channel)
       * </pre>
       *
       * <code>NOT_AUTHORIZED = 33;</code>
       */
      public static final int NOT_AUTHORIZED_VALUE = 33;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Error valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Error forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 1: return NO_ROUTE;
          case 2: return GOT_NAK;
          case 3: return TIMEOUT;
          case 4: return NO_INTERFACE;
          case 5: return MAX_RETRANSMIT;
          case 6: return NO_CHANNEL;
          case 7: return TOO_LARGE;
          case 8: return NO_RESPONSE;
          case 32: return BAD_REQUEST;
          case 33: return NOT_AUTHORIZED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Error>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Error> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Error>() {
              public Error findValueByNumber(int number) {
                return Error.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.Routing.getDescriptor().getEnumTypes().get(0);
      }

      private static final Error[] VALUES = values();

      public static Error valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Error(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Routing.Error)
    }

    private int variantCase_ = 0;
    private java.lang.Object variant_;
    public enum VariantCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      ROUTE_REQUEST(1),
      ROUTE_REPLY(2),
      ERROR_REASON(3),
      VARIANT_NOT_SET(0);
      private final int value;
      private VariantCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static VariantCase valueOf(int value) {
        return forNumber(value);
      }

      public static VariantCase forNumber(int value) {
        switch (value) {
          case 1: return ROUTE_REQUEST;
          case 2: return ROUTE_REPLY;
          case 3: return ERROR_REASON;
          case 0: return VARIANT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public VariantCase
    getVariantCase() {
      return VariantCase.forNumber(
          variantCase_);
    }

    public static final int ROUTE_REQUEST_FIELD_NUMBER = 1;
    /**
     * <pre>
     * A route request going from the requester
     * </pre>
     *
     * <code>.RouteDiscovery route_request = 1;</code>
     * @return Whether the routeRequest field is set.
     */
    @java.lang.Override
    public boolean hasRouteRequest() {
      return variantCase_ == 1;
    }
    /**
     * <pre>
     * A route request going from the requester
     * </pre>
     *
     * <code>.RouteDiscovery route_request = 1;</code>
     * @return The routeRequest.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.RouteDiscovery getRouteRequest() {
      if (variantCase_ == 1) {
         return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
      }
      return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
    }
    /**
     * <pre>
     * A route request going from the requester
     * </pre>
     *
     * <code>.RouteDiscovery route_request = 1;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder getRouteRequestOrBuilder() {
      if (variantCase_ == 1) {
         return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
      }
      return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
    }

    public static final int ROUTE_REPLY_FIELD_NUMBER = 2;
    /**
     * <pre>
     * A route reply
     * </pre>
     *
     * <code>.RouteDiscovery route_reply = 2;</code>
     * @return Whether the routeReply field is set.
     */
    @java.lang.Override
    public boolean hasRouteReply() {
      return variantCase_ == 2;
    }
    /**
     * <pre>
     * A route reply
     * </pre>
     *
     * <code>.RouteDiscovery route_reply = 2;</code>
     * @return The routeReply.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.RouteDiscovery getRouteReply() {
      if (variantCase_ == 2) {
         return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
      }
      return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
    }
    /**
     * <pre>
     * A route reply
     * </pre>
     *
     * <code>.RouteDiscovery route_reply = 2;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder getRouteReplyOrBuilder() {
      if (variantCase_ == 2) {
         return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
      }
      return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
    }

    public static final int ERROR_REASON_FIELD_NUMBER = 3;
    /**
     * <pre>
     * A failure in delivering a message (usually used for routing control messages, but might be provided
     * in addition to ack.fail_id to provide details on the type of failure).
     * </pre>
     *
     * <code>.Routing.Error error_reason = 3;</code>
     * @return Whether the errorReason field is set.
     */
    public boolean hasErrorReason() {
      return variantCase_ == 3;
    }
    /**
     * <pre>
     * A failure in delivering a message (usually used for routing control messages, but might be provided
     * in addition to ack.fail_id to provide details on the type of failure).
     * </pre>
     *
     * <code>.Routing.Error error_reason = 3;</code>
     * @return The enum numeric value on the wire for errorReason.
     */
    public int getErrorReasonValue() {
      if (variantCase_ == 3) {
        return (java.lang.Integer) variant_;
      }
      return 0;
    }
    /**
     * <pre>
     * A failure in delivering a message (usually used for routing control messages, but might be provided
     * in addition to ack.fail_id to provide details on the type of failure).
     * </pre>
     *
     * <code>.Routing.Error error_reason = 3;</code>
     * @return The errorReason.
     */
    public com.geeksville.mesh.MeshProtos.Routing.Error getErrorReason() {
      if (variantCase_ == 3) {
        com.geeksville.mesh.MeshProtos.Routing.Error result = com.geeksville.mesh.MeshProtos.Routing.Error.forNumber(
            (java.lang.Integer) variant_);
        return result == null ? com.geeksville.mesh.MeshProtos.Routing.Error.UNRECOGNIZED : result;
      }
      return com.geeksville.mesh.MeshProtos.Routing.Error.NONE;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (variantCase_ == 1) {
        output.writeMessage(1, (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_);
      }
      if (variantCase_ == 2) {
        output.writeMessage(2, (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_);
      }
      if (variantCase_ == 3) {
        output.writeEnum(3, ((java.lang.Integer) variant_));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (variantCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_);
      }
      if (variantCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_);
      }
      if (variantCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, ((java.lang.Integer) variant_));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.Routing)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.Routing other = (com.geeksville.mesh.MeshProtos.Routing) obj;

      if (!getVariantCase().equals(other.getVariantCase())) return false;
      switch (variantCase_) {
        case 1:
          if (!getRouteRequest()
              .equals(other.getRouteRequest())) return false;
          break;
        case 2:
          if (!getRouteReply()
              .equals(other.getRouteReply())) return false;
          break;
        case 3:
          if (getErrorReasonValue()
              != other.getErrorReasonValue()) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (variantCase_) {
        case 1:
          hash = (37 * hash) + ROUTE_REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getRouteRequest().hashCode();
          break;
        case 2:
          hash = (37 * hash) + ROUTE_REPLY_FIELD_NUMBER;
          hash = (53 * hash) + getRouteReply().hashCode();
          break;
        case 3:
          hash = (37 * hash) + ERROR_REASON_FIELD_NUMBER;
          hash = (53 * hash) + getErrorReasonValue();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Routing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.Routing prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A Routing control Data packet handled by the routing module
     * </pre>
     *
     * Protobuf type {@code Routing}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Routing)
        com.geeksville.mesh.MeshProtos.RoutingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_Routing_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_Routing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.Routing.class, com.geeksville.mesh.MeshProtos.Routing.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.Routing.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (routeRequestBuilder_ != null) {
          routeRequestBuilder_.clear();
        }
        if (routeReplyBuilder_ != null) {
          routeReplyBuilder_.clear();
        }
        variantCase_ = 0;
        variant_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_Routing_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Routing getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.Routing.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Routing build() {
        com.geeksville.mesh.MeshProtos.Routing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Routing buildPartial() {
        com.geeksville.mesh.MeshProtos.Routing result = new com.geeksville.mesh.MeshProtos.Routing(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.geeksville.mesh.MeshProtos.Routing result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(com.geeksville.mesh.MeshProtos.Routing result) {
        result.variantCase_ = variantCase_;
        result.variant_ = this.variant_;
        if (variantCase_ == 1 &&
            routeRequestBuilder_ != null) {
          result.variant_ = routeRequestBuilder_.build();
        }
        if (variantCase_ == 2 &&
            routeReplyBuilder_ != null) {
          result.variant_ = routeReplyBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.Routing) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.Routing)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.Routing other) {
        if (other == com.geeksville.mesh.MeshProtos.Routing.getDefaultInstance()) return this;
        switch (other.getVariantCase()) {
          case ROUTE_REQUEST: {
            mergeRouteRequest(other.getRouteRequest());
            break;
          }
          case ROUTE_REPLY: {
            mergeRouteReply(other.getRouteReply());
            break;
          }
          case ERROR_REASON: {
            setErrorReasonValue(other.getErrorReasonValue());
            break;
          }
          case VARIANT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getRouteRequestFieldBuilder().getBuilder(),
                    extensionRegistry);
                variantCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getRouteReplyFieldBuilder().getBuilder(),
                    extensionRegistry);
                variantCase_ = 2;
                break;
              } // case 18
              case 24: {
                int rawValue = input.readEnum();
                variantCase_ = 3;
                variant_ = rawValue;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int variantCase_ = 0;
      private java.lang.Object variant_;
      public VariantCase
          getVariantCase() {
        return VariantCase.forNumber(
            variantCase_);
      }

      public Builder clearVariant() {
        variantCase_ = 0;
        variant_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.RouteDiscovery, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder, com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder> routeRequestBuilder_;
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       * @return Whether the routeRequest field is set.
       */
      @java.lang.Override
      public boolean hasRouteRequest() {
        return variantCase_ == 1;
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       * @return The routeRequest.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.RouteDiscovery getRouteRequest() {
        if (routeRequestBuilder_ == null) {
          if (variantCase_ == 1) {
            return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
          }
          return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
        } else {
          if (variantCase_ == 1) {
            return routeRequestBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       */
      public Builder setRouteRequest(com.geeksville.mesh.MeshProtos.RouteDiscovery value) {
        if (routeRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variant_ = value;
          onChanged();
        } else {
          routeRequestBuilder_.setMessage(value);
        }
        variantCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       */
      public Builder setRouteRequest(
          com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder builderForValue) {
        if (routeRequestBuilder_ == null) {
          variant_ = builderForValue.build();
          onChanged();
        } else {
          routeRequestBuilder_.setMessage(builderForValue.build());
        }
        variantCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       */
      public Builder mergeRouteRequest(com.geeksville.mesh.MeshProtos.RouteDiscovery value) {
        if (routeRequestBuilder_ == null) {
          if (variantCase_ == 1 &&
              variant_ != com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance()) {
            variant_ = com.geeksville.mesh.MeshProtos.RouteDiscovery.newBuilder((com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_)
                .mergeFrom(value).buildPartial();
          } else {
            variant_ = value;
          }
          onChanged();
        } else {
          if (variantCase_ == 1) {
            routeRequestBuilder_.mergeFrom(value);
          } else {
            routeRequestBuilder_.setMessage(value);
          }
        }
        variantCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       */
      public Builder clearRouteRequest() {
        if (routeRequestBuilder_ == null) {
          if (variantCase_ == 1) {
            variantCase_ = 0;
            variant_ = null;
            onChanged();
          }
        } else {
          if (variantCase_ == 1) {
            variantCase_ = 0;
            variant_ = null;
          }
          routeRequestBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       */
      public com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder getRouteRequestBuilder() {
        return getRouteRequestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder getRouteRequestOrBuilder() {
        if ((variantCase_ == 1) && (routeRequestBuilder_ != null)) {
          return routeRequestBuilder_.getMessageOrBuilder();
        } else {
          if (variantCase_ == 1) {
            return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
          }
          return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * A route request going from the requester
       * </pre>
       *
       * <code>.RouteDiscovery route_request = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.RouteDiscovery, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder, com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder> 
          getRouteRequestFieldBuilder() {
        if (routeRequestBuilder_ == null) {
          if (!(variantCase_ == 1)) {
            variant_ = com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
          }
          routeRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.RouteDiscovery, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder, com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_,
                  getParentForChildren(),
                  isClean());
          variant_ = null;
        }
        variantCase_ = 1;
        onChanged();
        return routeRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.RouteDiscovery, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder, com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder> routeReplyBuilder_;
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       * @return Whether the routeReply field is set.
       */
      @java.lang.Override
      public boolean hasRouteReply() {
        return variantCase_ == 2;
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       * @return The routeReply.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.RouteDiscovery getRouteReply() {
        if (routeReplyBuilder_ == null) {
          if (variantCase_ == 2) {
            return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
          }
          return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
        } else {
          if (variantCase_ == 2) {
            return routeReplyBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       */
      public Builder setRouteReply(com.geeksville.mesh.MeshProtos.RouteDiscovery value) {
        if (routeReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          variant_ = value;
          onChanged();
        } else {
          routeReplyBuilder_.setMessage(value);
        }
        variantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       */
      public Builder setRouteReply(
          com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder builderForValue) {
        if (routeReplyBuilder_ == null) {
          variant_ = builderForValue.build();
          onChanged();
        } else {
          routeReplyBuilder_.setMessage(builderForValue.build());
        }
        variantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       */
      public Builder mergeRouteReply(com.geeksville.mesh.MeshProtos.RouteDiscovery value) {
        if (routeReplyBuilder_ == null) {
          if (variantCase_ == 2 &&
              variant_ != com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance()) {
            variant_ = com.geeksville.mesh.MeshProtos.RouteDiscovery.newBuilder((com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_)
                .mergeFrom(value).buildPartial();
          } else {
            variant_ = value;
          }
          onChanged();
        } else {
          if (variantCase_ == 2) {
            routeReplyBuilder_.mergeFrom(value);
          } else {
            routeReplyBuilder_.setMessage(value);
          }
        }
        variantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       */
      public Builder clearRouteReply() {
        if (routeReplyBuilder_ == null) {
          if (variantCase_ == 2) {
            variantCase_ = 0;
            variant_ = null;
            onChanged();
          }
        } else {
          if (variantCase_ == 2) {
            variantCase_ = 0;
            variant_ = null;
          }
          routeReplyBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       */
      public com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder getRouteReplyBuilder() {
        return getRouteReplyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder getRouteReplyOrBuilder() {
        if ((variantCase_ == 2) && (routeReplyBuilder_ != null)) {
          return routeReplyBuilder_.getMessageOrBuilder();
        } else {
          if (variantCase_ == 2) {
            return (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_;
          }
          return com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * A route reply
       * </pre>
       *
       * <code>.RouteDiscovery route_reply = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.RouteDiscovery, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder, com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder> 
          getRouteReplyFieldBuilder() {
        if (routeReplyBuilder_ == null) {
          if (!(variantCase_ == 2)) {
            variant_ = com.geeksville.mesh.MeshProtos.RouteDiscovery.getDefaultInstance();
          }
          routeReplyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.RouteDiscovery, com.geeksville.mesh.MeshProtos.RouteDiscovery.Builder, com.geeksville.mesh.MeshProtos.RouteDiscoveryOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.RouteDiscovery) variant_,
                  getParentForChildren(),
                  isClean());
          variant_ = null;
        }
        variantCase_ = 2;
        onChanged();
        return routeReplyBuilder_;
      }

      /**
       * <pre>
       * A failure in delivering a message (usually used for routing control messages, but might be provided
       * in addition to ack.fail_id to provide details on the type of failure).
       * </pre>
       *
       * <code>.Routing.Error error_reason = 3;</code>
       * @return Whether the errorReason field is set.
       */
      @java.lang.Override
      public boolean hasErrorReason() {
        return variantCase_ == 3;
      }
      /**
       * <pre>
       * A failure in delivering a message (usually used for routing control messages, but might be provided
       * in addition to ack.fail_id to provide details on the type of failure).
       * </pre>
       *
       * <code>.Routing.Error error_reason = 3;</code>
       * @return The enum numeric value on the wire for errorReason.
       */
      @java.lang.Override
      public int getErrorReasonValue() {
        if (variantCase_ == 3) {
          return ((java.lang.Integer) variant_).intValue();
        }
        return 0;
      }
      /**
       * <pre>
       * A failure in delivering a message (usually used for routing control messages, but might be provided
       * in addition to ack.fail_id to provide details on the type of failure).
       * </pre>
       *
       * <code>.Routing.Error error_reason = 3;</code>
       * @param value The enum numeric value on the wire for errorReason to set.
       * @return This builder for chaining.
       */
      public Builder setErrorReasonValue(int value) {
        variantCase_ = 3;
        variant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A failure in delivering a message (usually used for routing control messages, but might be provided
       * in addition to ack.fail_id to provide details on the type of failure).
       * </pre>
       *
       * <code>.Routing.Error error_reason = 3;</code>
       * @return The errorReason.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Routing.Error getErrorReason() {
        if (variantCase_ == 3) {
          com.geeksville.mesh.MeshProtos.Routing.Error result = com.geeksville.mesh.MeshProtos.Routing.Error.forNumber(
              (java.lang.Integer) variant_);
          return result == null ? com.geeksville.mesh.MeshProtos.Routing.Error.UNRECOGNIZED : result;
        }
        return com.geeksville.mesh.MeshProtos.Routing.Error.NONE;
      }
      /**
       * <pre>
       * A failure in delivering a message (usually used for routing control messages, but might be provided
       * in addition to ack.fail_id to provide details on the type of failure).
       * </pre>
       *
       * <code>.Routing.Error error_reason = 3;</code>
       * @param value The errorReason to set.
       * @return This builder for chaining.
       */
      public Builder setErrorReason(com.geeksville.mesh.MeshProtos.Routing.Error value) {
        if (value == null) {
          throw new NullPointerException();
        }
        variantCase_ = 3;
        variant_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A failure in delivering a message (usually used for routing control messages, but might be provided
       * in addition to ack.fail_id to provide details on the type of failure).
       * </pre>
       *
       * <code>.Routing.Error error_reason = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorReason() {
        if (variantCase_ == 3) {
          variantCase_ = 0;
          variant_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Routing)
    }

    // @@protoc_insertion_point(class_scope:Routing)
    private static final com.geeksville.mesh.MeshProtos.Routing DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.Routing();
    }

    public static com.geeksville.mesh.MeshProtos.Routing getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Routing>
        PARSER = new com.google.protobuf.AbstractParser<Routing>() {
      @java.lang.Override
      public Routing parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Routing> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Routing> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.Routing getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Data)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Formerly named typ and of type Type
     * </pre>
     *
     * <code>.PortNum portnum = 1;</code>
     * @return The enum numeric value on the wire for portnum.
     */
    int getPortnumValue();
    /**
     * <pre>
     * Formerly named typ and of type Type
     * </pre>
     *
     * <code>.PortNum portnum = 1;</code>
     * @return The portnum.
     */
    com.geeksville.mesh.Portnums.PortNum getPortnum();

    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>bytes payload = 2;</code>
     * @return The payload.
     */
    com.google.protobuf.ByteString getPayload();

    /**
     * <pre>
     * Not normally used, but for testing a sender can request that recipient
     * responds in kind (i.e. if it received a position, it should unicast back it's position).
     * Note: that if you set this on a broadcast you will receive many replies.
     * </pre>
     *
     * <code>bool want_response = 3;</code>
     * @return The wantResponse.
     */
    boolean getWantResponse();

    /**
     * <pre>
     * The address of the destination node.
     * This field is is filled in by the mesh radio device software, application
     * layer software should never need it.
     * RouteDiscovery messages _must_ populate this.
     * Other message types might need to if they are doing multihop routing.
     * </pre>
     *
     * <code>fixed32 dest = 4;</code>
     * @return The dest.
     */
    int getDest();

    /**
     * <pre>
     * The address of the original sender for this message.
     * This field should _only_ be populated for reliable multihop packets (to keep
     * packets small).
     * </pre>
     *
     * <code>fixed32 source = 5;</code>
     * @return The source.
     */
    int getSource();

    /**
     * <pre>
     * Only used in routing or response messages.
     * Indicates the original message ID that this message is reporting failure on. (formerly called original_id)
     * </pre>
     *
     * <code>fixed32 request_id = 6;</code>
     * @return The requestId.
     */
    int getRequestId();

    /**
     * <pre>
     * If set, this message is intened to be a reply to a previously sent message with the defined id.
     * </pre>
     *
     * <code>fixed32 reply_id = 7;</code>
     * @return The replyId.
     */
    int getReplyId();

    /**
     * <pre>
     * Defaults to false. If true, then what is in the payload should be treated as an emoji like giving
     * a message a heart or poop emoji.
     * </pre>
     *
     * <code>fixed32 emoji = 8;</code>
     * @return The emoji.
     */
    int getEmoji();
  }
  /**
   * <pre>
   * (Formerly called SubPacket)
   * The payload portion fo a packet, this is the actual bytes that are sent
   * inside a radio packet (because from/to are broken out by the comms library)
   * </pre>
   *
   * Protobuf type {@code Data}
   */
  public static final class Data extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Data)
      DataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Data.newBuilder() to construct.
    private Data(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Data() {
      portnum_ = 0;
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Data();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_Data_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.Data.class, com.geeksville.mesh.MeshProtos.Data.Builder.class);
    }

    public static final int PORTNUM_FIELD_NUMBER = 1;
    private int portnum_ = 0;
    /**
     * <pre>
     * Formerly named typ and of type Type
     * </pre>
     *
     * <code>.PortNum portnum = 1;</code>
     * @return The enum numeric value on the wire for portnum.
     */
    @java.lang.Override public int getPortnumValue() {
      return portnum_;
    }
    /**
     * <pre>
     * Formerly named typ and of type Type
     * </pre>
     *
     * <code>.PortNum portnum = 1;</code>
     * @return The portnum.
     */
    @java.lang.Override public com.geeksville.mesh.Portnums.PortNum getPortnum() {
      com.geeksville.mesh.Portnums.PortNum result = com.geeksville.mesh.Portnums.PortNum.forNumber(portnum_);
      return result == null ? com.geeksville.mesh.Portnums.PortNum.UNRECOGNIZED : result;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>bytes payload = 2;</code>
     * @return The payload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    public static final int WANT_RESPONSE_FIELD_NUMBER = 3;
    private boolean wantResponse_ = false;
    /**
     * <pre>
     * Not normally used, but for testing a sender can request that recipient
     * responds in kind (i.e. if it received a position, it should unicast back it's position).
     * Note: that if you set this on a broadcast you will receive many replies.
     * </pre>
     *
     * <code>bool want_response = 3;</code>
     * @return The wantResponse.
     */
    @java.lang.Override
    public boolean getWantResponse() {
      return wantResponse_;
    }

    public static final int DEST_FIELD_NUMBER = 4;
    private int dest_ = 0;
    /**
     * <pre>
     * The address of the destination node.
     * This field is is filled in by the mesh radio device software, application
     * layer software should never need it.
     * RouteDiscovery messages _must_ populate this.
     * Other message types might need to if they are doing multihop routing.
     * </pre>
     *
     * <code>fixed32 dest = 4;</code>
     * @return The dest.
     */
    @java.lang.Override
    public int getDest() {
      return dest_;
    }

    public static final int SOURCE_FIELD_NUMBER = 5;
    private int source_ = 0;
    /**
     * <pre>
     * The address of the original sender for this message.
     * This field should _only_ be populated for reliable multihop packets (to keep
     * packets small).
     * </pre>
     *
     * <code>fixed32 source = 5;</code>
     * @return The source.
     */
    @java.lang.Override
    public int getSource() {
      return source_;
    }

    public static final int REQUEST_ID_FIELD_NUMBER = 6;
    private int requestId_ = 0;
    /**
     * <pre>
     * Only used in routing or response messages.
     * Indicates the original message ID that this message is reporting failure on. (formerly called original_id)
     * </pre>
     *
     * <code>fixed32 request_id = 6;</code>
     * @return The requestId.
     */
    @java.lang.Override
    public int getRequestId() {
      return requestId_;
    }

    public static final int REPLY_ID_FIELD_NUMBER = 7;
    private int replyId_ = 0;
    /**
     * <pre>
     * If set, this message is intened to be a reply to a previously sent message with the defined id.
     * </pre>
     *
     * <code>fixed32 reply_id = 7;</code>
     * @return The replyId.
     */
    @java.lang.Override
    public int getReplyId() {
      return replyId_;
    }

    public static final int EMOJI_FIELD_NUMBER = 8;
    private int emoji_ = 0;
    /**
     * <pre>
     * Defaults to false. If true, then what is in the payload should be treated as an emoji like giving
     * a message a heart or poop emoji.
     * </pre>
     *
     * <code>fixed32 emoji = 8;</code>
     * @return The emoji.
     */
    @java.lang.Override
    public int getEmoji() {
      return emoji_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (portnum_ != com.geeksville.mesh.Portnums.PortNum.UNKNOWN_APP.getNumber()) {
        output.writeEnum(1, portnum_);
      }
      if (!payload_.isEmpty()) {
        output.writeBytes(2, payload_);
      }
      if (wantResponse_ != false) {
        output.writeBool(3, wantResponse_);
      }
      if (dest_ != 0) {
        output.writeFixed32(4, dest_);
      }
      if (source_ != 0) {
        output.writeFixed32(5, source_);
      }
      if (requestId_ != 0) {
        output.writeFixed32(6, requestId_);
      }
      if (replyId_ != 0) {
        output.writeFixed32(7, replyId_);
      }
      if (emoji_ != 0) {
        output.writeFixed32(8, emoji_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (portnum_ != com.geeksville.mesh.Portnums.PortNum.UNKNOWN_APP.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, portnum_);
      }
      if (!payload_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, payload_);
      }
      if (wantResponse_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, wantResponse_);
      }
      if (dest_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, dest_);
      }
      if (source_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, source_);
      }
      if (requestId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(6, requestId_);
      }
      if (replyId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(7, replyId_);
      }
      if (emoji_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(8, emoji_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.Data)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.Data other = (com.geeksville.mesh.MeshProtos.Data) obj;

      if (portnum_ != other.portnum_) return false;
      if (!getPayload()
          .equals(other.getPayload())) return false;
      if (getWantResponse()
          != other.getWantResponse()) return false;
      if (getDest()
          != other.getDest()) return false;
      if (getSource()
          != other.getSource()) return false;
      if (getRequestId()
          != other.getRequestId()) return false;
      if (getReplyId()
          != other.getReplyId()) return false;
      if (getEmoji()
          != other.getEmoji()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORTNUM_FIELD_NUMBER;
      hash = (53 * hash) + portnum_;
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
      hash = (37 * hash) + WANT_RESPONSE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getWantResponse());
      hash = (37 * hash) + DEST_FIELD_NUMBER;
      hash = (53 * hash) + getDest();
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource();
      hash = (37 * hash) + REQUEST_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRequestId();
      hash = (37 * hash) + REPLY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getReplyId();
      hash = (37 * hash) + EMOJI_FIELD_NUMBER;
      hash = (53 * hash) + getEmoji();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.Data prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * (Formerly called SubPacket)
     * The payload portion fo a packet, this is the actual bytes that are sent
     * inside a radio packet (because from/to are broken out by the comms library)
     * </pre>
     *
     * Protobuf type {@code Data}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Data)
        com.geeksville.mesh.MeshProtos.DataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_Data_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.Data.class, com.geeksville.mesh.MeshProtos.Data.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.Data.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        portnum_ = 0;
        payload_ = com.google.protobuf.ByteString.EMPTY;
        wantResponse_ = false;
        dest_ = 0;
        source_ = 0;
        requestId_ = 0;
        replyId_ = 0;
        emoji_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_Data_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Data getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.Data.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Data build() {
        com.geeksville.mesh.MeshProtos.Data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Data buildPartial() {
        com.geeksville.mesh.MeshProtos.Data result = new com.geeksville.mesh.MeshProtos.Data(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.geeksville.mesh.MeshProtos.Data result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.portnum_ = portnum_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.payload_ = payload_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.wantResponse_ = wantResponse_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.dest_ = dest_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.source_ = source_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.requestId_ = requestId_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.replyId_ = replyId_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.emoji_ = emoji_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.Data) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.Data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.Data other) {
        if (other == com.geeksville.mesh.MeshProtos.Data.getDefaultInstance()) return this;
        if (other.portnum_ != 0) {
          setPortnumValue(other.getPortnumValue());
        }
        if (other.getPayload() != com.google.protobuf.ByteString.EMPTY) {
          setPayload(other.getPayload());
        }
        if (other.getWantResponse() != false) {
          setWantResponse(other.getWantResponse());
        }
        if (other.getDest() != 0) {
          setDest(other.getDest());
        }
        if (other.getSource() != 0) {
          setSource(other.getSource());
        }
        if (other.getRequestId() != 0) {
          setRequestId(other.getRequestId());
        }
        if (other.getReplyId() != 0) {
          setReplyId(other.getReplyId());
        }
        if (other.getEmoji() != 0) {
          setEmoji(other.getEmoji());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                portnum_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                payload_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                wantResponse_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 37: {
                dest_ = input.readFixed32();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              case 45: {
                source_ = input.readFixed32();
                bitField0_ |= 0x00000010;
                break;
              } // case 45
              case 53: {
                requestId_ = input.readFixed32();
                bitField0_ |= 0x00000020;
                break;
              } // case 53
              case 61: {
                replyId_ = input.readFixed32();
                bitField0_ |= 0x00000040;
                break;
              } // case 61
              case 69: {
                emoji_ = input.readFixed32();
                bitField0_ |= 0x00000080;
                break;
              } // case 69
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int portnum_ = 0;
      /**
       * <pre>
       * Formerly named typ and of type Type
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @return The enum numeric value on the wire for portnum.
       */
      @java.lang.Override public int getPortnumValue() {
        return portnum_;
      }
      /**
       * <pre>
       * Formerly named typ and of type Type
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @param value The enum numeric value on the wire for portnum to set.
       * @return This builder for chaining.
       */
      public Builder setPortnumValue(int value) {
        portnum_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Formerly named typ and of type Type
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @return The portnum.
       */
      @java.lang.Override
      public com.geeksville.mesh.Portnums.PortNum getPortnum() {
        com.geeksville.mesh.Portnums.PortNum result = com.geeksville.mesh.Portnums.PortNum.forNumber(portnum_);
        return result == null ? com.geeksville.mesh.Portnums.PortNum.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Formerly named typ and of type Type
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @param value The portnum to set.
       * @return This builder for chaining.
       */
      public Builder setPortnum(com.geeksville.mesh.Portnums.PortNum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        portnum_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Formerly named typ and of type Type
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPortnum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        portnum_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>bytes payload = 2;</code>
       * @return The payload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>bytes payload = 2;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        payload_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>bytes payload = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00000002);
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }

      private boolean wantResponse_ ;
      /**
       * <pre>
       * Not normally used, but for testing a sender can request that recipient
       * responds in kind (i.e. if it received a position, it should unicast back it's position).
       * Note: that if you set this on a broadcast you will receive many replies.
       * </pre>
       *
       * <code>bool want_response = 3;</code>
       * @return The wantResponse.
       */
      @java.lang.Override
      public boolean getWantResponse() {
        return wantResponse_;
      }
      /**
       * <pre>
       * Not normally used, but for testing a sender can request that recipient
       * responds in kind (i.e. if it received a position, it should unicast back it's position).
       * Note: that if you set this on a broadcast you will receive many replies.
       * </pre>
       *
       * <code>bool want_response = 3;</code>
       * @param value The wantResponse to set.
       * @return This builder for chaining.
       */
      public Builder setWantResponse(boolean value) {
        
        wantResponse_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Not normally used, but for testing a sender can request that recipient
       * responds in kind (i.e. if it received a position, it should unicast back it's position).
       * Note: that if you set this on a broadcast you will receive many replies.
       * </pre>
       *
       * <code>bool want_response = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearWantResponse() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wantResponse_ = false;
        onChanged();
        return this;
      }

      private int dest_ ;
      /**
       * <pre>
       * The address of the destination node.
       * This field is is filled in by the mesh radio device software, application
       * layer software should never need it.
       * RouteDiscovery messages _must_ populate this.
       * Other message types might need to if they are doing multihop routing.
       * </pre>
       *
       * <code>fixed32 dest = 4;</code>
       * @return The dest.
       */
      @java.lang.Override
      public int getDest() {
        return dest_;
      }
      /**
       * <pre>
       * The address of the destination node.
       * This field is is filled in by the mesh radio device software, application
       * layer software should never need it.
       * RouteDiscovery messages _must_ populate this.
       * Other message types might need to if they are doing multihop routing.
       * </pre>
       *
       * <code>fixed32 dest = 4;</code>
       * @param value The dest to set.
       * @return This builder for chaining.
       */
      public Builder setDest(int value) {
        
        dest_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The address of the destination node.
       * This field is is filled in by the mesh radio device software, application
       * layer software should never need it.
       * RouteDiscovery messages _must_ populate this.
       * Other message types might need to if they are doing multihop routing.
       * </pre>
       *
       * <code>fixed32 dest = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDest() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dest_ = 0;
        onChanged();
        return this;
      }

      private int source_ ;
      /**
       * <pre>
       * The address of the original sender for this message.
       * This field should _only_ be populated for reliable multihop packets (to keep
       * packets small).
       * </pre>
       *
       * <code>fixed32 source = 5;</code>
       * @return The source.
       */
      @java.lang.Override
      public int getSource() {
        return source_;
      }
      /**
       * <pre>
       * The address of the original sender for this message.
       * This field should _only_ be populated for reliable multihop packets (to keep
       * packets small).
       * </pre>
       *
       * <code>fixed32 source = 5;</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(int value) {
        
        source_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The address of the original sender for this message.
       * This field should _only_ be populated for reliable multihop packets (to keep
       * packets small).
       * </pre>
       *
       * <code>fixed32 source = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        bitField0_ = (bitField0_ & ~0x00000010);
        source_ = 0;
        onChanged();
        return this;
      }

      private int requestId_ ;
      /**
       * <pre>
       * Only used in routing or response messages.
       * Indicates the original message ID that this message is reporting failure on. (formerly called original_id)
       * </pre>
       *
       * <code>fixed32 request_id = 6;</code>
       * @return The requestId.
       */
      @java.lang.Override
      public int getRequestId() {
        return requestId_;
      }
      /**
       * <pre>
       * Only used in routing or response messages.
       * Indicates the original message ID that this message is reporting failure on. (formerly called original_id)
       * </pre>
       *
       * <code>fixed32 request_id = 6;</code>
       * @param value The requestId to set.
       * @return This builder for chaining.
       */
      public Builder setRequestId(int value) {
        
        requestId_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only used in routing or response messages.
       * Indicates the original message ID that this message is reporting failure on. (formerly called original_id)
       * </pre>
       *
       * <code>fixed32 request_id = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        requestId_ = 0;
        onChanged();
        return this;
      }

      private int replyId_ ;
      /**
       * <pre>
       * If set, this message is intened to be a reply to a previously sent message with the defined id.
       * </pre>
       *
       * <code>fixed32 reply_id = 7;</code>
       * @return The replyId.
       */
      @java.lang.Override
      public int getReplyId() {
        return replyId_;
      }
      /**
       * <pre>
       * If set, this message is intened to be a reply to a previously sent message with the defined id.
       * </pre>
       *
       * <code>fixed32 reply_id = 7;</code>
       * @param value The replyId to set.
       * @return This builder for chaining.
       */
      public Builder setReplyId(int value) {
        
        replyId_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, this message is intened to be a reply to a previously sent message with the defined id.
       * </pre>
       *
       * <code>fixed32 reply_id = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearReplyId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        replyId_ = 0;
        onChanged();
        return this;
      }

      private int emoji_ ;
      /**
       * <pre>
       * Defaults to false. If true, then what is in the payload should be treated as an emoji like giving
       * a message a heart or poop emoji.
       * </pre>
       *
       * <code>fixed32 emoji = 8;</code>
       * @return The emoji.
       */
      @java.lang.Override
      public int getEmoji() {
        return emoji_;
      }
      /**
       * <pre>
       * Defaults to false. If true, then what is in the payload should be treated as an emoji like giving
       * a message a heart or poop emoji.
       * </pre>
       *
       * <code>fixed32 emoji = 8;</code>
       * @param value The emoji to set.
       * @return This builder for chaining.
       */
      public Builder setEmoji(int value) {
        
        emoji_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Defaults to false. If true, then what is in the payload should be treated as an emoji like giving
       * a message a heart or poop emoji.
       * </pre>
       *
       * <code>fixed32 emoji = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearEmoji() {
        bitField0_ = (bitField0_ & ~0x00000080);
        emoji_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Data)
    }

    // @@protoc_insertion_point(class_scope:Data)
    private static final com.geeksville.mesh.MeshProtos.Data DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.Data();
    }

    public static com.geeksville.mesh.MeshProtos.Data getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Data>
        PARSER = new com.google.protobuf.AbstractParser<Data>() {
      @java.lang.Override
      public Data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Data> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Data> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.Data getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WaypointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Waypoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Id of the waypoint
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     * latitude_i
     * </pre>
     *
     * <code>sfixed32 latitude_i = 2;</code>
     * @return The latitudeI.
     */
    int getLatitudeI();

    /**
     * <pre>
     * longitude_i
     * </pre>
     *
     * <code>sfixed32 longitude_i = 3;</code>
     * @return The longitudeI.
     */
    int getLongitudeI();

    /**
     * <pre>
     * Time the waypoint is to expire (epoch)
     * </pre>
     *
     * <code>uint32 expire = 4;</code>
     * @return The expire.
     */
    int getExpire();

    /**
     * <pre>
     * If true, only allow the original sender to update the waypoint.
     * </pre>
     *
     * <code>bool locked = 5;</code>
     * @return The locked.
     */
    boolean getLocked();

    /**
     * <pre>
     * Name of the waypoint - max 30 chars
     * </pre>
     *
     * <code>string name = 6;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name of the waypoint - max 30 chars
     * </pre>
     *
     * <code>string name = 6;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     **
     * Description of the waypoint - max 100 chars
     * </pre>
     *
     * <code>string description = 7;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     **
     * Description of the waypoint - max 100 chars
     * </pre>
     *
     * <code>string description = 7;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();
  }
  /**
   * <pre>
   * Waypoint message, used to share arbitrary locations across the mesh
   * </pre>
   *
   * Protobuf type {@code Waypoint}
   */
  public static final class Waypoint extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Waypoint)
      WaypointOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Waypoint.newBuilder() to construct.
    private Waypoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Waypoint() {
      name_ = "";
      description_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Waypoint();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_Waypoint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_Waypoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.Waypoint.class, com.geeksville.mesh.MeshProtos.Waypoint.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <pre>
     * Id of the waypoint
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int LATITUDE_I_FIELD_NUMBER = 2;
    private int latitudeI_ = 0;
    /**
     * <pre>
     * latitude_i
     * </pre>
     *
     * <code>sfixed32 latitude_i = 2;</code>
     * @return The latitudeI.
     */
    @java.lang.Override
    public int getLatitudeI() {
      return latitudeI_;
    }

    public static final int LONGITUDE_I_FIELD_NUMBER = 3;
    private int longitudeI_ = 0;
    /**
     * <pre>
     * longitude_i
     * </pre>
     *
     * <code>sfixed32 longitude_i = 3;</code>
     * @return The longitudeI.
     */
    @java.lang.Override
    public int getLongitudeI() {
      return longitudeI_;
    }

    public static final int EXPIRE_FIELD_NUMBER = 4;
    private int expire_ = 0;
    /**
     * <pre>
     * Time the waypoint is to expire (epoch)
     * </pre>
     *
     * <code>uint32 expire = 4;</code>
     * @return The expire.
     */
    @java.lang.Override
    public int getExpire() {
      return expire_;
    }

    public static final int LOCKED_FIELD_NUMBER = 5;
    private boolean locked_ = false;
    /**
     * <pre>
     * If true, only allow the original sender to update the waypoint.
     * </pre>
     *
     * <code>bool locked = 5;</code>
     * @return The locked.
     */
    @java.lang.Override
    public boolean getLocked() {
      return locked_;
    }

    public static final int NAME_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * Name of the waypoint - max 30 chars
     * </pre>
     *
     * <code>string name = 6;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the waypoint - max 30 chars
     * </pre>
     *
     * <code>string name = 6;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object description_ = "";
    /**
     * <pre>
     **
     * Description of the waypoint - max 100 chars
     * </pre>
     *
     * <code>string description = 7;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     **
     * Description of the waypoint - max 100 chars
     * </pre>
     *
     * <code>string description = 7;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (latitudeI_ != 0) {
        output.writeSFixed32(2, latitudeI_);
      }
      if (longitudeI_ != 0) {
        output.writeSFixed32(3, longitudeI_);
      }
      if (expire_ != 0) {
        output.writeUInt32(4, expire_);
      }
      if (locked_ != false) {
        output.writeBool(5, locked_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, description_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (latitudeI_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(2, latitudeI_);
      }
      if (longitudeI_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(3, longitudeI_);
      }
      if (expire_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, expire_);
      }
      if (locked_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, locked_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, description_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.Waypoint)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.Waypoint other = (com.geeksville.mesh.MeshProtos.Waypoint) obj;

      if (getId()
          != other.getId()) return false;
      if (getLatitudeI()
          != other.getLatitudeI()) return false;
      if (getLongitudeI()
          != other.getLongitudeI()) return false;
      if (getExpire()
          != other.getExpire()) return false;
      if (getLocked()
          != other.getLocked()) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + LATITUDE_I_FIELD_NUMBER;
      hash = (53 * hash) + getLatitudeI();
      hash = (37 * hash) + LONGITUDE_I_FIELD_NUMBER;
      hash = (53 * hash) + getLongitudeI();
      hash = (37 * hash) + EXPIRE_FIELD_NUMBER;
      hash = (53 * hash) + getExpire();
      hash = (37 * hash) + LOCKED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLocked());
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.Waypoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Waypoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Waypoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Waypoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Waypoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Waypoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Waypoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Waypoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Waypoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Waypoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Waypoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Waypoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.Waypoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Waypoint message, used to share arbitrary locations across the mesh
     * </pre>
     *
     * Protobuf type {@code Waypoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Waypoint)
        com.geeksville.mesh.MeshProtos.WaypointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_Waypoint_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_Waypoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.Waypoint.class, com.geeksville.mesh.MeshProtos.Waypoint.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.Waypoint.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        latitudeI_ = 0;
        longitudeI_ = 0;
        expire_ = 0;
        locked_ = false;
        name_ = "";
        description_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_Waypoint_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Waypoint getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.Waypoint.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Waypoint build() {
        com.geeksville.mesh.MeshProtos.Waypoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Waypoint buildPartial() {
        com.geeksville.mesh.MeshProtos.Waypoint result = new com.geeksville.mesh.MeshProtos.Waypoint(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.geeksville.mesh.MeshProtos.Waypoint result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.latitudeI_ = latitudeI_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.longitudeI_ = longitudeI_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.expire_ = expire_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.locked_ = locked_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.description_ = description_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.Waypoint) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.Waypoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.Waypoint other) {
        if (other == com.geeksville.mesh.MeshProtos.Waypoint.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getLatitudeI() != 0) {
          setLatitudeI(other.getLatitudeI());
        }
        if (other.getLongitudeI() != 0) {
          setLongitudeI(other.getLongitudeI());
        }
        if (other.getExpire() != 0) {
          setExpire(other.getExpire());
        }
        if (other.getLocked() != false) {
          setLocked(other.getLocked());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000020;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 21: {
                latitudeI_ = input.readSFixed32();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              case 29: {
                longitudeI_ = input.readSFixed32();
                bitField0_ |= 0x00000004;
                break;
              } // case 29
              case 32: {
                expire_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                locked_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 50: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                description_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       * Id of the waypoint
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * Id of the waypoint
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id of the waypoint
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private int latitudeI_ ;
      /**
       * <pre>
       * latitude_i
       * </pre>
       *
       * <code>sfixed32 latitude_i = 2;</code>
       * @return The latitudeI.
       */
      @java.lang.Override
      public int getLatitudeI() {
        return latitudeI_;
      }
      /**
       * <pre>
       * latitude_i
       * </pre>
       *
       * <code>sfixed32 latitude_i = 2;</code>
       * @param value The latitudeI to set.
       * @return This builder for chaining.
       */
      public Builder setLatitudeI(int value) {
        
        latitudeI_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * latitude_i
       * </pre>
       *
       * <code>sfixed32 latitude_i = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLatitudeI() {
        bitField0_ = (bitField0_ & ~0x00000002);
        latitudeI_ = 0;
        onChanged();
        return this;
      }

      private int longitudeI_ ;
      /**
       * <pre>
       * longitude_i
       * </pre>
       *
       * <code>sfixed32 longitude_i = 3;</code>
       * @return The longitudeI.
       */
      @java.lang.Override
      public int getLongitudeI() {
        return longitudeI_;
      }
      /**
       * <pre>
       * longitude_i
       * </pre>
       *
       * <code>sfixed32 longitude_i = 3;</code>
       * @param value The longitudeI to set.
       * @return This builder for chaining.
       */
      public Builder setLongitudeI(int value) {
        
        longitudeI_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * longitude_i
       * </pre>
       *
       * <code>sfixed32 longitude_i = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongitudeI() {
        bitField0_ = (bitField0_ & ~0x00000004);
        longitudeI_ = 0;
        onChanged();
        return this;
      }

      private int expire_ ;
      /**
       * <pre>
       * Time the waypoint is to expire (epoch)
       * </pre>
       *
       * <code>uint32 expire = 4;</code>
       * @return The expire.
       */
      @java.lang.Override
      public int getExpire() {
        return expire_;
      }
      /**
       * <pre>
       * Time the waypoint is to expire (epoch)
       * </pre>
       *
       * <code>uint32 expire = 4;</code>
       * @param value The expire to set.
       * @return This builder for chaining.
       */
      public Builder setExpire(int value) {
        
        expire_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time the waypoint is to expire (epoch)
       * </pre>
       *
       * <code>uint32 expire = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpire() {
        bitField0_ = (bitField0_ & ~0x00000008);
        expire_ = 0;
        onChanged();
        return this;
      }

      private boolean locked_ ;
      /**
       * <pre>
       * If true, only allow the original sender to update the waypoint.
       * </pre>
       *
       * <code>bool locked = 5;</code>
       * @return The locked.
       */
      @java.lang.Override
      public boolean getLocked() {
        return locked_;
      }
      /**
       * <pre>
       * If true, only allow the original sender to update the waypoint.
       * </pre>
       *
       * <code>bool locked = 5;</code>
       * @param value The locked to set.
       * @return This builder for chaining.
       */
      public Builder setLocked(boolean value) {
        
        locked_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, only allow the original sender to update the waypoint.
       * </pre>
       *
       * <code>bool locked = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLocked() {
        bitField0_ = (bitField0_ & ~0x00000010);
        locked_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name of the waypoint - max 30 chars
       * </pre>
       *
       * <code>string name = 6;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the waypoint - max 30 chars
       * </pre>
       *
       * <code>string name = 6;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the waypoint - max 30 chars
       * </pre>
       *
       * <code>string name = 6;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the waypoint - max 30 chars
       * </pre>
       *
       * <code>string name = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the waypoint - max 30 chars
       * </pre>
       *
       * <code>string name = 6;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       **
       * Description of the waypoint - max 100 chars
       * </pre>
       *
       * <code>string description = 7;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       **
       * Description of the waypoint - max 100 chars
       * </pre>
       *
       * <code>string description = 7;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       **
       * Description of the waypoint - max 100 chars
       * </pre>
       *
       * <code>string description = 7;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        description_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **
       * Description of the waypoint - max 100 chars
       * </pre>
       *
       * <code>string description = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        description_ = getDefaultInstance().getDescription();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <pre>
       **
       * Description of the waypoint - max 100 chars
       * </pre>
       *
       * <code>string description = 7;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        description_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Waypoint)
    }

    // @@protoc_insertion_point(class_scope:Waypoint)
    private static final com.geeksville.mesh.MeshProtos.Waypoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.Waypoint();
    }

    public static com.geeksville.mesh.MeshProtos.Waypoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Waypoint>
        PARSER = new com.google.protobuf.AbstractParser<Waypoint>() {
      @java.lang.Override
      public Waypoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Waypoint> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Waypoint> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.Waypoint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MeshPacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MeshPacket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The sending node number.
     * Note: Our crypto implementation uses this field as well.
     * See [crypto](/docs/overview/encryption) for details.
     * FIXME - really should be fixed32 instead, this encoding only hurts the ble link though.
     * </pre>
     *
     * <code>fixed32 from = 1;</code>
     * @return The from.
     */
    int getFrom();

    /**
     * <pre>
     * The (immediatSee Priority description for more details.y should be fixed32 instead, this encoding only
     * hurts the ble link though.
     * </pre>
     *
     * <code>fixed32 to = 2;</code>
     * @return The to.
     */
    int getTo();

    /**
     * <pre>
     * (Usually) If set, this indicates the index in the secondary_channels table that this packet was sent/received on.
     * If unset, packet was on the primary channel.
     * A particular node might know only a subset of channels in use on the mesh.
     * Therefore channel_index is inherently a local concept and meaningless to send between nodes.
     * Very briefly, while sending and receiving deep inside the device Router code, this field instead
     * contains the 'channel hash' instead of the index.
     * This 'trick' is only used while the payload_variant is an 'encrypted'.
     * </pre>
     *
     * <code>uint32 channel = 3;</code>
     * @return The channel.
     */
    int getChannel();

    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>.Data decoded = 4;</code>
     * @return Whether the decoded field is set.
     */
    boolean hasDecoded();
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>.Data decoded = 4;</code>
     * @return The decoded.
     */
    com.geeksville.mesh.MeshProtos.Data getDecoded();
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>.Data decoded = 4;</code>
     */
    com.geeksville.mesh.MeshProtos.DataOrBuilder getDecodedOrBuilder();

    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>bytes encrypted = 5;</code>
     * @return Whether the encrypted field is set.
     */
    boolean hasEncrypted();
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>bytes encrypted = 5;</code>
     * @return The encrypted.
     */
    com.google.protobuf.ByteString getEncrypted();

    /**
     * <pre>
     * A unique ID for this packet.
     * Always 0 for no-ack packets or non broadcast packets (and therefore take zero bytes of space).
     * Otherwise a unique ID for this packet, useful for flooding algorithms.
     * ID only needs to be unique on a _per sender_ basis, and it only
     * needs to be unique for a few minutes (long enough to last for the length of
     * any ACK or the completion of a mesh broadcast flood).
     * Note: Our crypto implementation uses this id as well.
     * See [crypto](/docs/overview/encryption) for details.
     * FIXME - really should be fixed32 instead, this encoding only
     * hurts the ble link though.
     * </pre>
     *
     * <code>fixed32 id = 6;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     * The time this message was received by the esp32 (secs since 1970).
     * Note: this field is _never_ sent on the radio link itself (to save space) Times
     * are typically not sent over the mesh, but they will be added to any Packet
     * (chain of SubPacket) sent to the phone (so the phone can know exact time of reception)
     * </pre>
     *
     * <code>fixed32 rx_time = 7;</code>
     * @return The rxTime.
     */
    int getRxTime();

    /**
     * <pre>
     * *Never* sent over the radio links.
     * Set during reception to indicate the SNR of this packet.
     * Used to collect statistics on current link quality.
     * </pre>
     *
     * <code>float rx_snr = 8;</code>
     * @return The rxSnr.
     */
    float getRxSnr();

    /**
     * <pre>
     * If unset treated as zero (no forwarding, send to adjacent nodes only)
     * if 1, allow hopping through one node, etc...
     * For our usecase real world topologies probably have a max of about 3.
     * This field is normally placed into a few of bits in the header.
     * </pre>
     *
     * <code>uint32 hop_limit = 9;</code>
     * @return The hopLimit.
     */
    int getHopLimit();

    /**
     * <pre>
     * This packet is being sent as a reliable message, we would prefer it to arrive at the destination.
     * We would like to receive a ack packet in response.
     * Broadcasts messages treat this flag specially: Since acks for broadcasts would
     * rapidly flood the channel, the normal ack behavior is suppressed.
     * Instead, the original sender listens to see if at least one node is rebroadcasting this packet (because naive flooding algorithm).
     * If it hears that the odds (given typical LoRa topologies) the odds are very high that every node should eventually receive the message.
     * So FloodingRouter.cpp generates an implicit ack which is delivered to the original sender.
     * If after some time we don't hear anyone rebroadcast our packet, we will timeout and retransmit, using the regular resend logic.
     * Note: This flag is normally sent in a flag bit in the header when sent over the wire
     * </pre>
     *
     * <code>bool want_ack = 10;</code>
     * @return The wantAck.
     */
    boolean getWantAck();

    /**
     * <pre>
     * The priority of this message for sending.
     * See MeshPacket.Priority description for more details.
     * </pre>
     *
     * <code>.MeshPacket.Priority priority = 11;</code>
     * @return The enum numeric value on the wire for priority.
     */
    int getPriorityValue();
    /**
     * <pre>
     * The priority of this message for sending.
     * See MeshPacket.Priority description for more details.
     * </pre>
     *
     * <code>.MeshPacket.Priority priority = 11;</code>
     * @return The priority.
     */
    com.geeksville.mesh.MeshProtos.MeshPacket.Priority getPriority();

    /**
     * <pre>
     * rssi of received packet. Only sent to phone for dispay purposes.
     * </pre>
     *
     * <code>int32 rx_rssi = 12;</code>
     * @return The rxRssi.
     */
    int getRxRssi();

    /**
     * <pre>
     * Describe if this message is delayed
     * </pre>
     *
     * <code>.MeshPacket.Delayed delayed = 13;</code>
     * @return The enum numeric value on the wire for delayed.
     */
    int getDelayedValue();
    /**
     * <pre>
     * Describe if this message is delayed
     * </pre>
     *
     * <code>.MeshPacket.Delayed delayed = 13;</code>
     * @return The delayed.
     */
    com.geeksville.mesh.MeshProtos.MeshPacket.Delayed getDelayed();

    public com.geeksville.mesh.MeshProtos.MeshPacket.PayloadVariantCase getPayloadVariantCase();
  }
  /**
   * <pre>
   * A packet envelope sent/received over the mesh
   * only payload_variant is sent in the payload portion of the LORA packet.
   * The other fields are either not sent at all, or sent in the special 16 byte LORA header.
   * </pre>
   *
   * Protobuf type {@code MeshPacket}
   */
  public static final class MeshPacket extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MeshPacket)
      MeshPacketOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MeshPacket.newBuilder() to construct.
    private MeshPacket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MeshPacket() {
      priority_ = 0;
      delayed_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MeshPacket();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_MeshPacket_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_MeshPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.MeshPacket.class, com.geeksville.mesh.MeshProtos.MeshPacket.Builder.class);
    }

    /**
     * <pre>
     * The priority of this message for sending.
     * Higher priorities are sent first (when managing the transmit queue).
     * This field is never sent over the air, it is only used internally inside of a local device node.
     * API clients (either on the local node or connected directly to the node)
     * can set this parameter if necessary.
     * (values must be &lt;= 127 to keep protobuf field to one byte in size.
     * Detailed background on this field:
     * I noticed a funny side effect of lora being so slow: Usually when making
     * a protocol there isn’t much need to use message priority to change the order
     * of transmission (because interfaces are fairly fast).
     * But for lora where packets can take a few seconds each, it is very important
     * to make sure that critical packets are sent ASAP.
     * In the case of meshtastic that means we want to send protocol acks as soon as possible
     * (to prevent unneeded retransmissions), we want routing messages to be sent next,
     * then messages marked as reliable and finally ‘background’ packets like periodic position updates.
     * So I bit the bullet and implemented a new (internal - not sent over the air)
     * field in MeshPacket called ‘priority’.
     * And the transmission queue in the router object is now a priority queue.
     * </pre>
     *
     * Protobuf enum {@code MeshPacket.Priority}
     */
    public enum Priority
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Treated as Priority.DEFAULT
       * </pre>
       *
       * <code>UNSET = 0;</code>
       */
      UNSET(0),
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>MIN = 1;</code>
       */
      MIN(1),
      /**
       * <pre>
       * Background position updates are sent with very low priority -
       * if the link is super congested they might not go out at all
       * </pre>
       *
       * <code>BACKGROUND = 10;</code>
       */
      BACKGROUND(10),
      /**
       * <pre>
       * This priority is used for most messages that don't have a priority set
       * </pre>
       *
       * <code>DEFAULT = 64;</code>
       */
      DEFAULT(64),
      /**
       * <pre>
       * If priority is unset but the message is marked as want_ack,
       * assume it is important and use a slightly higher priority
       * </pre>
       *
       * <code>RELIABLE = 70;</code>
       */
      RELIABLE(70),
      /**
       * <pre>
       * Ack/naks are sent with very high priority to ensure that retransmission
       * stops as soon as possible
       * </pre>
       *
       * <code>ACK = 120;</code>
       */
      ACK(120),
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>MAX = 127;</code>
       */
      MAX(127),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Treated as Priority.DEFAULT
       * </pre>
       *
       * <code>UNSET = 0;</code>
       */
      public static final int UNSET_VALUE = 0;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>MIN = 1;</code>
       */
      public static final int MIN_VALUE = 1;
      /**
       * <pre>
       * Background position updates are sent with very low priority -
       * if the link is super congested they might not go out at all
       * </pre>
       *
       * <code>BACKGROUND = 10;</code>
       */
      public static final int BACKGROUND_VALUE = 10;
      /**
       * <pre>
       * This priority is used for most messages that don't have a priority set
       * </pre>
       *
       * <code>DEFAULT = 64;</code>
       */
      public static final int DEFAULT_VALUE = 64;
      /**
       * <pre>
       * If priority is unset but the message is marked as want_ack,
       * assume it is important and use a slightly higher priority
       * </pre>
       *
       * <code>RELIABLE = 70;</code>
       */
      public static final int RELIABLE_VALUE = 70;
      /**
       * <pre>
       * Ack/naks are sent with very high priority to ensure that retransmission
       * stops as soon as possible
       * </pre>
       *
       * <code>ACK = 120;</code>
       */
      public static final int ACK_VALUE = 120;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>MAX = 127;</code>
       */
      public static final int MAX_VALUE = 127;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Priority valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Priority forNumber(int value) {
        switch (value) {
          case 0: return UNSET;
          case 1: return MIN;
          case 10: return BACKGROUND;
          case 64: return DEFAULT;
          case 70: return RELIABLE;
          case 120: return ACK;
          case 127: return MAX;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Priority>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Priority> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Priority>() {
              public Priority findValueByNumber(int number) {
                return Priority.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.MeshPacket.getDescriptor().getEnumTypes().get(0);
      }

      private static final Priority[] VALUES = values();

      public static Priority valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Priority(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:MeshPacket.Priority)
    }

    /**
     * <pre>
     * Identify if this is a delayed packet
     * </pre>
     *
     * Protobuf enum {@code MeshPacket.Delayed}
     */
    public enum Delayed
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * If unset, the message is being sent in real time.
       * </pre>
       *
       * <code>NO_DELAY = 0;</code>
       */
      NO_DELAY(0),
      /**
       * <pre>
       * The message is delayed and was originally a broadcast
       * </pre>
       *
       * <code>DELAYED_BROADCAST = 1;</code>
       */
      DELAYED_BROADCAST(1),
      /**
       * <pre>
       * The message is delayed and was originally a direct message
       * </pre>
       *
       * <code>DELAYED_DIRECT = 2;</code>
       */
      DELAYED_DIRECT(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * If unset, the message is being sent in real time.
       * </pre>
       *
       * <code>NO_DELAY = 0;</code>
       */
      public static final int NO_DELAY_VALUE = 0;
      /**
       * <pre>
       * The message is delayed and was originally a broadcast
       * </pre>
       *
       * <code>DELAYED_BROADCAST = 1;</code>
       */
      public static final int DELAYED_BROADCAST_VALUE = 1;
      /**
       * <pre>
       * The message is delayed and was originally a direct message
       * </pre>
       *
       * <code>DELAYED_DIRECT = 2;</code>
       */
      public static final int DELAYED_DIRECT_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Delayed valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Delayed forNumber(int value) {
        switch (value) {
          case 0: return NO_DELAY;
          case 1: return DELAYED_BROADCAST;
          case 2: return DELAYED_DIRECT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Delayed>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Delayed> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Delayed>() {
              public Delayed findValueByNumber(int number) {
                return Delayed.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.MeshPacket.getDescriptor().getEnumTypes().get(1);
      }

      private static final Delayed[] VALUES = values();

      public static Delayed valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Delayed(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:MeshPacket.Delayed)
    }

    private int payloadVariantCase_ = 0;
    private java.lang.Object payloadVariant_;
    public enum PayloadVariantCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      DECODED(4),
      ENCRYPTED(5),
      PAYLOADVARIANT_NOT_SET(0);
      private final int value;
      private PayloadVariantCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadVariantCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadVariantCase forNumber(int value) {
        switch (value) {
          case 4: return DECODED;
          case 5: return ENCRYPTED;
          case 0: return PAYLOADVARIANT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadVariantCase
    getPayloadVariantCase() {
      return PayloadVariantCase.forNumber(
          payloadVariantCase_);
    }

    public static final int FROM_FIELD_NUMBER = 1;
    private int from_ = 0;
    /**
     * <pre>
     * The sending node number.
     * Note: Our crypto implementation uses this field as well.
     * See [crypto](/docs/overview/encryption) for details.
     * FIXME - really should be fixed32 instead, this encoding only hurts the ble link though.
     * </pre>
     *
     * <code>fixed32 from = 1;</code>
     * @return The from.
     */
    @java.lang.Override
    public int getFrom() {
      return from_;
    }

    public static final int TO_FIELD_NUMBER = 2;
    private int to_ = 0;
    /**
     * <pre>
     * The (immediatSee Priority description for more details.y should be fixed32 instead, this encoding only
     * hurts the ble link though.
     * </pre>
     *
     * <code>fixed32 to = 2;</code>
     * @return The to.
     */
    @java.lang.Override
    public int getTo() {
      return to_;
    }

    public static final int CHANNEL_FIELD_NUMBER = 3;
    private int channel_ = 0;
    /**
     * <pre>
     * (Usually) If set, this indicates the index in the secondary_channels table that this packet was sent/received on.
     * If unset, packet was on the primary channel.
     * A particular node might know only a subset of channels in use on the mesh.
     * Therefore channel_index is inherently a local concept and meaningless to send between nodes.
     * Very briefly, while sending and receiving deep inside the device Router code, this field instead
     * contains the 'channel hash' instead of the index.
     * This 'trick' is only used while the payload_variant is an 'encrypted'.
     * </pre>
     *
     * <code>uint32 channel = 3;</code>
     * @return The channel.
     */
    @java.lang.Override
    public int getChannel() {
      return channel_;
    }

    public static final int DECODED_FIELD_NUMBER = 4;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>.Data decoded = 4;</code>
     * @return Whether the decoded field is set.
     */
    @java.lang.Override
    public boolean hasDecoded() {
      return payloadVariantCase_ == 4;
    }
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>.Data decoded = 4;</code>
     * @return The decoded.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.Data getDecoded() {
      if (payloadVariantCase_ == 4) {
         return (com.geeksville.mesh.MeshProtos.Data) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.Data.getDefaultInstance();
    }
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>.Data decoded = 4;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.DataOrBuilder getDecodedOrBuilder() {
      if (payloadVariantCase_ == 4) {
         return (com.geeksville.mesh.MeshProtos.Data) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.Data.getDefaultInstance();
    }

    public static final int ENCRYPTED_FIELD_NUMBER = 5;
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>bytes encrypted = 5;</code>
     * @return Whether the encrypted field is set.
     */
    @java.lang.Override
    public boolean hasEncrypted() {
      return payloadVariantCase_ == 5;
    }
    /**
     * <pre>
     * TODO: REPLACE
     * </pre>
     *
     * <code>bytes encrypted = 5;</code>
     * @return The encrypted.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEncrypted() {
      if (payloadVariantCase_ == 5) {
        return (com.google.protobuf.ByteString) payloadVariant_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int ID_FIELD_NUMBER = 6;
    private int id_ = 0;
    /**
     * <pre>
     * A unique ID for this packet.
     * Always 0 for no-ack packets or non broadcast packets (and therefore take zero bytes of space).
     * Otherwise a unique ID for this packet, useful for flooding algorithms.
     * ID only needs to be unique on a _per sender_ basis, and it only
     * needs to be unique for a few minutes (long enough to last for the length of
     * any ACK or the completion of a mesh broadcast flood).
     * Note: Our crypto implementation uses this id as well.
     * See [crypto](/docs/overview/encryption) for details.
     * FIXME - really should be fixed32 instead, this encoding only
     * hurts the ble link though.
     * </pre>
     *
     * <code>fixed32 id = 6;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int RX_TIME_FIELD_NUMBER = 7;
    private int rxTime_ = 0;
    /**
     * <pre>
     * The time this message was received by the esp32 (secs since 1970).
     * Note: this field is _never_ sent on the radio link itself (to save space) Times
     * are typically not sent over the mesh, but they will be added to any Packet
     * (chain of SubPacket) sent to the phone (so the phone can know exact time of reception)
     * </pre>
     *
     * <code>fixed32 rx_time = 7;</code>
     * @return The rxTime.
     */
    @java.lang.Override
    public int getRxTime() {
      return rxTime_;
    }

    public static final int RX_SNR_FIELD_NUMBER = 8;
    private float rxSnr_ = 0F;
    /**
     * <pre>
     * *Never* sent over the radio links.
     * Set during reception to indicate the SNR of this packet.
     * Used to collect statistics on current link quality.
     * </pre>
     *
     * <code>float rx_snr = 8;</code>
     * @return The rxSnr.
     */
    @java.lang.Override
    public float getRxSnr() {
      return rxSnr_;
    }

    public static final int HOP_LIMIT_FIELD_NUMBER = 9;
    private int hopLimit_ = 0;
    /**
     * <pre>
     * If unset treated as zero (no forwarding, send to adjacent nodes only)
     * if 1, allow hopping through one node, etc...
     * For our usecase real world topologies probably have a max of about 3.
     * This field is normally placed into a few of bits in the header.
     * </pre>
     *
     * <code>uint32 hop_limit = 9;</code>
     * @return The hopLimit.
     */
    @java.lang.Override
    public int getHopLimit() {
      return hopLimit_;
    }

    public static final int WANT_ACK_FIELD_NUMBER = 10;
    private boolean wantAck_ = false;
    /**
     * <pre>
     * This packet is being sent as a reliable message, we would prefer it to arrive at the destination.
     * We would like to receive a ack packet in response.
     * Broadcasts messages treat this flag specially: Since acks for broadcasts would
     * rapidly flood the channel, the normal ack behavior is suppressed.
     * Instead, the original sender listens to see if at least one node is rebroadcasting this packet (because naive flooding algorithm).
     * If it hears that the odds (given typical LoRa topologies) the odds are very high that every node should eventually receive the message.
     * So FloodingRouter.cpp generates an implicit ack which is delivered to the original sender.
     * If after some time we don't hear anyone rebroadcast our packet, we will timeout and retransmit, using the regular resend logic.
     * Note: This flag is normally sent in a flag bit in the header when sent over the wire
     * </pre>
     *
     * <code>bool want_ack = 10;</code>
     * @return The wantAck.
     */
    @java.lang.Override
    public boolean getWantAck() {
      return wantAck_;
    }

    public static final int PRIORITY_FIELD_NUMBER = 11;
    private int priority_ = 0;
    /**
     * <pre>
     * The priority of this message for sending.
     * See MeshPacket.Priority description for more details.
     * </pre>
     *
     * <code>.MeshPacket.Priority priority = 11;</code>
     * @return The enum numeric value on the wire for priority.
     */
    @java.lang.Override public int getPriorityValue() {
      return priority_;
    }
    /**
     * <pre>
     * The priority of this message for sending.
     * See MeshPacket.Priority description for more details.
     * </pre>
     *
     * <code>.MeshPacket.Priority priority = 11;</code>
     * @return The priority.
     */
    @java.lang.Override public com.geeksville.mesh.MeshProtos.MeshPacket.Priority getPriority() {
      com.geeksville.mesh.MeshProtos.MeshPacket.Priority result = com.geeksville.mesh.MeshProtos.MeshPacket.Priority.forNumber(priority_);
      return result == null ? com.geeksville.mesh.MeshProtos.MeshPacket.Priority.UNRECOGNIZED : result;
    }

    public static final int RX_RSSI_FIELD_NUMBER = 12;
    private int rxRssi_ = 0;
    /**
     * <pre>
     * rssi of received packet. Only sent to phone for dispay purposes.
     * </pre>
     *
     * <code>int32 rx_rssi = 12;</code>
     * @return The rxRssi.
     */
    @java.lang.Override
    public int getRxRssi() {
      return rxRssi_;
    }

    public static final int DELAYED_FIELD_NUMBER = 13;
    private int delayed_ = 0;
    /**
     * <pre>
     * Describe if this message is delayed
     * </pre>
     *
     * <code>.MeshPacket.Delayed delayed = 13;</code>
     * @return The enum numeric value on the wire for delayed.
     */
    @java.lang.Override public int getDelayedValue() {
      return delayed_;
    }
    /**
     * <pre>
     * Describe if this message is delayed
     * </pre>
     *
     * <code>.MeshPacket.Delayed delayed = 13;</code>
     * @return The delayed.
     */
    @java.lang.Override public com.geeksville.mesh.MeshProtos.MeshPacket.Delayed getDelayed() {
      com.geeksville.mesh.MeshProtos.MeshPacket.Delayed result = com.geeksville.mesh.MeshProtos.MeshPacket.Delayed.forNumber(delayed_);
      return result == null ? com.geeksville.mesh.MeshProtos.MeshPacket.Delayed.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (from_ != 0) {
        output.writeFixed32(1, from_);
      }
      if (to_ != 0) {
        output.writeFixed32(2, to_);
      }
      if (channel_ != 0) {
        output.writeUInt32(3, channel_);
      }
      if (payloadVariantCase_ == 4) {
        output.writeMessage(4, (com.geeksville.mesh.MeshProtos.Data) payloadVariant_);
      }
      if (payloadVariantCase_ == 5) {
        output.writeBytes(
            5, (com.google.protobuf.ByteString) payloadVariant_);
      }
      if (id_ != 0) {
        output.writeFixed32(6, id_);
      }
      if (rxTime_ != 0) {
        output.writeFixed32(7, rxTime_);
      }
      if (java.lang.Float.floatToRawIntBits(rxSnr_) != 0) {
        output.writeFloat(8, rxSnr_);
      }
      if (hopLimit_ != 0) {
        output.writeUInt32(9, hopLimit_);
      }
      if (wantAck_ != false) {
        output.writeBool(10, wantAck_);
      }
      if (priority_ != com.geeksville.mesh.MeshProtos.MeshPacket.Priority.UNSET.getNumber()) {
        output.writeEnum(11, priority_);
      }
      if (rxRssi_ != 0) {
        output.writeInt32(12, rxRssi_);
      }
      if (delayed_ != com.geeksville.mesh.MeshProtos.MeshPacket.Delayed.NO_DELAY.getNumber()) {
        output.writeEnum(13, delayed_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (from_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, from_);
      }
      if (to_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, to_);
      }
      if (channel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, channel_);
      }
      if (payloadVariantCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.geeksville.mesh.MeshProtos.Data) payloadVariant_);
      }
      if (payloadVariantCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              5, (com.google.protobuf.ByteString) payloadVariant_);
      }
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(6, id_);
      }
      if (rxTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(7, rxTime_);
      }
      if (java.lang.Float.floatToRawIntBits(rxSnr_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, rxSnr_);
      }
      if (hopLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, hopLimit_);
      }
      if (wantAck_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, wantAck_);
      }
      if (priority_ != com.geeksville.mesh.MeshProtos.MeshPacket.Priority.UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, priority_);
      }
      if (rxRssi_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, rxRssi_);
      }
      if (delayed_ != com.geeksville.mesh.MeshProtos.MeshPacket.Delayed.NO_DELAY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, delayed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.MeshPacket)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.MeshPacket other = (com.geeksville.mesh.MeshProtos.MeshPacket) obj;

      if (getFrom()
          != other.getFrom()) return false;
      if (getTo()
          != other.getTo()) return false;
      if (getChannel()
          != other.getChannel()) return false;
      if (getId()
          != other.getId()) return false;
      if (getRxTime()
          != other.getRxTime()) return false;
      if (java.lang.Float.floatToIntBits(getRxSnr())
          != java.lang.Float.floatToIntBits(
              other.getRxSnr())) return false;
      if (getHopLimit()
          != other.getHopLimit()) return false;
      if (getWantAck()
          != other.getWantAck()) return false;
      if (priority_ != other.priority_) return false;
      if (getRxRssi()
          != other.getRxRssi()) return false;
      if (delayed_ != other.delayed_) return false;
      if (!getPayloadVariantCase().equals(other.getPayloadVariantCase())) return false;
      switch (payloadVariantCase_) {
        case 4:
          if (!getDecoded()
              .equals(other.getDecoded())) return false;
          break;
        case 5:
          if (!getEncrypted()
              .equals(other.getEncrypted())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FROM_FIELD_NUMBER;
      hash = (53 * hash) + getFrom();
      hash = (37 * hash) + TO_FIELD_NUMBER;
      hash = (53 * hash) + getTo();
      hash = (37 * hash) + CHANNEL_FIELD_NUMBER;
      hash = (53 * hash) + getChannel();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + RX_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getRxTime();
      hash = (37 * hash) + RX_SNR_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getRxSnr());
      hash = (37 * hash) + HOP_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getHopLimit();
      hash = (37 * hash) + WANT_ACK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getWantAck());
      hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
      hash = (53 * hash) + priority_;
      hash = (37 * hash) + RX_RSSI_FIELD_NUMBER;
      hash = (53 * hash) + getRxRssi();
      hash = (37 * hash) + DELAYED_FIELD_NUMBER;
      hash = (53 * hash) + delayed_;
      switch (payloadVariantCase_) {
        case 4:
          hash = (37 * hash) + DECODED_FIELD_NUMBER;
          hash = (53 * hash) + getDecoded().hashCode();
          break;
        case 5:
          hash = (37 * hash) + ENCRYPTED_FIELD_NUMBER;
          hash = (53 * hash) + getEncrypted().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.MeshPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.MeshPacket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A packet envelope sent/received over the mesh
     * only payload_variant is sent in the payload portion of the LORA packet.
     * The other fields are either not sent at all, or sent in the special 16 byte LORA header.
     * </pre>
     *
     * Protobuf type {@code MeshPacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MeshPacket)
        com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_MeshPacket_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_MeshPacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.MeshPacket.class, com.geeksville.mesh.MeshProtos.MeshPacket.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.MeshPacket.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        from_ = 0;
        to_ = 0;
        channel_ = 0;
        if (decodedBuilder_ != null) {
          decodedBuilder_.clear();
        }
        id_ = 0;
        rxTime_ = 0;
        rxSnr_ = 0F;
        hopLimit_ = 0;
        wantAck_ = false;
        priority_ = 0;
        rxRssi_ = 0;
        delayed_ = 0;
        payloadVariantCase_ = 0;
        payloadVariant_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_MeshPacket_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacket getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacket build() {
        com.geeksville.mesh.MeshProtos.MeshPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacket buildPartial() {
        com.geeksville.mesh.MeshProtos.MeshPacket result = new com.geeksville.mesh.MeshProtos.MeshPacket(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.geeksville.mesh.MeshProtos.MeshPacket result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.from_ = from_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.to_ = to_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.channel_ = channel_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.rxTime_ = rxTime_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.rxSnr_ = rxSnr_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.hopLimit_ = hopLimit_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.wantAck_ = wantAck_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.priority_ = priority_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.rxRssi_ = rxRssi_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.delayed_ = delayed_;
        }
      }

      private void buildPartialOneofs(com.geeksville.mesh.MeshProtos.MeshPacket result) {
        result.payloadVariantCase_ = payloadVariantCase_;
        result.payloadVariant_ = this.payloadVariant_;
        if (payloadVariantCase_ == 4 &&
            decodedBuilder_ != null) {
          result.payloadVariant_ = decodedBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.MeshPacket) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.MeshPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.MeshPacket other) {
        if (other == com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance()) return this;
        if (other.getFrom() != 0) {
          setFrom(other.getFrom());
        }
        if (other.getTo() != 0) {
          setTo(other.getTo());
        }
        if (other.getChannel() != 0) {
          setChannel(other.getChannel());
        }
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getRxTime() != 0) {
          setRxTime(other.getRxTime());
        }
        if (other.getRxSnr() != 0F) {
          setRxSnr(other.getRxSnr());
        }
        if (other.getHopLimit() != 0) {
          setHopLimit(other.getHopLimit());
        }
        if (other.getWantAck() != false) {
          setWantAck(other.getWantAck());
        }
        if (other.priority_ != 0) {
          setPriorityValue(other.getPriorityValue());
        }
        if (other.getRxRssi() != 0) {
          setRxRssi(other.getRxRssi());
        }
        if (other.delayed_ != 0) {
          setDelayedValue(other.getDelayedValue());
        }
        switch (other.getPayloadVariantCase()) {
          case DECODED: {
            mergeDecoded(other.getDecoded());
            break;
          }
          case ENCRYPTED: {
            setEncrypted(other.getEncrypted());
            break;
          }
          case PAYLOADVARIANT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                from_ = input.readFixed32();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              case 21: {
                to_ = input.readFixed32();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              case 24: {
                channel_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                input.readMessage(
                    getDecodedFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadVariantCase_ = 4;
                break;
              } // case 34
              case 42: {
                payloadVariant_ = input.readBytes();
                payloadVariantCase_ = 5;
                break;
              } // case 42
              case 53: {
                id_ = input.readFixed32();
                bitField0_ |= 0x00000020;
                break;
              } // case 53
              case 61: {
                rxTime_ = input.readFixed32();
                bitField0_ |= 0x00000040;
                break;
              } // case 61
              case 69: {
                rxSnr_ = input.readFloat();
                bitField0_ |= 0x00000080;
                break;
              } // case 69
              case 72: {
                hopLimit_ = input.readUInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                wantAck_ = input.readBool();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                priority_ = input.readEnum();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                rxRssi_ = input.readInt32();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                delayed_ = input.readEnum();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int payloadVariantCase_ = 0;
      private java.lang.Object payloadVariant_;
      public PayloadVariantCase
          getPayloadVariantCase() {
        return PayloadVariantCase.forNumber(
            payloadVariantCase_);
      }

      public Builder clearPayloadVariant() {
        payloadVariantCase_ = 0;
        payloadVariant_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private int from_ ;
      /**
       * <pre>
       * The sending node number.
       * Note: Our crypto implementation uses this field as well.
       * See [crypto](/docs/overview/encryption) for details.
       * FIXME - really should be fixed32 instead, this encoding only hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 from = 1;</code>
       * @return The from.
       */
      @java.lang.Override
      public int getFrom() {
        return from_;
      }
      /**
       * <pre>
       * The sending node number.
       * Note: Our crypto implementation uses this field as well.
       * See [crypto](/docs/overview/encryption) for details.
       * FIXME - really should be fixed32 instead, this encoding only hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 from = 1;</code>
       * @param value The from to set.
       * @return This builder for chaining.
       */
      public Builder setFrom(int value) {
        
        from_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The sending node number.
       * Note: Our crypto implementation uses this field as well.
       * See [crypto](/docs/overview/encryption) for details.
       * FIXME - really should be fixed32 instead, this encoding only hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 from = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrom() {
        bitField0_ = (bitField0_ & ~0x00000001);
        from_ = 0;
        onChanged();
        return this;
      }

      private int to_ ;
      /**
       * <pre>
       * The (immediatSee Priority description for more details.y should be fixed32 instead, this encoding only
       * hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 to = 2;</code>
       * @return The to.
       */
      @java.lang.Override
      public int getTo() {
        return to_;
      }
      /**
       * <pre>
       * The (immediatSee Priority description for more details.y should be fixed32 instead, this encoding only
       * hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 to = 2;</code>
       * @param value The to to set.
       * @return This builder for chaining.
       */
      public Builder setTo(int value) {
        
        to_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The (immediatSee Priority description for more details.y should be fixed32 instead, this encoding only
       * hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 to = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        to_ = 0;
        onChanged();
        return this;
      }

      private int channel_ ;
      /**
       * <pre>
       * (Usually) If set, this indicates the index in the secondary_channels table that this packet was sent/received on.
       * If unset, packet was on the primary channel.
       * A particular node might know only a subset of channels in use on the mesh.
       * Therefore channel_index is inherently a local concept and meaningless to send between nodes.
       * Very briefly, while sending and receiving deep inside the device Router code, this field instead
       * contains the 'channel hash' instead of the index.
       * This 'trick' is only used while the payload_variant is an 'encrypted'.
       * </pre>
       *
       * <code>uint32 channel = 3;</code>
       * @return The channel.
       */
      @java.lang.Override
      public int getChannel() {
        return channel_;
      }
      /**
       * <pre>
       * (Usually) If set, this indicates the index in the secondary_channels table that this packet was sent/received on.
       * If unset, packet was on the primary channel.
       * A particular node might know only a subset of channels in use on the mesh.
       * Therefore channel_index is inherently a local concept and meaningless to send between nodes.
       * Very briefly, while sending and receiving deep inside the device Router code, this field instead
       * contains the 'channel hash' instead of the index.
       * This 'trick' is only used while the payload_variant is an 'encrypted'.
       * </pre>
       *
       * <code>uint32 channel = 3;</code>
       * @param value The channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannel(int value) {
        
        channel_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Usually) If set, this indicates the index in the secondary_channels table that this packet was sent/received on.
       * If unset, packet was on the primary channel.
       * A particular node might know only a subset of channels in use on the mesh.
       * Therefore channel_index is inherently a local concept and meaningless to send between nodes.
       * Very briefly, while sending and receiving deep inside the device Router code, this field instead
       * contains the 'channel hash' instead of the index.
       * This 'trick' is only used while the payload_variant is an 'encrypted'.
       * </pre>
       *
       * <code>uint32 channel = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channel_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.Data, com.geeksville.mesh.MeshProtos.Data.Builder, com.geeksville.mesh.MeshProtos.DataOrBuilder> decodedBuilder_;
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Data decoded = 4;</code>
       * @return Whether the decoded field is set.
       */
      @java.lang.Override
      public boolean hasDecoded() {
        return payloadVariantCase_ == 4;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Data decoded = 4;</code>
       * @return The decoded.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Data getDecoded() {
        if (decodedBuilder_ == null) {
          if (payloadVariantCase_ == 4) {
            return (com.geeksville.mesh.MeshProtos.Data) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.Data.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 4) {
            return decodedBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.Data.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Data decoded = 4;</code>
       */
      public Builder setDecoded(com.geeksville.mesh.MeshProtos.Data value) {
        if (decodedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          decodedBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Data decoded = 4;</code>
       */
      public Builder setDecoded(
          com.geeksville.mesh.MeshProtos.Data.Builder builderForValue) {
        if (decodedBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          decodedBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Data decoded = 4;</code>
       */
      public Builder mergeDecoded(com.geeksville.mesh.MeshProtos.Data value) {
        if (decodedBuilder_ == null) {
          if (payloadVariantCase_ == 4 &&
              payloadVariant_ != com.geeksville.mesh.MeshProtos.Data.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.Data.newBuilder((com.geeksville.mesh.MeshProtos.Data) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 4) {
            decodedBuilder_.mergeFrom(value);
          } else {
            decodedBuilder_.setMessage(value);
          }
        }
        payloadVariantCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Data decoded = 4;</code>
       */
      public Builder clearDecoded() {
        if (decodedBuilder_ == null) {
          if (payloadVariantCase_ == 4) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 4) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          decodedBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Data decoded = 4;</code>
       */
      public com.geeksville.mesh.MeshProtos.Data.Builder getDecodedBuilder() {
        return getDecodedFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Data decoded = 4;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.DataOrBuilder getDecodedOrBuilder() {
        if ((payloadVariantCase_ == 4) && (decodedBuilder_ != null)) {
          return decodedBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 4) {
            return (com.geeksville.mesh.MeshProtos.Data) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.Data.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>.Data decoded = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.Data, com.geeksville.mesh.MeshProtos.Data.Builder, com.geeksville.mesh.MeshProtos.DataOrBuilder> 
          getDecodedFieldBuilder() {
        if (decodedBuilder_ == null) {
          if (!(payloadVariantCase_ == 4)) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.Data.getDefaultInstance();
          }
          decodedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.Data, com.geeksville.mesh.MeshProtos.Data.Builder, com.geeksville.mesh.MeshProtos.DataOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.Data) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 4;
        onChanged();
        return decodedBuilder_;
      }

      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>bytes encrypted = 5;</code>
       * @return Whether the encrypted field is set.
       */
      public boolean hasEncrypted() {
        return payloadVariantCase_ == 5;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>bytes encrypted = 5;</code>
       * @return The encrypted.
       */
      public com.google.protobuf.ByteString getEncrypted() {
        if (payloadVariantCase_ == 5) {
          return (com.google.protobuf.ByteString) payloadVariant_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>bytes encrypted = 5;</code>
       * @param value The encrypted to set.
       * @return This builder for chaining.
       */
      public Builder setEncrypted(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        payloadVariantCase_ = 5;
        payloadVariant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO: REPLACE
       * </pre>
       *
       * <code>bytes encrypted = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncrypted() {
        if (payloadVariantCase_ == 5) {
          payloadVariantCase_ = 0;
          payloadVariant_ = null;
          onChanged();
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       * A unique ID for this packet.
       * Always 0 for no-ack packets or non broadcast packets (and therefore take zero bytes of space).
       * Otherwise a unique ID for this packet, useful for flooding algorithms.
       * ID only needs to be unique on a _per sender_ basis, and it only
       * needs to be unique for a few minutes (long enough to last for the length of
       * any ACK or the completion of a mesh broadcast flood).
       * Note: Our crypto implementation uses this id as well.
       * See [crypto](/docs/overview/encryption) for details.
       * FIXME - really should be fixed32 instead, this encoding only
       * hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 id = 6;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * A unique ID for this packet.
       * Always 0 for no-ack packets or non broadcast packets (and therefore take zero bytes of space).
       * Otherwise a unique ID for this packet, useful for flooding algorithms.
       * ID only needs to be unique on a _per sender_ basis, and it only
       * needs to be unique for a few minutes (long enough to last for the length of
       * any ACK or the completion of a mesh broadcast flood).
       * Note: Our crypto implementation uses this id as well.
       * See [crypto](/docs/overview/encryption) for details.
       * FIXME - really should be fixed32 instead, this encoding only
       * hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 id = 6;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique ID for this packet.
       * Always 0 for no-ack packets or non broadcast packets (and therefore take zero bytes of space).
       * Otherwise a unique ID for this packet, useful for flooding algorithms.
       * ID only needs to be unique on a _per sender_ basis, and it only
       * needs to be unique for a few minutes (long enough to last for the length of
       * any ACK or the completion of a mesh broadcast flood).
       * Note: Our crypto implementation uses this id as well.
       * See [crypto](/docs/overview/encryption) for details.
       * FIXME - really should be fixed32 instead, this encoding only
       * hurts the ble link though.
       * </pre>
       *
       * <code>fixed32 id = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        id_ = 0;
        onChanged();
        return this;
      }

      private int rxTime_ ;
      /**
       * <pre>
       * The time this message was received by the esp32 (secs since 1970).
       * Note: this field is _never_ sent on the radio link itself (to save space) Times
       * are typically not sent over the mesh, but they will be added to any Packet
       * (chain of SubPacket) sent to the phone (so the phone can know exact time of reception)
       * </pre>
       *
       * <code>fixed32 rx_time = 7;</code>
       * @return The rxTime.
       */
      @java.lang.Override
      public int getRxTime() {
        return rxTime_;
      }
      /**
       * <pre>
       * The time this message was received by the esp32 (secs since 1970).
       * Note: this field is _never_ sent on the radio link itself (to save space) Times
       * are typically not sent over the mesh, but they will be added to any Packet
       * (chain of SubPacket) sent to the phone (so the phone can know exact time of reception)
       * </pre>
       *
       * <code>fixed32 rx_time = 7;</code>
       * @param value The rxTime to set.
       * @return This builder for chaining.
       */
      public Builder setRxTime(int value) {
        
        rxTime_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time this message was received by the esp32 (secs since 1970).
       * Note: this field is _never_ sent on the radio link itself (to save space) Times
       * are typically not sent over the mesh, but they will be added to any Packet
       * (chain of SubPacket) sent to the phone (so the phone can know exact time of reception)
       * </pre>
       *
       * <code>fixed32 rx_time = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRxTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rxTime_ = 0;
        onChanged();
        return this;
      }

      private float rxSnr_ ;
      /**
       * <pre>
       * *Never* sent over the radio links.
       * Set during reception to indicate the SNR of this packet.
       * Used to collect statistics on current link quality.
       * </pre>
       *
       * <code>float rx_snr = 8;</code>
       * @return The rxSnr.
       */
      @java.lang.Override
      public float getRxSnr() {
        return rxSnr_;
      }
      /**
       * <pre>
       * *Never* sent over the radio links.
       * Set during reception to indicate the SNR of this packet.
       * Used to collect statistics on current link quality.
       * </pre>
       *
       * <code>float rx_snr = 8;</code>
       * @param value The rxSnr to set.
       * @return This builder for chaining.
       */
      public Builder setRxSnr(float value) {
        
        rxSnr_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * *Never* sent over the radio links.
       * Set during reception to indicate the SNR of this packet.
       * Used to collect statistics on current link quality.
       * </pre>
       *
       * <code>float rx_snr = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearRxSnr() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rxSnr_ = 0F;
        onChanged();
        return this;
      }

      private int hopLimit_ ;
      /**
       * <pre>
       * If unset treated as zero (no forwarding, send to adjacent nodes only)
       * if 1, allow hopping through one node, etc...
       * For our usecase real world topologies probably have a max of about 3.
       * This field is normally placed into a few of bits in the header.
       * </pre>
       *
       * <code>uint32 hop_limit = 9;</code>
       * @return The hopLimit.
       */
      @java.lang.Override
      public int getHopLimit() {
        return hopLimit_;
      }
      /**
       * <pre>
       * If unset treated as zero (no forwarding, send to adjacent nodes only)
       * if 1, allow hopping through one node, etc...
       * For our usecase real world topologies probably have a max of about 3.
       * This field is normally placed into a few of bits in the header.
       * </pre>
       *
       * <code>uint32 hop_limit = 9;</code>
       * @param value The hopLimit to set.
       * @return This builder for chaining.
       */
      public Builder setHopLimit(int value) {
        
        hopLimit_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If unset treated as zero (no forwarding, send to adjacent nodes only)
       * if 1, allow hopping through one node, etc...
       * For our usecase real world topologies probably have a max of about 3.
       * This field is normally placed into a few of bits in the header.
       * </pre>
       *
       * <code>uint32 hop_limit = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearHopLimit() {
        bitField0_ = (bitField0_ & ~0x00000100);
        hopLimit_ = 0;
        onChanged();
        return this;
      }

      private boolean wantAck_ ;
      /**
       * <pre>
       * This packet is being sent as a reliable message, we would prefer it to arrive at the destination.
       * We would like to receive a ack packet in response.
       * Broadcasts messages treat this flag specially: Since acks for broadcasts would
       * rapidly flood the channel, the normal ack behavior is suppressed.
       * Instead, the original sender listens to see if at least one node is rebroadcasting this packet (because naive flooding algorithm).
       * If it hears that the odds (given typical LoRa topologies) the odds are very high that every node should eventually receive the message.
       * So FloodingRouter.cpp generates an implicit ack which is delivered to the original sender.
       * If after some time we don't hear anyone rebroadcast our packet, we will timeout and retransmit, using the regular resend logic.
       * Note: This flag is normally sent in a flag bit in the header when sent over the wire
       * </pre>
       *
       * <code>bool want_ack = 10;</code>
       * @return The wantAck.
       */
      @java.lang.Override
      public boolean getWantAck() {
        return wantAck_;
      }
      /**
       * <pre>
       * This packet is being sent as a reliable message, we would prefer it to arrive at the destination.
       * We would like to receive a ack packet in response.
       * Broadcasts messages treat this flag specially: Since acks for broadcasts would
       * rapidly flood the channel, the normal ack behavior is suppressed.
       * Instead, the original sender listens to see if at least one node is rebroadcasting this packet (because naive flooding algorithm).
       * If it hears that the odds (given typical LoRa topologies) the odds are very high that every node should eventually receive the message.
       * So FloodingRouter.cpp generates an implicit ack which is delivered to the original sender.
       * If after some time we don't hear anyone rebroadcast our packet, we will timeout and retransmit, using the regular resend logic.
       * Note: This flag is normally sent in a flag bit in the header when sent over the wire
       * </pre>
       *
       * <code>bool want_ack = 10;</code>
       * @param value The wantAck to set.
       * @return This builder for chaining.
       */
      public Builder setWantAck(boolean value) {
        
        wantAck_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This packet is being sent as a reliable message, we would prefer it to arrive at the destination.
       * We would like to receive a ack packet in response.
       * Broadcasts messages treat this flag specially: Since acks for broadcasts would
       * rapidly flood the channel, the normal ack behavior is suppressed.
       * Instead, the original sender listens to see if at least one node is rebroadcasting this packet (because naive flooding algorithm).
       * If it hears that the odds (given typical LoRa topologies) the odds are very high that every node should eventually receive the message.
       * So FloodingRouter.cpp generates an implicit ack which is delivered to the original sender.
       * If after some time we don't hear anyone rebroadcast our packet, we will timeout and retransmit, using the regular resend logic.
       * Note: This flag is normally sent in a flag bit in the header when sent over the wire
       * </pre>
       *
       * <code>bool want_ack = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearWantAck() {
        bitField0_ = (bitField0_ & ~0x00000200);
        wantAck_ = false;
        onChanged();
        return this;
      }

      private int priority_ = 0;
      /**
       * <pre>
       * The priority of this message for sending.
       * See MeshPacket.Priority description for more details.
       * </pre>
       *
       * <code>.MeshPacket.Priority priority = 11;</code>
       * @return The enum numeric value on the wire for priority.
       */
      @java.lang.Override public int getPriorityValue() {
        return priority_;
      }
      /**
       * <pre>
       * The priority of this message for sending.
       * See MeshPacket.Priority description for more details.
       * </pre>
       *
       * <code>.MeshPacket.Priority priority = 11;</code>
       * @param value The enum numeric value on the wire for priority to set.
       * @return This builder for chaining.
       */
      public Builder setPriorityValue(int value) {
        priority_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The priority of this message for sending.
       * See MeshPacket.Priority description for more details.
       * </pre>
       *
       * <code>.MeshPacket.Priority priority = 11;</code>
       * @return The priority.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacket.Priority getPriority() {
        com.geeksville.mesh.MeshProtos.MeshPacket.Priority result = com.geeksville.mesh.MeshProtos.MeshPacket.Priority.forNumber(priority_);
        return result == null ? com.geeksville.mesh.MeshProtos.MeshPacket.Priority.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The priority of this message for sending.
       * See MeshPacket.Priority description for more details.
       * </pre>
       *
       * <code>.MeshPacket.Priority priority = 11;</code>
       * @param value The priority to set.
       * @return This builder for chaining.
       */
      public Builder setPriority(com.geeksville.mesh.MeshProtos.MeshPacket.Priority value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        priority_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The priority of this message for sending.
       * See MeshPacket.Priority description for more details.
       * </pre>
       *
       * <code>.MeshPacket.Priority priority = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000400);
        priority_ = 0;
        onChanged();
        return this;
      }

      private int rxRssi_ ;
      /**
       * <pre>
       * rssi of received packet. Only sent to phone for dispay purposes.
       * </pre>
       *
       * <code>int32 rx_rssi = 12;</code>
       * @return The rxRssi.
       */
      @java.lang.Override
      public int getRxRssi() {
        return rxRssi_;
      }
      /**
       * <pre>
       * rssi of received packet. Only sent to phone for dispay purposes.
       * </pre>
       *
       * <code>int32 rx_rssi = 12;</code>
       * @param value The rxRssi to set.
       * @return This builder for chaining.
       */
      public Builder setRxRssi(int value) {
        
        rxRssi_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * rssi of received packet. Only sent to phone for dispay purposes.
       * </pre>
       *
       * <code>int32 rx_rssi = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearRxRssi() {
        bitField0_ = (bitField0_ & ~0x00000800);
        rxRssi_ = 0;
        onChanged();
        return this;
      }

      private int delayed_ = 0;
      /**
       * <pre>
       * Describe if this message is delayed
       * </pre>
       *
       * <code>.MeshPacket.Delayed delayed = 13;</code>
       * @return The enum numeric value on the wire for delayed.
       */
      @java.lang.Override public int getDelayedValue() {
        return delayed_;
      }
      /**
       * <pre>
       * Describe if this message is delayed
       * </pre>
       *
       * <code>.MeshPacket.Delayed delayed = 13;</code>
       * @param value The enum numeric value on the wire for delayed to set.
       * @return This builder for chaining.
       */
      public Builder setDelayedValue(int value) {
        delayed_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describe if this message is delayed
       * </pre>
       *
       * <code>.MeshPacket.Delayed delayed = 13;</code>
       * @return The delayed.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacket.Delayed getDelayed() {
        com.geeksville.mesh.MeshProtos.MeshPacket.Delayed result = com.geeksville.mesh.MeshProtos.MeshPacket.Delayed.forNumber(delayed_);
        return result == null ? com.geeksville.mesh.MeshProtos.MeshPacket.Delayed.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Describe if this message is delayed
       * </pre>
       *
       * <code>.MeshPacket.Delayed delayed = 13;</code>
       * @param value The delayed to set.
       * @return This builder for chaining.
       */
      public Builder setDelayed(com.geeksville.mesh.MeshProtos.MeshPacket.Delayed value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        delayed_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describe if this message is delayed
       * </pre>
       *
       * <code>.MeshPacket.Delayed delayed = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelayed() {
        bitField0_ = (bitField0_ & ~0x00001000);
        delayed_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MeshPacket)
    }

    // @@protoc_insertion_point(class_scope:MeshPacket)
    private static final com.geeksville.mesh.MeshProtos.MeshPacket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.MeshPacket();
    }

    public static com.geeksville.mesh.MeshProtos.MeshPacket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MeshPacket>
        PARSER = new com.google.protobuf.AbstractParser<MeshPacket>() {
      @java.lang.Override
      public MeshPacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MeshPacket> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MeshPacket> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MeshPacket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The node number
     * </pre>
     *
     * <code>uint32 num = 1;</code>
     * @return The num.
     */
    int getNum();

    /**
     * <pre>
     * The user info for this node
     * </pre>
     *
     * <code>.User user = 2;</code>
     * @return Whether the user field is set.
     */
    boolean hasUser();
    /**
     * <pre>
     * The user info for this node
     * </pre>
     *
     * <code>.User user = 2;</code>
     * @return The user.
     */
    com.geeksville.mesh.MeshProtos.User getUser();
    /**
     * <pre>
     * The user info for this node
     * </pre>
     *
     * <code>.User user = 2;</code>
     */
    com.geeksville.mesh.MeshProtos.UserOrBuilder getUserOrBuilder();

    /**
     * <pre>
     * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
     * Position.time now indicates the last time we received a POSITION from that node.
     * </pre>
     *
     * <code>.Position position = 3;</code>
     * @return Whether the position field is set.
     */
    boolean hasPosition();
    /**
     * <pre>
     * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
     * Position.time now indicates the last time we received a POSITION from that node.
     * </pre>
     *
     * <code>.Position position = 3;</code>
     * @return The position.
     */
    com.geeksville.mesh.MeshProtos.Position getPosition();
    /**
     * <pre>
     * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
     * Position.time now indicates the last time we received a POSITION from that node.
     * </pre>
     *
     * <code>.Position position = 3;</code>
     */
    com.geeksville.mesh.MeshProtos.PositionOrBuilder getPositionOrBuilder();

    /**
     * <pre>
     * Returns the Signal-to-noise ratio (SNR) of the last received message,
     * as measured by the receiver. Return SNR of the last received message in dB
     * </pre>
     *
     * <code>float snr = 4;</code>
     * @return The snr.
     */
    float getSnr();

    /**
     * <pre>
     * Set to indicate the last time we received a packet from this node
     * </pre>
     *
     * <code>fixed32 last_heard = 5;</code>
     * @return The lastHeard.
     */
    int getLastHeard();

    /**
     * <pre>
     * The latest device metrics for the node.
     * </pre>
     *
     * <code>.DeviceMetrics device_metrics = 6;</code>
     * @return Whether the deviceMetrics field is set.
     */
    boolean hasDeviceMetrics();
    /**
     * <pre>
     * The latest device metrics for the node.
     * </pre>
     *
     * <code>.DeviceMetrics device_metrics = 6;</code>
     * @return The deviceMetrics.
     */
    com.geeksville.mesh.TelemetryProtos.DeviceMetrics getDeviceMetrics();
    /**
     * <pre>
     * The latest device metrics for the node.
     * </pre>
     *
     * <code>.DeviceMetrics device_metrics = 6;</code>
     */
    com.geeksville.mesh.TelemetryProtos.DeviceMetricsOrBuilder getDeviceMetricsOrBuilder();
  }
  /**
   * <pre>
   * The bluetooth to device link:
   * Old BTLE protocol docs from TODO, merge in above and make real docs...
   * use protocol buffers, and NanoPB
   * messages from device to phone:
   * POSITION_UPDATE (..., time)
   * TEXT_RECEIVED(from, text, time)
   * OPAQUE_RECEIVED(from, payload, time) (for signal messages or other applications)
   * messages from phone to device:
   * SET_MYID(id, human readable long, human readable short) (send down the unique ID
   * string used for this node, a human readable string shown for that id, and a very
   * short human readable string suitable for oled screen) SEND_OPAQUE(dest, payload)
   * (for signal messages or other applications) SEND_TEXT(dest, text) Get all
   * nodes() (returns list of nodes, with full info, last time seen, loc, battery
   * level etc) SET_CONFIG (switches device to a new set of radio params and
   * preshared key, drops all existing nodes, force our node to rejoin this new group)
   * Full information about a node on the mesh
   * </pre>
   *
   * Protobuf type {@code NodeInfo}
   */
  public static final class NodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NodeInfo)
      NodeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NodeInfo.newBuilder() to construct.
    private NodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NodeInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_NodeInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_NodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.NodeInfo.class, com.geeksville.mesh.MeshProtos.NodeInfo.Builder.class);
    }

    public static final int NUM_FIELD_NUMBER = 1;
    private int num_ = 0;
    /**
     * <pre>
     * The node number
     * </pre>
     *
     * <code>uint32 num = 1;</code>
     * @return The num.
     */
    @java.lang.Override
    public int getNum() {
      return num_;
    }

    public static final int USER_FIELD_NUMBER = 2;
    private com.geeksville.mesh.MeshProtos.User user_;
    /**
     * <pre>
     * The user info for this node
     * </pre>
     *
     * <code>.User user = 2;</code>
     * @return Whether the user field is set.
     */
    @java.lang.Override
    public boolean hasUser() {
      return user_ != null;
    }
    /**
     * <pre>
     * The user info for this node
     * </pre>
     *
     * <code>.User user = 2;</code>
     * @return The user.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.User getUser() {
      return user_ == null ? com.geeksville.mesh.MeshProtos.User.getDefaultInstance() : user_;
    }
    /**
     * <pre>
     * The user info for this node
     * </pre>
     *
     * <code>.User user = 2;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.UserOrBuilder getUserOrBuilder() {
      return user_ == null ? com.geeksville.mesh.MeshProtos.User.getDefaultInstance() : user_;
    }

    public static final int POSITION_FIELD_NUMBER = 3;
    private com.geeksville.mesh.MeshProtos.Position position_;
    /**
     * <pre>
     * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
     * Position.time now indicates the last time we received a POSITION from that node.
     * </pre>
     *
     * <code>.Position position = 3;</code>
     * @return Whether the position field is set.
     */
    @java.lang.Override
    public boolean hasPosition() {
      return position_ != null;
    }
    /**
     * <pre>
     * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
     * Position.time now indicates the last time we received a POSITION from that node.
     * </pre>
     *
     * <code>.Position position = 3;</code>
     * @return The position.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.Position getPosition() {
      return position_ == null ? com.geeksville.mesh.MeshProtos.Position.getDefaultInstance() : position_;
    }
    /**
     * <pre>
     * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
     * Position.time now indicates the last time we received a POSITION from that node.
     * </pre>
     *
     * <code>.Position position = 3;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.PositionOrBuilder getPositionOrBuilder() {
      return position_ == null ? com.geeksville.mesh.MeshProtos.Position.getDefaultInstance() : position_;
    }

    public static final int SNR_FIELD_NUMBER = 4;
    private float snr_ = 0F;
    /**
     * <pre>
     * Returns the Signal-to-noise ratio (SNR) of the last received message,
     * as measured by the receiver. Return SNR of the last received message in dB
     * </pre>
     *
     * <code>float snr = 4;</code>
     * @return The snr.
     */
    @java.lang.Override
    public float getSnr() {
      return snr_;
    }

    public static final int LAST_HEARD_FIELD_NUMBER = 5;
    private int lastHeard_ = 0;
    /**
     * <pre>
     * Set to indicate the last time we received a packet from this node
     * </pre>
     *
     * <code>fixed32 last_heard = 5;</code>
     * @return The lastHeard.
     */
    @java.lang.Override
    public int getLastHeard() {
      return lastHeard_;
    }

    public static final int DEVICE_METRICS_FIELD_NUMBER = 6;
    private com.geeksville.mesh.TelemetryProtos.DeviceMetrics deviceMetrics_;
    /**
     * <pre>
     * The latest device metrics for the node.
     * </pre>
     *
     * <code>.DeviceMetrics device_metrics = 6;</code>
     * @return Whether the deviceMetrics field is set.
     */
    @java.lang.Override
    public boolean hasDeviceMetrics() {
      return deviceMetrics_ != null;
    }
    /**
     * <pre>
     * The latest device metrics for the node.
     * </pre>
     *
     * <code>.DeviceMetrics device_metrics = 6;</code>
     * @return The deviceMetrics.
     */
    @java.lang.Override
    public com.geeksville.mesh.TelemetryProtos.DeviceMetrics getDeviceMetrics() {
      return deviceMetrics_ == null ? com.geeksville.mesh.TelemetryProtos.DeviceMetrics.getDefaultInstance() : deviceMetrics_;
    }
    /**
     * <pre>
     * The latest device metrics for the node.
     * </pre>
     *
     * <code>.DeviceMetrics device_metrics = 6;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.TelemetryProtos.DeviceMetricsOrBuilder getDeviceMetricsOrBuilder() {
      return deviceMetrics_ == null ? com.geeksville.mesh.TelemetryProtos.DeviceMetrics.getDefaultInstance() : deviceMetrics_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (num_ != 0) {
        output.writeUInt32(1, num_);
      }
      if (user_ != null) {
        output.writeMessage(2, getUser());
      }
      if (position_ != null) {
        output.writeMessage(3, getPosition());
      }
      if (java.lang.Float.floatToRawIntBits(snr_) != 0) {
        output.writeFloat(4, snr_);
      }
      if (lastHeard_ != 0) {
        output.writeFixed32(5, lastHeard_);
      }
      if (deviceMetrics_ != null) {
        output.writeMessage(6, getDeviceMetrics());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (num_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, num_);
      }
      if (user_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUser());
      }
      if (position_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPosition());
      }
      if (java.lang.Float.floatToRawIntBits(snr_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, snr_);
      }
      if (lastHeard_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, lastHeard_);
      }
      if (deviceMetrics_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getDeviceMetrics());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.NodeInfo)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.NodeInfo other = (com.geeksville.mesh.MeshProtos.NodeInfo) obj;

      if (getNum()
          != other.getNum()) return false;
      if (hasUser() != other.hasUser()) return false;
      if (hasUser()) {
        if (!getUser()
            .equals(other.getUser())) return false;
      }
      if (hasPosition() != other.hasPosition()) return false;
      if (hasPosition()) {
        if (!getPosition()
            .equals(other.getPosition())) return false;
      }
      if (java.lang.Float.floatToIntBits(getSnr())
          != java.lang.Float.floatToIntBits(
              other.getSnr())) return false;
      if (getLastHeard()
          != other.getLastHeard()) return false;
      if (hasDeviceMetrics() != other.hasDeviceMetrics()) return false;
      if (hasDeviceMetrics()) {
        if (!getDeviceMetrics()
            .equals(other.getDeviceMetrics())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUM_FIELD_NUMBER;
      hash = (53 * hash) + getNum();
      if (hasUser()) {
        hash = (37 * hash) + USER_FIELD_NUMBER;
        hash = (53 * hash) + getUser().hashCode();
      }
      if (hasPosition()) {
        hash = (37 * hash) + POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getPosition().hashCode();
      }
      hash = (37 * hash) + SNR_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getSnr());
      hash = (37 * hash) + LAST_HEARD_FIELD_NUMBER;
      hash = (53 * hash) + getLastHeard();
      if (hasDeviceMetrics()) {
        hash = (37 * hash) + DEVICE_METRICS_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceMetrics().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.NodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.NodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The bluetooth to device link:
     * Old BTLE protocol docs from TODO, merge in above and make real docs...
     * use protocol buffers, and NanoPB
     * messages from device to phone:
     * POSITION_UPDATE (..., time)
     * TEXT_RECEIVED(from, text, time)
     * OPAQUE_RECEIVED(from, payload, time) (for signal messages or other applications)
     * messages from phone to device:
     * SET_MYID(id, human readable long, human readable short) (send down the unique ID
     * string used for this node, a human readable string shown for that id, and a very
     * short human readable string suitable for oled screen) SEND_OPAQUE(dest, payload)
     * (for signal messages or other applications) SEND_TEXT(dest, text) Get all
     * nodes() (returns list of nodes, with full info, last time seen, loc, battery
     * level etc) SET_CONFIG (switches device to a new set of radio params and
     * preshared key, drops all existing nodes, force our node to rejoin this new group)
     * Full information about a node on the mesh
     * </pre>
     *
     * Protobuf type {@code NodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NodeInfo)
        com.geeksville.mesh.MeshProtos.NodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_NodeInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_NodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.NodeInfo.class, com.geeksville.mesh.MeshProtos.NodeInfo.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.NodeInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        num_ = 0;
        user_ = null;
        if (userBuilder_ != null) {
          userBuilder_.dispose();
          userBuilder_ = null;
        }
        position_ = null;
        if (positionBuilder_ != null) {
          positionBuilder_.dispose();
          positionBuilder_ = null;
        }
        snr_ = 0F;
        lastHeard_ = 0;
        deviceMetrics_ = null;
        if (deviceMetricsBuilder_ != null) {
          deviceMetricsBuilder_.dispose();
          deviceMetricsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_NodeInfo_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.NodeInfo getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.NodeInfo build() {
        com.geeksville.mesh.MeshProtos.NodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.NodeInfo buildPartial() {
        com.geeksville.mesh.MeshProtos.NodeInfo result = new com.geeksville.mesh.MeshProtos.NodeInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.geeksville.mesh.MeshProtos.NodeInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.num_ = num_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.user_ = userBuilder_ == null
              ? user_
              : userBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.position_ = positionBuilder_ == null
              ? position_
              : positionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.snr_ = snr_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.lastHeard_ = lastHeard_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.deviceMetrics_ = deviceMetricsBuilder_ == null
              ? deviceMetrics_
              : deviceMetricsBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.NodeInfo) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.NodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.NodeInfo other) {
        if (other == com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance()) return this;
        if (other.getNum() != 0) {
          setNum(other.getNum());
        }
        if (other.hasUser()) {
          mergeUser(other.getUser());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.getSnr() != 0F) {
          setSnr(other.getSnr());
        }
        if (other.getLastHeard() != 0) {
          setLastHeard(other.getLastHeard());
        }
        if (other.hasDeviceMetrics()) {
          mergeDeviceMetrics(other.getDeviceMetrics());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                num_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getUserFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getPositionFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 37: {
                snr_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              case 45: {
                lastHeard_ = input.readFixed32();
                bitField0_ |= 0x00000010;
                break;
              } // case 45
              case 50: {
                input.readMessage(
                    getDeviceMetricsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int num_ ;
      /**
       * <pre>
       * The node number
       * </pre>
       *
       * <code>uint32 num = 1;</code>
       * @return The num.
       */
      @java.lang.Override
      public int getNum() {
        return num_;
      }
      /**
       * <pre>
       * The node number
       * </pre>
       *
       * <code>uint32 num = 1;</code>
       * @param value The num to set.
       * @return This builder for chaining.
       */
      public Builder setNum(int value) {
        
        num_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The node number
       * </pre>
       *
       * <code>uint32 num = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        num_ = 0;
        onChanged();
        return this;
      }

      private com.geeksville.mesh.MeshProtos.User user_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.User, com.geeksville.mesh.MeshProtos.User.Builder, com.geeksville.mesh.MeshProtos.UserOrBuilder> userBuilder_;
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       * @return Whether the user field is set.
       */
      public boolean hasUser() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       * @return The user.
       */
      public com.geeksville.mesh.MeshProtos.User getUser() {
        if (userBuilder_ == null) {
          return user_ == null ? com.geeksville.mesh.MeshProtos.User.getDefaultInstance() : user_;
        } else {
          return userBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       */
      public Builder setUser(com.geeksville.mesh.MeshProtos.User value) {
        if (userBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          user_ = value;
        } else {
          userBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       */
      public Builder setUser(
          com.geeksville.mesh.MeshProtos.User.Builder builderForValue) {
        if (userBuilder_ == null) {
          user_ = builderForValue.build();
        } else {
          userBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       */
      public Builder mergeUser(com.geeksville.mesh.MeshProtos.User value) {
        if (userBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            user_ != null &&
            user_ != com.geeksville.mesh.MeshProtos.User.getDefaultInstance()) {
            getUserBuilder().mergeFrom(value);
          } else {
            user_ = value;
          }
        } else {
          userBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       */
      public Builder clearUser() {
        bitField0_ = (bitField0_ & ~0x00000002);
        user_ = null;
        if (userBuilder_ != null) {
          userBuilder_.dispose();
          userBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       */
      public com.geeksville.mesh.MeshProtos.User.Builder getUserBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getUserFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       */
      public com.geeksville.mesh.MeshProtos.UserOrBuilder getUserOrBuilder() {
        if (userBuilder_ != null) {
          return userBuilder_.getMessageOrBuilder();
        } else {
          return user_ == null ?
              com.geeksville.mesh.MeshProtos.User.getDefaultInstance() : user_;
        }
      }
      /**
       * <pre>
       * The user info for this node
       * </pre>
       *
       * <code>.User user = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.User, com.geeksville.mesh.MeshProtos.User.Builder, com.geeksville.mesh.MeshProtos.UserOrBuilder> 
          getUserFieldBuilder() {
        if (userBuilder_ == null) {
          userBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.User, com.geeksville.mesh.MeshProtos.User.Builder, com.geeksville.mesh.MeshProtos.UserOrBuilder>(
                  getUser(),
                  getParentForChildren(),
                  isClean());
          user_ = null;
        }
        return userBuilder_;
      }

      private com.geeksville.mesh.MeshProtos.Position position_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.Position, com.geeksville.mesh.MeshProtos.Position.Builder, com.geeksville.mesh.MeshProtos.PositionOrBuilder> positionBuilder_;
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       * @return Whether the position field is set.
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       * @return The position.
       */
      public com.geeksville.mesh.MeshProtos.Position getPosition() {
        if (positionBuilder_ == null) {
          return position_ == null ? com.geeksville.mesh.MeshProtos.Position.getDefaultInstance() : position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       */
      public Builder setPosition(com.geeksville.mesh.MeshProtos.Position value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
        } else {
          positionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       */
      public Builder setPosition(
          com.geeksville.mesh.MeshProtos.Position.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       */
      public Builder mergePosition(com.geeksville.mesh.MeshProtos.Position value) {
        if (positionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            position_ != null &&
            position_ != com.geeksville.mesh.MeshProtos.Position.getDefaultInstance()) {
            getPositionBuilder().mergeFrom(value);
          } else {
            position_ = value;
          }
        } else {
          positionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000004);
        position_ = null;
        if (positionBuilder_ != null) {
          positionBuilder_.dispose();
          positionBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       */
      public com.geeksville.mesh.MeshProtos.Position.Builder getPositionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       */
      public com.geeksville.mesh.MeshProtos.PositionOrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_ == null ?
              com.geeksville.mesh.MeshProtos.Position.getDefaultInstance() : position_;
        }
      }
      /**
       * <pre>
       * This position data. Note: before 1.2.14 we would also store the last time we've heard from this node in position.time, that is no longer true.
       * Position.time now indicates the last time we received a POSITION from that node.
       * </pre>
       *
       * <code>.Position position = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.Position, com.geeksville.mesh.MeshProtos.Position.Builder, com.geeksville.mesh.MeshProtos.PositionOrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.Position, com.geeksville.mesh.MeshProtos.Position.Builder, com.geeksville.mesh.MeshProtos.PositionOrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private float snr_ ;
      /**
       * <pre>
       * Returns the Signal-to-noise ratio (SNR) of the last received message,
       * as measured by the receiver. Return SNR of the last received message in dB
       * </pre>
       *
       * <code>float snr = 4;</code>
       * @return The snr.
       */
      @java.lang.Override
      public float getSnr() {
        return snr_;
      }
      /**
       * <pre>
       * Returns the Signal-to-noise ratio (SNR) of the last received message,
       * as measured by the receiver. Return SNR of the last received message in dB
       * </pre>
       *
       * <code>float snr = 4;</code>
       * @param value The snr to set.
       * @return This builder for chaining.
       */
      public Builder setSnr(float value) {
        
        snr_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Returns the Signal-to-noise ratio (SNR) of the last received message,
       * as measured by the receiver. Return SNR of the last received message in dB
       * </pre>
       *
       * <code>float snr = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSnr() {
        bitField0_ = (bitField0_ & ~0x00000008);
        snr_ = 0F;
        onChanged();
        return this;
      }

      private int lastHeard_ ;
      /**
       * <pre>
       * Set to indicate the last time we received a packet from this node
       * </pre>
       *
       * <code>fixed32 last_heard = 5;</code>
       * @return The lastHeard.
       */
      @java.lang.Override
      public int getLastHeard() {
        return lastHeard_;
      }
      /**
       * <pre>
       * Set to indicate the last time we received a packet from this node
       * </pre>
       *
       * <code>fixed32 last_heard = 5;</code>
       * @param value The lastHeard to set.
       * @return This builder for chaining.
       */
      public Builder setLastHeard(int value) {
        
        lastHeard_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to indicate the last time we received a packet from this node
       * </pre>
       *
       * <code>fixed32 last_heard = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastHeard() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lastHeard_ = 0;
        onChanged();
        return this;
      }

      private com.geeksville.mesh.TelemetryProtos.DeviceMetrics deviceMetrics_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.TelemetryProtos.DeviceMetrics, com.geeksville.mesh.TelemetryProtos.DeviceMetrics.Builder, com.geeksville.mesh.TelemetryProtos.DeviceMetricsOrBuilder> deviceMetricsBuilder_;
      /**
       * <pre>
       * The latest device metrics for the node.
       * </pre>
       *
       * <code>.DeviceMetrics device_metrics = 6;</code>
       * @return Whether the deviceMetrics field is set.
       */
      public boolean hasDeviceMetrics() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * The latest device metrics for the node.
       * </pre>
       *
       * <code>.DeviceMetrics device_metrics = 6;</code>
       * @return The deviceMetrics.
       */
      public com.geeksville.mesh.TelemetryProtos.DeviceMetrics getDeviceMetrics() {
        if (deviceMetricsBuilder_ == null) {
          return deviceMetrics_ == null ? com.geeksville.mesh.TelemetryProtos.DeviceMetrics.getDefaultInstance() : deviceMetrics_;
        } else {
          return deviceMetricsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The latest device metrics for the node.
       * </pre>
       *
       * <code>.DeviceMetrics device_metrics = 6;</code>
       */
      public Builder setDeviceMetrics(com.geeksville.mesh.TelemetryProtos.DeviceMetrics value) {
        if (deviceMetricsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deviceMetrics_ = value;
        } else {
          deviceMetricsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The latest device metrics for the node.
       * </pre>
       *
       * <code>.DeviceMetrics device_metrics = 6;</code>
       */
      public Builder setDeviceMetrics(
          com.geeksville.mesh.TelemetryProtos.DeviceMetrics.Builder builderForValue) {
        if (deviceMetricsBuilder_ == null) {
          deviceMetrics_ = builderForValue.build();
        } else {
          deviceMetricsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The latest device metrics for the node.
       * </pre>
       *
       * <code>.DeviceMetrics device_metrics = 6;</code>
       */
      public Builder mergeDeviceMetrics(com.geeksville.mesh.TelemetryProtos.DeviceMetrics value) {
        if (deviceMetricsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            deviceMetrics_ != null &&
            deviceMetrics_ != com.geeksville.mesh.TelemetryProtos.DeviceMetrics.getDefaultInstance()) {
            getDeviceMetricsBuilder().mergeFrom(value);
          } else {
            deviceMetrics_ = value;
          }
        } else {
          deviceMetricsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The latest device metrics for the node.
       * </pre>
       *
       * <code>.DeviceMetrics device_metrics = 6;</code>
       */
      public Builder clearDeviceMetrics() {
        bitField0_ = (bitField0_ & ~0x00000020);
        deviceMetrics_ = null;
        if (deviceMetricsBuilder_ != null) {
          deviceMetricsBuilder_.dispose();
          deviceMetricsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The latest device metrics for the node.
       * </pre>
       *
       * <code>.DeviceMetrics device_metrics = 6;</code>
       */
      public com.geeksville.mesh.TelemetryProtos.DeviceMetrics.Builder getDeviceMetricsBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getDeviceMetricsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The latest device metrics for the node.
       * </pre>
       *
       * <code>.DeviceMetrics device_metrics = 6;</code>
       */
      public com.geeksville.mesh.TelemetryProtos.DeviceMetricsOrBuilder getDeviceMetricsOrBuilder() {
        if (deviceMetricsBuilder_ != null) {
          return deviceMetricsBuilder_.getMessageOrBuilder();
        } else {
          return deviceMetrics_ == null ?
              com.geeksville.mesh.TelemetryProtos.DeviceMetrics.getDefaultInstance() : deviceMetrics_;
        }
      }
      /**
       * <pre>
       * The latest device metrics for the node.
       * </pre>
       *
       * <code>.DeviceMetrics device_metrics = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.TelemetryProtos.DeviceMetrics, com.geeksville.mesh.TelemetryProtos.DeviceMetrics.Builder, com.geeksville.mesh.TelemetryProtos.DeviceMetricsOrBuilder> 
          getDeviceMetricsFieldBuilder() {
        if (deviceMetricsBuilder_ == null) {
          deviceMetricsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.TelemetryProtos.DeviceMetrics, com.geeksville.mesh.TelemetryProtos.DeviceMetrics.Builder, com.geeksville.mesh.TelemetryProtos.DeviceMetricsOrBuilder>(
                  getDeviceMetrics(),
                  getParentForChildren(),
                  isClean());
          deviceMetrics_ = null;
        }
        return deviceMetricsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NodeInfo)
    }

    // @@protoc_insertion_point(class_scope:NodeInfo)
    private static final com.geeksville.mesh.MeshProtos.NodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.NodeInfo();
    }

    public static com.geeksville.mesh.MeshProtos.NodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<NodeInfo>() {
      @java.lang.Override
      public NodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NodeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NodeInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.NodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MyNodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MyNodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Tells the phone what our node number is, default starting value is
     * lowbyte of macaddr, but it will be fixed if that is already in use
     * </pre>
     *
     * <code>uint32 my_node_num = 1;</code>
     * @return The myNodeNum.
     */
    int getMyNodeNum();

    /**
     * <pre>
     * Note: This flag merely means we detected a hardware GPS in our node.
     * Not the same as UserPreferences.location_sharing
     * </pre>
     *
     * <code>bool has_gps = 2;</code>
     * @return The hasGps.
     */
    boolean getHasGps();

    /**
     * <pre>
     * The maximum number of 'software' channels that can be set on this node.
     * </pre>
     *
     * <code>uint32 max_channels = 3;</code>
     * @return The maxChannels.
     */
    int getMaxChannels();

    /**
     * <pre>
     * 0.0.5 etc...
     * </pre>
     *
     * <code>string firmware_version = 4;</code>
     * @return The firmwareVersion.
     */
    java.lang.String getFirmwareVersion();
    /**
     * <pre>
     * 0.0.5 etc...
     * </pre>
     *
     * <code>string firmware_version = 4;</code>
     * @return The bytes for firmwareVersion.
     */
    com.google.protobuf.ByteString
        getFirmwareVersionBytes();

    /**
     * <pre>
     * An error message we'd like to report back to the mothership through analytics.
     * It indicates a serious bug occurred on the device, the device coped with it,
     * but we still want to tell the devs about the bug.
     * This field will be cleared after the phone reads MyNodeInfo
     * (i.e. it will only be reported once)
     * a numeric error code to go with error message, zero means no error
     * </pre>
     *
     * <code>.CriticalErrorCode error_code = 5;</code>
     * @return The enum numeric value on the wire for errorCode.
     */
    int getErrorCodeValue();
    /**
     * <pre>
     * An error message we'd like to report back to the mothership through analytics.
     * It indicates a serious bug occurred on the device, the device coped with it,
     * but we still want to tell the devs about the bug.
     * This field will be cleared after the phone reads MyNodeInfo
     * (i.e. it will only be reported once)
     * a numeric error code to go with error message, zero means no error
     * </pre>
     *
     * <code>.CriticalErrorCode error_code = 5;</code>
     * @return The errorCode.
     */
    com.geeksville.mesh.MeshProtos.CriticalErrorCode getErrorCode();

    /**
     * <pre>
     * A numeric error address (nonzero if available)
     * </pre>
     *
     * <code>uint32 error_address = 6;</code>
     * @return The errorAddress.
     */
    int getErrorAddress();

    /**
     * <pre>
     * The total number of errors this node has ever encountered
     * (well - since the last time we discarded preferences)
     * </pre>
     *
     * <code>uint32 error_count = 7;</code>
     * @return The errorCount.
     */
    int getErrorCount();

    /**
     * <pre>
     * The total number of reboots this node has ever encountered
     * (well - since the last time we discarded preferences)
     * </pre>
     *
     * <code>uint32 reboot_count = 8;</code>
     * @return The rebootCount.
     */
    int getRebootCount();

    /**
     * <pre>
     * Calculated bitrate of the current channel (in Bytes Per Second)
     * </pre>
     *
     * <code>float bitrate = 9;</code>
     * @return The bitrate.
     */
    float getBitrate();

    /**
     * <pre>
     * How long before we consider a message abandoned and we can clear our
     * caches of any messages in flight Normally quite large to handle the worst case
     * message delivery time, 5 minutes.
     * Formerly called FLOOD_EXPIRE_TIME in the device code
     * </pre>
     *
     * <code>uint32 message_timeout_msec = 10;</code>
     * @return The messageTimeoutMsec.
     */
    int getMessageTimeoutMsec();

    /**
     * <pre>
     * The minimum app version that can talk to this device.
     * Phone/PC apps should compare this to their build number and if too low tell the user they must update their app
     * </pre>
     *
     * <code>uint32 min_app_version = 11;</code>
     * @return The minAppVersion.
     */
    int getMinAppVersion();

    /**
     * <pre>
     * 24 time windows of 1hr each with the airtime transmitted out of the device per hour.
     * </pre>
     *
     * <code>repeated uint32 air_period_tx = 12;</code>
     * @return A list containing the airPeriodTx.
     */
    java.util.List<java.lang.Integer> getAirPeriodTxList();
    /**
     * <pre>
     * 24 time windows of 1hr each with the airtime transmitted out of the device per hour.
     * </pre>
     *
     * <code>repeated uint32 air_period_tx = 12;</code>
     * @return The count of airPeriodTx.
     */
    int getAirPeriodTxCount();
    /**
     * <pre>
     * 24 time windows of 1hr each with the airtime transmitted out of the device per hour.
     * </pre>
     *
     * <code>repeated uint32 air_period_tx = 12;</code>
     * @param index The index of the element to return.
     * @return The airPeriodTx at the given index.
     */
    int getAirPeriodTx(int index);

    /**
     * <pre>
     * 24 time windows of 1hr each with the airtime of valid packets for your mesh.
     * </pre>
     *
     * <code>repeated uint32 air_period_rx = 13;</code>
     * @return A list containing the airPeriodRx.
     */
    java.util.List<java.lang.Integer> getAirPeriodRxList();
    /**
     * <pre>
     * 24 time windows of 1hr each with the airtime of valid packets for your mesh.
     * </pre>
     *
     * <code>repeated uint32 air_period_rx = 13;</code>
     * @return The count of airPeriodRx.
     */
    int getAirPeriodRxCount();
    /**
     * <pre>
     * 24 time windows of 1hr each with the airtime of valid packets for your mesh.
     * </pre>
     *
     * <code>repeated uint32 air_period_rx = 13;</code>
     * @param index The index of the element to return.
     * @return The airPeriodRx at the given index.
     */
    int getAirPeriodRx(int index);

    /**
     * <pre>
     * Is the device wifi capable?
     * </pre>
     *
     * <code>bool has_wifi = 14;</code>
     * @return The hasWifi.
     */
    boolean getHasWifi();

    /**
     * <pre>
     * Utilization for the current channel, including well formed TX, RX and malformed RX (aka noise).
     * </pre>
     *
     * <code>float channel_utilization = 15;</code>
     * @return The channelUtilization.
     */
    float getChannelUtilization();

    /**
     * <pre>
     * Percent of airtime for transmission used within the last hour.
     * </pre>
     *
     * <code>float air_util_tx = 16;</code>
     * @return The airUtilTx.
     */
    float getAirUtilTx();
  }
  /**
   * <pre>
   * Unique local debugging info for this node
   * Note: we don't include position or the user info, because that will come in the
   * Sent to the phone in response to WantNodes.
   * </pre>
   *
   * Protobuf type {@code MyNodeInfo}
   */
  public static final class MyNodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MyNodeInfo)
      MyNodeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MyNodeInfo.newBuilder() to construct.
    private MyNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MyNodeInfo() {
      firmwareVersion_ = "";
      errorCode_ = 0;
      airPeriodTx_ = emptyIntList();
      airPeriodRx_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MyNodeInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_MyNodeInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_MyNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.MyNodeInfo.class, com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder.class);
    }

    public static final int MY_NODE_NUM_FIELD_NUMBER = 1;
    private int myNodeNum_ = 0;
    /**
     * <pre>
     * Tells the phone what our node number is, default starting value is
     * lowbyte of macaddr, but it will be fixed if that is already in use
     * </pre>
     *
     * <code>uint32 my_node_num = 1;</code>
     * @return The myNodeNum.
     */
    @java.lang.Override
    public int getMyNodeNum() {
      return myNodeNum_;
    }

    public static final int HAS_GPS_FIELD_NUMBER = 2;
    private boolean hasGps_ = false;
    /**
     * <pre>
     * Note: This flag merely means we detected a hardware GPS in our node.
     * Not the same as UserPreferences.location_sharing
     * </pre>
     *
     * <code>bool has_gps = 2;</code>
     * @return The hasGps.
     */
    @java.lang.Override
    public boolean getHasGps() {
      return hasGps_;
    }

    public static final int MAX_CHANNELS_FIELD_NUMBER = 3;
    private int maxChannels_ = 0;
    /**
     * <pre>
     * The maximum number of 'software' channels that can be set on this node.
     * </pre>
     *
     * <code>uint32 max_channels = 3;</code>
     * @return The maxChannels.
     */
    @java.lang.Override
    public int getMaxChannels() {
      return maxChannels_;
    }

    public static final int FIRMWARE_VERSION_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object firmwareVersion_ = "";
    /**
     * <pre>
     * 0.0.5 etc...
     * </pre>
     *
     * <code>string firmware_version = 4;</code>
     * @return The firmwareVersion.
     */
    @java.lang.Override
    public java.lang.String getFirmwareVersion() {
      java.lang.Object ref = firmwareVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        firmwareVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 0.0.5 etc...
     * </pre>
     *
     * <code>string firmware_version = 4;</code>
     * @return The bytes for firmwareVersion.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFirmwareVersionBytes() {
      java.lang.Object ref = firmwareVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        firmwareVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ERROR_CODE_FIELD_NUMBER = 5;
    private int errorCode_ = 0;
    /**
     * <pre>
     * An error message we'd like to report back to the mothership through analytics.
     * It indicates a serious bug occurred on the device, the device coped with it,
     * but we still want to tell the devs about the bug.
     * This field will be cleared after the phone reads MyNodeInfo
     * (i.e. it will only be reported once)
     * a numeric error code to go with error message, zero means no error
     * </pre>
     *
     * <code>.CriticalErrorCode error_code = 5;</code>
     * @return The enum numeric value on the wire for errorCode.
     */
    @java.lang.Override public int getErrorCodeValue() {
      return errorCode_;
    }
    /**
     * <pre>
     * An error message we'd like to report back to the mothership through analytics.
     * It indicates a serious bug occurred on the device, the device coped with it,
     * but we still want to tell the devs about the bug.
     * This field will be cleared after the phone reads MyNodeInfo
     * (i.e. it will only be reported once)
     * a numeric error code to go with error message, zero means no error
     * </pre>
     *
     * <code>.CriticalErrorCode error_code = 5;</code>
     * @return The errorCode.
     */
    @java.lang.Override public com.geeksville.mesh.MeshProtos.CriticalErrorCode getErrorCode() {
      com.geeksville.mesh.MeshProtos.CriticalErrorCode result = com.geeksville.mesh.MeshProtos.CriticalErrorCode.forNumber(errorCode_);
      return result == null ? com.geeksville.mesh.MeshProtos.CriticalErrorCode.UNRECOGNIZED : result;
    }

    public static final int ERROR_ADDRESS_FIELD_NUMBER = 6;
    private int errorAddress_ = 0;
    /**
     * <pre>
     * A numeric error address (nonzero if available)
     * </pre>
     *
     * <code>uint32 error_address = 6;</code>
     * @return The errorAddress.
     */
    @java.lang.Override
    public int getErrorAddress() {
      return errorAddress_;
    }

    public static final int ERROR_COUNT_FIELD_NUMBER = 7;
    private int errorCount_ = 0;
    /**
     * <pre>
     * The total number of errors this node has ever encountered
     * (well - since the last time we discarded preferences)
     * </pre>
     *
     * <code>uint32 error_count = 7;</code>
     * @return The errorCount.
     */
    @java.lang.Override
    public int getErrorCount() {
      return errorCount_;
    }

    public static final int REBOOT_COUNT_FIELD_NUMBER = 8;
    private int rebootCount_ = 0;
    /**
     * <pre>
     * The total number of reboots this node has ever encountered
     * (well - since the last time we discarded preferences)
     * </pre>
     *
     * <code>uint32 reboot_count = 8;</code>
     * @return The rebootCount.
     */
    @java.lang.Override
    public int getRebootCount() {
      return rebootCount_;
    }

    public static final int BITRATE_FIELD_NUMBER = 9;
    private float bitrate_ = 0F;
    /**
     * <pre>
     * Calculated bitrate of the current channel (in Bytes Per Second)
     * </pre>
     *
     * <code>float bitrate = 9;</code>
     * @return The bitrate.
     */
    @java.lang.Override
    public float getBitrate() {
      return bitrate_;
    }

    public static final int MESSAGE_TIMEOUT_MSEC_FIELD_NUMBER = 10;
    private int messageTimeoutMsec_ = 0;
    /**
     * <pre>
     * How long before we consider a message abandoned and we can clear our
     * caches of any messages in flight Normally quite large to handle the worst case
     * message delivery time, 5 minutes.
     * Formerly called FLOOD_EXPIRE_TIME in the device code
     * </pre>
     *
     * <code>uint32 message_timeout_msec = 10;</code>
     * @return The messageTimeoutMsec.
     */
    @java.lang.Override
    public int getMessageTimeoutMsec() {
      return messageTimeoutMsec_;
    }

    public static final int MIN_APP_VERSION_FIELD_NUMBER = 11;
    private int minAppVersion_ = 0;
    /**
     * <pre>
     * The minimum app version that can talk to this device.
     * Phone/PC apps should compare this to their build number and if too low tell the user they must update their app
     * </pre>
     *
     * <code>uint32 min_app_version = 11;</code>
     * @return The minAppVersion.
     */
    @java.lang.Override
    public int getMinAppVersion() {
      return minAppVersion_;
    }

    public static final int AIR_PERIOD_TX_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList airPeriodTx_;
    /**
     * <pre>
     * 24 time windows of 1hr each with the airtime transmitted out of the device per hour.
     * </pre>
     *
     * <code>repeated uint32 air_period_tx = 12;</code>
     * @return A list containing the airPeriodTx.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getAirPeriodTxList() {
      return airPeriodTx_;
    }
    /**
     * <pre>
     * 24 time windows of 1hr each with the airtime transmitted out of the device per hour.
     * </pre>
     *
     * <code>repeated uint32 air_period_tx = 12;</code>
     * @return The count of airPeriodTx.
     */
    public int getAirPeriodTxCount() {
      return airPeriodTx_.size();
    }
    /**
     * <pre>
     * 24 time windows of 1hr each with the airtime transmitted out of the device per hour.
     * </pre>
     *
     * <code>repeated uint32 air_period_tx = 12;</code>
     * @param index The index of the element to return.
     * @return The airPeriodTx at the given index.
     */
    public int getAirPeriodTx(int index) {
      return airPeriodTx_.getInt(index);
    }
    private int airPeriodTxMemoizedSerializedSize = -1;

    public static final int AIR_PERIOD_RX_FIELD_NUMBER = 13;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList airPeriodRx_;
    /**
     * <pre>
     * 24 time windows of 1hr each with the airtime of valid packets for your mesh.
     * </pre>
     *
     * <code>repeated uint32 air_period_rx = 13;</code>
     * @return A list containing the airPeriodRx.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getAirPeriodRxList() {
      return airPeriodRx_;
    }
    /**
     * <pre>
     * 24 time windows of 1hr each with the airtime of valid packets for your mesh.
     * </pre>
     *
     * <code>repeated uint32 air_period_rx = 13;</code>
     * @return The count of airPeriodRx.
     */
    public int getAirPeriodRxCount() {
      return airPeriodRx_.size();
    }
    /**
     * <pre>
     * 24 time windows of 1hr each with the airtime of valid packets for your mesh.
     * </pre>
     *
     * <code>repeated uint32 air_period_rx = 13;</code>
     * @param index The index of the element to return.
     * @return The airPeriodRx at the given index.
     */
    public int getAirPeriodRx(int index) {
      return airPeriodRx_.getInt(index);
    }
    private int airPeriodRxMemoizedSerializedSize = -1;

    public static final int HAS_WIFI_FIELD_NUMBER = 14;
    private boolean hasWifi_ = false;
    /**
     * <pre>
     * Is the device wifi capable?
     * </pre>
     *
     * <code>bool has_wifi = 14;</code>
     * @return The hasWifi.
     */
    @java.lang.Override
    public boolean getHasWifi() {
      return hasWifi_;
    }

    public static final int CHANNEL_UTILIZATION_FIELD_NUMBER = 15;
    private float channelUtilization_ = 0F;
    /**
     * <pre>
     * Utilization for the current channel, including well formed TX, RX and malformed RX (aka noise).
     * </pre>
     *
     * <code>float channel_utilization = 15;</code>
     * @return The channelUtilization.
     */
    @java.lang.Override
    public float getChannelUtilization() {
      return channelUtilization_;
    }

    public static final int AIR_UTIL_TX_FIELD_NUMBER = 16;
    private float airUtilTx_ = 0F;
    /**
     * <pre>
     * Percent of airtime for transmission used within the last hour.
     * </pre>
     *
     * <code>float air_util_tx = 16;</code>
     * @return The airUtilTx.
     */
    @java.lang.Override
    public float getAirUtilTx() {
      return airUtilTx_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (myNodeNum_ != 0) {
        output.writeUInt32(1, myNodeNum_);
      }
      if (hasGps_ != false) {
        output.writeBool(2, hasGps_);
      }
      if (maxChannels_ != 0) {
        output.writeUInt32(3, maxChannels_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(firmwareVersion_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, firmwareVersion_);
      }
      if (errorCode_ != com.geeksville.mesh.MeshProtos.CriticalErrorCode.NONE.getNumber()) {
        output.writeEnum(5, errorCode_);
      }
      if (errorAddress_ != 0) {
        output.writeUInt32(6, errorAddress_);
      }
      if (errorCount_ != 0) {
        output.writeUInt32(7, errorCount_);
      }
      if (rebootCount_ != 0) {
        output.writeUInt32(8, rebootCount_);
      }
      if (java.lang.Float.floatToRawIntBits(bitrate_) != 0) {
        output.writeFloat(9, bitrate_);
      }
      if (messageTimeoutMsec_ != 0) {
        output.writeUInt32(10, messageTimeoutMsec_);
      }
      if (minAppVersion_ != 0) {
        output.writeUInt32(11, minAppVersion_);
      }
      if (getAirPeriodTxList().size() > 0) {
        output.writeUInt32NoTag(98);
        output.writeUInt32NoTag(airPeriodTxMemoizedSerializedSize);
      }
      for (int i = 0; i < airPeriodTx_.size(); i++) {
        output.writeUInt32NoTag(airPeriodTx_.getInt(i));
      }
      if (getAirPeriodRxList().size() > 0) {
        output.writeUInt32NoTag(106);
        output.writeUInt32NoTag(airPeriodRxMemoizedSerializedSize);
      }
      for (int i = 0; i < airPeriodRx_.size(); i++) {
        output.writeUInt32NoTag(airPeriodRx_.getInt(i));
      }
      if (hasWifi_ != false) {
        output.writeBool(14, hasWifi_);
      }
      if (java.lang.Float.floatToRawIntBits(channelUtilization_) != 0) {
        output.writeFloat(15, channelUtilization_);
      }
      if (java.lang.Float.floatToRawIntBits(airUtilTx_) != 0) {
        output.writeFloat(16, airUtilTx_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (myNodeNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, myNodeNum_);
      }
      if (hasGps_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, hasGps_);
      }
      if (maxChannels_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, maxChannels_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(firmwareVersion_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, firmwareVersion_);
      }
      if (errorCode_ != com.geeksville.mesh.MeshProtos.CriticalErrorCode.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, errorCode_);
      }
      if (errorAddress_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, errorAddress_);
      }
      if (errorCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, errorCount_);
      }
      if (rebootCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, rebootCount_);
      }
      if (java.lang.Float.floatToRawIntBits(bitrate_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, bitrate_);
      }
      if (messageTimeoutMsec_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, messageTimeoutMsec_);
      }
      if (minAppVersion_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, minAppVersion_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < airPeriodTx_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(airPeriodTx_.getInt(i));
        }
        size += dataSize;
        if (!getAirPeriodTxList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        airPeriodTxMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < airPeriodRx_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(airPeriodRx_.getInt(i));
        }
        size += dataSize;
        if (!getAirPeriodRxList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        airPeriodRxMemoizedSerializedSize = dataSize;
      }
      if (hasWifi_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, hasWifi_);
      }
      if (java.lang.Float.floatToRawIntBits(channelUtilization_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, channelUtilization_);
      }
      if (java.lang.Float.floatToRawIntBits(airUtilTx_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, airUtilTx_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.MyNodeInfo)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.MyNodeInfo other = (com.geeksville.mesh.MeshProtos.MyNodeInfo) obj;

      if (getMyNodeNum()
          != other.getMyNodeNum()) return false;
      if (getHasGps()
          != other.getHasGps()) return false;
      if (getMaxChannels()
          != other.getMaxChannels()) return false;
      if (!getFirmwareVersion()
          .equals(other.getFirmwareVersion())) return false;
      if (errorCode_ != other.errorCode_) return false;
      if (getErrorAddress()
          != other.getErrorAddress()) return false;
      if (getErrorCount()
          != other.getErrorCount()) return false;
      if (getRebootCount()
          != other.getRebootCount()) return false;
      if (java.lang.Float.floatToIntBits(getBitrate())
          != java.lang.Float.floatToIntBits(
              other.getBitrate())) return false;
      if (getMessageTimeoutMsec()
          != other.getMessageTimeoutMsec()) return false;
      if (getMinAppVersion()
          != other.getMinAppVersion()) return false;
      if (!getAirPeriodTxList()
          .equals(other.getAirPeriodTxList())) return false;
      if (!getAirPeriodRxList()
          .equals(other.getAirPeriodRxList())) return false;
      if (getHasWifi()
          != other.getHasWifi()) return false;
      if (java.lang.Float.floatToIntBits(getChannelUtilization())
          != java.lang.Float.floatToIntBits(
              other.getChannelUtilization())) return false;
      if (java.lang.Float.floatToIntBits(getAirUtilTx())
          != java.lang.Float.floatToIntBits(
              other.getAirUtilTx())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MY_NODE_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getMyNodeNum();
      hash = (37 * hash) + HAS_GPS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHasGps());
      hash = (37 * hash) + MAX_CHANNELS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxChannels();
      hash = (37 * hash) + FIRMWARE_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getFirmwareVersion().hashCode();
      hash = (37 * hash) + ERROR_CODE_FIELD_NUMBER;
      hash = (53 * hash) + errorCode_;
      hash = (37 * hash) + ERROR_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getErrorAddress();
      hash = (37 * hash) + ERROR_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getErrorCount();
      hash = (37 * hash) + REBOOT_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getRebootCount();
      hash = (37 * hash) + BITRATE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getBitrate());
      hash = (37 * hash) + MESSAGE_TIMEOUT_MSEC_FIELD_NUMBER;
      hash = (53 * hash) + getMessageTimeoutMsec();
      hash = (37 * hash) + MIN_APP_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getMinAppVersion();
      if (getAirPeriodTxCount() > 0) {
        hash = (37 * hash) + AIR_PERIOD_TX_FIELD_NUMBER;
        hash = (53 * hash) + getAirPeriodTxList().hashCode();
      }
      if (getAirPeriodRxCount() > 0) {
        hash = (37 * hash) + AIR_PERIOD_RX_FIELD_NUMBER;
        hash = (53 * hash) + getAirPeriodRxList().hashCode();
      }
      hash = (37 * hash) + HAS_WIFI_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHasWifi());
      hash = (37 * hash) + CHANNEL_UTILIZATION_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getChannelUtilization());
      hash = (37 * hash) + AIR_UTIL_TX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAirUtilTx());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.MyNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.MyNodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Unique local debugging info for this node
     * Note: we don't include position or the user info, because that will come in the
     * Sent to the phone in response to WantNodes.
     * </pre>
     *
     * Protobuf type {@code MyNodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MyNodeInfo)
        com.geeksville.mesh.MeshProtos.MyNodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_MyNodeInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_MyNodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.MyNodeInfo.class, com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.MyNodeInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        myNodeNum_ = 0;
        hasGps_ = false;
        maxChannels_ = 0;
        firmwareVersion_ = "";
        errorCode_ = 0;
        errorAddress_ = 0;
        errorCount_ = 0;
        rebootCount_ = 0;
        bitrate_ = 0F;
        messageTimeoutMsec_ = 0;
        minAppVersion_ = 0;
        airPeriodTx_ = emptyIntList();
        airPeriodRx_ = emptyIntList();
        hasWifi_ = false;
        channelUtilization_ = 0F;
        airUtilTx_ = 0F;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_MyNodeInfo_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MyNodeInfo getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MyNodeInfo build() {
        com.geeksville.mesh.MeshProtos.MyNodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MyNodeInfo buildPartial() {
        com.geeksville.mesh.MeshProtos.MyNodeInfo result = new com.geeksville.mesh.MeshProtos.MyNodeInfo(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.geeksville.mesh.MeshProtos.MyNodeInfo result) {
        if (((bitField0_ & 0x00000800) != 0)) {
          airPeriodTx_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.airPeriodTx_ = airPeriodTx_;
        if (((bitField0_ & 0x00001000) != 0)) {
          airPeriodRx_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.airPeriodRx_ = airPeriodRx_;
      }

      private void buildPartial0(com.geeksville.mesh.MeshProtos.MyNodeInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.myNodeNum_ = myNodeNum_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.hasGps_ = hasGps_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.maxChannels_ = maxChannels_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.firmwareVersion_ = firmwareVersion_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.errorCode_ = errorCode_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.errorAddress_ = errorAddress_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.errorCount_ = errorCount_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.rebootCount_ = rebootCount_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.bitrate_ = bitrate_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.messageTimeoutMsec_ = messageTimeoutMsec_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.minAppVersion_ = minAppVersion_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.hasWifi_ = hasWifi_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.channelUtilization_ = channelUtilization_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.airUtilTx_ = airUtilTx_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.MyNodeInfo) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.MyNodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.MyNodeInfo other) {
        if (other == com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance()) return this;
        if (other.getMyNodeNum() != 0) {
          setMyNodeNum(other.getMyNodeNum());
        }
        if (other.getHasGps() != false) {
          setHasGps(other.getHasGps());
        }
        if (other.getMaxChannels() != 0) {
          setMaxChannels(other.getMaxChannels());
        }
        if (!other.getFirmwareVersion().isEmpty()) {
          firmwareVersion_ = other.firmwareVersion_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (other.errorCode_ != 0) {
          setErrorCodeValue(other.getErrorCodeValue());
        }
        if (other.getErrorAddress() != 0) {
          setErrorAddress(other.getErrorAddress());
        }
        if (other.getErrorCount() != 0) {
          setErrorCount(other.getErrorCount());
        }
        if (other.getRebootCount() != 0) {
          setRebootCount(other.getRebootCount());
        }
        if (other.getBitrate() != 0F) {
          setBitrate(other.getBitrate());
        }
        if (other.getMessageTimeoutMsec() != 0) {
          setMessageTimeoutMsec(other.getMessageTimeoutMsec());
        }
        if (other.getMinAppVersion() != 0) {
          setMinAppVersion(other.getMinAppVersion());
        }
        if (!other.airPeriodTx_.isEmpty()) {
          if (airPeriodTx_.isEmpty()) {
            airPeriodTx_ = other.airPeriodTx_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureAirPeriodTxIsMutable();
            airPeriodTx_.addAll(other.airPeriodTx_);
          }
          onChanged();
        }
        if (!other.airPeriodRx_.isEmpty()) {
          if (airPeriodRx_.isEmpty()) {
            airPeriodRx_ = other.airPeriodRx_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureAirPeriodRxIsMutable();
            airPeriodRx_.addAll(other.airPeriodRx_);
          }
          onChanged();
        }
        if (other.getHasWifi() != false) {
          setHasWifi(other.getHasWifi());
        }
        if (other.getChannelUtilization() != 0F) {
          setChannelUtilization(other.getChannelUtilization());
        }
        if (other.getAirUtilTx() != 0F) {
          setAirUtilTx(other.getAirUtilTx());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                myNodeNum_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                hasGps_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                maxChannels_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                firmwareVersion_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 40: {
                errorCode_ = input.readEnum();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                errorAddress_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                errorCount_ = input.readUInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                rebootCount_ = input.readUInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 77: {
                bitrate_ = input.readFloat();
                bitField0_ |= 0x00000100;
                break;
              } // case 77
              case 80: {
                messageTimeoutMsec_ = input.readUInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                minAppVersion_ = input.readUInt32();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                int v = input.readUInt32();
                ensureAirPeriodTxIsMutable();
                airPeriodTx_.addInt(v);
                break;
              } // case 96
              case 98: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureAirPeriodTxIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  airPeriodTx_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 98
              case 104: {
                int v = input.readUInt32();
                ensureAirPeriodRxIsMutable();
                airPeriodRx_.addInt(v);
                break;
              } // case 104
              case 106: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureAirPeriodRxIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  airPeriodRx_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 106
              case 112: {
                hasWifi_ = input.readBool();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 125: {
                channelUtilization_ = input.readFloat();
                bitField0_ |= 0x00004000;
                break;
              } // case 125
              case 133: {
                airUtilTx_ = input.readFloat();
                bitField0_ |= 0x00008000;
                break;
              } // case 133
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int myNodeNum_ ;
      /**
       * <pre>
       * Tells the phone what our node number is, default starting value is
       * lowbyte of macaddr, but it will be fixed if that is already in use
       * </pre>
       *
       * <code>uint32 my_node_num = 1;</code>
       * @return The myNodeNum.
       */
      @java.lang.Override
      public int getMyNodeNum() {
        return myNodeNum_;
      }
      /**
       * <pre>
       * Tells the phone what our node number is, default starting value is
       * lowbyte of macaddr, but it will be fixed if that is already in use
       * </pre>
       *
       * <code>uint32 my_node_num = 1;</code>
       * @param value The myNodeNum to set.
       * @return This builder for chaining.
       */
      public Builder setMyNodeNum(int value) {
        
        myNodeNum_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tells the phone what our node number is, default starting value is
       * lowbyte of macaddr, but it will be fixed if that is already in use
       * </pre>
       *
       * <code>uint32 my_node_num = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMyNodeNum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        myNodeNum_ = 0;
        onChanged();
        return this;
      }

      private boolean hasGps_ ;
      /**
       * <pre>
       * Note: This flag merely means we detected a hardware GPS in our node.
       * Not the same as UserPreferences.location_sharing
       * </pre>
       *
       * <code>bool has_gps = 2;</code>
       * @return The hasGps.
       */
      @java.lang.Override
      public boolean getHasGps() {
        return hasGps_;
      }
      /**
       * <pre>
       * Note: This flag merely means we detected a hardware GPS in our node.
       * Not the same as UserPreferences.location_sharing
       * </pre>
       *
       * <code>bool has_gps = 2;</code>
       * @param value The hasGps to set.
       * @return This builder for chaining.
       */
      public Builder setHasGps(boolean value) {
        
        hasGps_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Note: This flag merely means we detected a hardware GPS in our node.
       * Not the same as UserPreferences.location_sharing
       * </pre>
       *
       * <code>bool has_gps = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasGps() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hasGps_ = false;
        onChanged();
        return this;
      }

      private int maxChannels_ ;
      /**
       * <pre>
       * The maximum number of 'software' channels that can be set on this node.
       * </pre>
       *
       * <code>uint32 max_channels = 3;</code>
       * @return The maxChannels.
       */
      @java.lang.Override
      public int getMaxChannels() {
        return maxChannels_;
      }
      /**
       * <pre>
       * The maximum number of 'software' channels that can be set on this node.
       * </pre>
       *
       * <code>uint32 max_channels = 3;</code>
       * @param value The maxChannels to set.
       * @return This builder for chaining.
       */
      public Builder setMaxChannels(int value) {
        
        maxChannels_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The maximum number of 'software' channels that can be set on this node.
       * </pre>
       *
       * <code>uint32 max_channels = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxChannels() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxChannels_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object firmwareVersion_ = "";
      /**
       * <pre>
       * 0.0.5 etc...
       * </pre>
       *
       * <code>string firmware_version = 4;</code>
       * @return The firmwareVersion.
       */
      public java.lang.String getFirmwareVersion() {
        java.lang.Object ref = firmwareVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          firmwareVersion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 0.0.5 etc...
       * </pre>
       *
       * <code>string firmware_version = 4;</code>
       * @return The bytes for firmwareVersion.
       */
      public com.google.protobuf.ByteString
          getFirmwareVersionBytes() {
        java.lang.Object ref = firmwareVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          firmwareVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 0.0.5 etc...
       * </pre>
       *
       * <code>string firmware_version = 4;</code>
       * @param value The firmwareVersion to set.
       * @return This builder for chaining.
       */
      public Builder setFirmwareVersion(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        firmwareVersion_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0.0.5 etc...
       * </pre>
       *
       * <code>string firmware_version = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirmwareVersion() {
        firmwareVersion_ = getDefaultInstance().getFirmwareVersion();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0.0.5 etc...
       * </pre>
       *
       * <code>string firmware_version = 4;</code>
       * @param value The bytes for firmwareVersion to set.
       * @return This builder for chaining.
       */
      public Builder setFirmwareVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        firmwareVersion_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private int errorCode_ = 0;
      /**
       * <pre>
       * An error message we'd like to report back to the mothership through analytics.
       * It indicates a serious bug occurred on the device, the device coped with it,
       * but we still want to tell the devs about the bug.
       * This field will be cleared after the phone reads MyNodeInfo
       * (i.e. it will only be reported once)
       * a numeric error code to go with error message, zero means no error
       * </pre>
       *
       * <code>.CriticalErrorCode error_code = 5;</code>
       * @return The enum numeric value on the wire for errorCode.
       */
      @java.lang.Override public int getErrorCodeValue() {
        return errorCode_;
      }
      /**
       * <pre>
       * An error message we'd like to report back to the mothership through analytics.
       * It indicates a serious bug occurred on the device, the device coped with it,
       * but we still want to tell the devs about the bug.
       * This field will be cleared after the phone reads MyNodeInfo
       * (i.e. it will only be reported once)
       * a numeric error code to go with error message, zero means no error
       * </pre>
       *
       * <code>.CriticalErrorCode error_code = 5;</code>
       * @param value The enum numeric value on the wire for errorCode to set.
       * @return This builder for chaining.
       */
      public Builder setErrorCodeValue(int value) {
        errorCode_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An error message we'd like to report back to the mothership through analytics.
       * It indicates a serious bug occurred on the device, the device coped with it,
       * but we still want to tell the devs about the bug.
       * This field will be cleared after the phone reads MyNodeInfo
       * (i.e. it will only be reported once)
       * a numeric error code to go with error message, zero means no error
       * </pre>
       *
       * <code>.CriticalErrorCode error_code = 5;</code>
       * @return The errorCode.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.CriticalErrorCode getErrorCode() {
        com.geeksville.mesh.MeshProtos.CriticalErrorCode result = com.geeksville.mesh.MeshProtos.CriticalErrorCode.forNumber(errorCode_);
        return result == null ? com.geeksville.mesh.MeshProtos.CriticalErrorCode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * An error message we'd like to report back to the mothership through analytics.
       * It indicates a serious bug occurred on the device, the device coped with it,
       * but we still want to tell the devs about the bug.
       * This field will be cleared after the phone reads MyNodeInfo
       * (i.e. it will only be reported once)
       * a numeric error code to go with error message, zero means no error
       * </pre>
       *
       * <code>.CriticalErrorCode error_code = 5;</code>
       * @param value The errorCode to set.
       * @return This builder for chaining.
       */
      public Builder setErrorCode(com.geeksville.mesh.MeshProtos.CriticalErrorCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        errorCode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An error message we'd like to report back to the mothership through analytics.
       * It indicates a serious bug occurred on the device, the device coped with it,
       * but we still want to tell the devs about the bug.
       * This field will be cleared after the phone reads MyNodeInfo
       * (i.e. it will only be reported once)
       * a numeric error code to go with error message, zero means no error
       * </pre>
       *
       * <code>.CriticalErrorCode error_code = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorCode() {
        bitField0_ = (bitField0_ & ~0x00000010);
        errorCode_ = 0;
        onChanged();
        return this;
      }

      private int errorAddress_ ;
      /**
       * <pre>
       * A numeric error address (nonzero if available)
       * </pre>
       *
       * <code>uint32 error_address = 6;</code>
       * @return The errorAddress.
       */
      @java.lang.Override
      public int getErrorAddress() {
        return errorAddress_;
      }
      /**
       * <pre>
       * A numeric error address (nonzero if available)
       * </pre>
       *
       * <code>uint32 error_address = 6;</code>
       * @param value The errorAddress to set.
       * @return This builder for chaining.
       */
      public Builder setErrorAddress(int value) {
        
        errorAddress_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A numeric error address (nonzero if available)
       * </pre>
       *
       * <code>uint32 error_address = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorAddress() {
        bitField0_ = (bitField0_ & ~0x00000020);
        errorAddress_ = 0;
        onChanged();
        return this;
      }

      private int errorCount_ ;
      /**
       * <pre>
       * The total number of errors this node has ever encountered
       * (well - since the last time we discarded preferences)
       * </pre>
       *
       * <code>uint32 error_count = 7;</code>
       * @return The errorCount.
       */
      @java.lang.Override
      public int getErrorCount() {
        return errorCount_;
      }
      /**
       * <pre>
       * The total number of errors this node has ever encountered
       * (well - since the last time we discarded preferences)
       * </pre>
       *
       * <code>uint32 error_count = 7;</code>
       * @param value The errorCount to set.
       * @return This builder for chaining.
       */
      public Builder setErrorCount(int value) {
        
        errorCount_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The total number of errors this node has ever encountered
       * (well - since the last time we discarded preferences)
       * </pre>
       *
       * <code>uint32 error_count = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        errorCount_ = 0;
        onChanged();
        return this;
      }

      private int rebootCount_ ;
      /**
       * <pre>
       * The total number of reboots this node has ever encountered
       * (well - since the last time we discarded preferences)
       * </pre>
       *
       * <code>uint32 reboot_count = 8;</code>
       * @return The rebootCount.
       */
      @java.lang.Override
      public int getRebootCount() {
        return rebootCount_;
      }
      /**
       * <pre>
       * The total number of reboots this node has ever encountered
       * (well - since the last time we discarded preferences)
       * </pre>
       *
       * <code>uint32 reboot_count = 8;</code>
       * @param value The rebootCount to set.
       * @return This builder for chaining.
       */
      public Builder setRebootCount(int value) {
        
        rebootCount_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The total number of reboots this node has ever encountered
       * (well - since the last time we discarded preferences)
       * </pre>
       *
       * <code>uint32 reboot_count = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearRebootCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rebootCount_ = 0;
        onChanged();
        return this;
      }

      private float bitrate_ ;
      /**
       * <pre>
       * Calculated bitrate of the current channel (in Bytes Per Second)
       * </pre>
       *
       * <code>float bitrate = 9;</code>
       * @return The bitrate.
       */
      @java.lang.Override
      public float getBitrate() {
        return bitrate_;
      }
      /**
       * <pre>
       * Calculated bitrate of the current channel (in Bytes Per Second)
       * </pre>
       *
       * <code>float bitrate = 9;</code>
       * @param value The bitrate to set.
       * @return This builder for chaining.
       */
      public Builder setBitrate(float value) {
        
        bitrate_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Calculated bitrate of the current channel (in Bytes Per Second)
       * </pre>
       *
       * <code>float bitrate = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearBitrate() {
        bitField0_ = (bitField0_ & ~0x00000100);
        bitrate_ = 0F;
        onChanged();
        return this;
      }

      private int messageTimeoutMsec_ ;
      /**
       * <pre>
       * How long before we consider a message abandoned and we can clear our
       * caches of any messages in flight Normally quite large to handle the worst case
       * message delivery time, 5 minutes.
       * Formerly called FLOOD_EXPIRE_TIME in the device code
       * </pre>
       *
       * <code>uint32 message_timeout_msec = 10;</code>
       * @return The messageTimeoutMsec.
       */
      @java.lang.Override
      public int getMessageTimeoutMsec() {
        return messageTimeoutMsec_;
      }
      /**
       * <pre>
       * How long before we consider a message abandoned and we can clear our
       * caches of any messages in flight Normally quite large to handle the worst case
       * message delivery time, 5 minutes.
       * Formerly called FLOOD_EXPIRE_TIME in the device code
       * </pre>
       *
       * <code>uint32 message_timeout_msec = 10;</code>
       * @param value The messageTimeoutMsec to set.
       * @return This builder for chaining.
       */
      public Builder setMessageTimeoutMsec(int value) {
        
        messageTimeoutMsec_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * How long before we consider a message abandoned and we can clear our
       * caches of any messages in flight Normally quite large to handle the worst case
       * message delivery time, 5 minutes.
       * Formerly called FLOOD_EXPIRE_TIME in the device code
       * </pre>
       *
       * <code>uint32 message_timeout_msec = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessageTimeoutMsec() {
        bitField0_ = (bitField0_ & ~0x00000200);
        messageTimeoutMsec_ = 0;
        onChanged();
        return this;
      }

      private int minAppVersion_ ;
      /**
       * <pre>
       * The minimum app version that can talk to this device.
       * Phone/PC apps should compare this to their build number and if too low tell the user they must update their app
       * </pre>
       *
       * <code>uint32 min_app_version = 11;</code>
       * @return The minAppVersion.
       */
      @java.lang.Override
      public int getMinAppVersion() {
        return minAppVersion_;
      }
      /**
       * <pre>
       * The minimum app version that can talk to this device.
       * Phone/PC apps should compare this to their build number and if too low tell the user they must update their app
       * </pre>
       *
       * <code>uint32 min_app_version = 11;</code>
       * @param value The minAppVersion to set.
       * @return This builder for chaining.
       */
      public Builder setMinAppVersion(int value) {
        
        minAppVersion_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The minimum app version that can talk to this device.
       * Phone/PC apps should compare this to their build number and if too low tell the user they must update their app
       * </pre>
       *
       * <code>uint32 min_app_version = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinAppVersion() {
        bitField0_ = (bitField0_ & ~0x00000400);
        minAppVersion_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList airPeriodTx_ = emptyIntList();
      private void ensureAirPeriodTxIsMutable() {
        if (!((bitField0_ & 0x00000800) != 0)) {
          airPeriodTx_ = mutableCopy(airPeriodTx_);
          bitField0_ |= 0x00000800;
        }
      }
      /**
       * <pre>
       * 24 time windows of 1hr each with the airtime transmitted out of the device per hour.
       * </pre>
       *
       * <code>repeated uint32 air_period_tx = 12;</code>
       * @return A list containing the airPeriodTx.
       */
      public java.util.List<java.lang.Integer>
          getAirPeriodTxList() {
        return ((bitField0_ & 0x00000800) != 0) ?
                 java.util.Collections.unmodifiableList(airPeriodTx_) : airPeriodTx_;
      }
      /**
       * <pre>
       * 24 time windows of 1hr each with the airtime transmitted out of the device per hour.
       * </pre>
       *
       * <code>repeated uint32 air_period_tx = 12;</code>
       * @return The count of airPeriodTx.
       */
      public int getAirPeriodTxCount() {
        return airPeriodTx_.size();
      }
      /**
       * <pre>
       * 24 time windows of 1hr each with the airtime transmitted out of the device per hour.
       * </pre>
       *
       * <code>repeated uint32 air_period_tx = 12;</code>
       * @param index The index of the element to return.
       * @return The airPeriodTx at the given index.
       */
      public int getAirPeriodTx(int index) {
        return airPeriodTx_.getInt(index);
      }
      /**
       * <pre>
       * 24 time windows of 1hr each with the airtime transmitted out of the device per hour.
       * </pre>
       *
       * <code>repeated uint32 air_period_tx = 12;</code>
       * @param index The index to set the value at.
       * @param value The airPeriodTx to set.
       * @return This builder for chaining.
       */
      public Builder setAirPeriodTx(
          int index, int value) {
        
        ensureAirPeriodTxIsMutable();
        airPeriodTx_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 24 time windows of 1hr each with the airtime transmitted out of the device per hour.
       * </pre>
       *
       * <code>repeated uint32 air_period_tx = 12;</code>
       * @param value The airPeriodTx to add.
       * @return This builder for chaining.
       */
      public Builder addAirPeriodTx(int value) {
        
        ensureAirPeriodTxIsMutable();
        airPeriodTx_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 24 time windows of 1hr each with the airtime transmitted out of the device per hour.
       * </pre>
       *
       * <code>repeated uint32 air_period_tx = 12;</code>
       * @param values The airPeriodTx to add.
       * @return This builder for chaining.
       */
      public Builder addAllAirPeriodTx(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAirPeriodTxIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, airPeriodTx_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 24 time windows of 1hr each with the airtime transmitted out of the device per hour.
       * </pre>
       *
       * <code>repeated uint32 air_period_tx = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearAirPeriodTx() {
        airPeriodTx_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList airPeriodRx_ = emptyIntList();
      private void ensureAirPeriodRxIsMutable() {
        if (!((bitField0_ & 0x00001000) != 0)) {
          airPeriodRx_ = mutableCopy(airPeriodRx_);
          bitField0_ |= 0x00001000;
        }
      }
      /**
       * <pre>
       * 24 time windows of 1hr each with the airtime of valid packets for your mesh.
       * </pre>
       *
       * <code>repeated uint32 air_period_rx = 13;</code>
       * @return A list containing the airPeriodRx.
       */
      public java.util.List<java.lang.Integer>
          getAirPeriodRxList() {
        return ((bitField0_ & 0x00001000) != 0) ?
                 java.util.Collections.unmodifiableList(airPeriodRx_) : airPeriodRx_;
      }
      /**
       * <pre>
       * 24 time windows of 1hr each with the airtime of valid packets for your mesh.
       * </pre>
       *
       * <code>repeated uint32 air_period_rx = 13;</code>
       * @return The count of airPeriodRx.
       */
      public int getAirPeriodRxCount() {
        return airPeriodRx_.size();
      }
      /**
       * <pre>
       * 24 time windows of 1hr each with the airtime of valid packets for your mesh.
       * </pre>
       *
       * <code>repeated uint32 air_period_rx = 13;</code>
       * @param index The index of the element to return.
       * @return The airPeriodRx at the given index.
       */
      public int getAirPeriodRx(int index) {
        return airPeriodRx_.getInt(index);
      }
      /**
       * <pre>
       * 24 time windows of 1hr each with the airtime of valid packets for your mesh.
       * </pre>
       *
       * <code>repeated uint32 air_period_rx = 13;</code>
       * @param index The index to set the value at.
       * @param value The airPeriodRx to set.
       * @return This builder for chaining.
       */
      public Builder setAirPeriodRx(
          int index, int value) {
        
        ensureAirPeriodRxIsMutable();
        airPeriodRx_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 24 time windows of 1hr each with the airtime of valid packets for your mesh.
       * </pre>
       *
       * <code>repeated uint32 air_period_rx = 13;</code>
       * @param value The airPeriodRx to add.
       * @return This builder for chaining.
       */
      public Builder addAirPeriodRx(int value) {
        
        ensureAirPeriodRxIsMutable();
        airPeriodRx_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 24 time windows of 1hr each with the airtime of valid packets for your mesh.
       * </pre>
       *
       * <code>repeated uint32 air_period_rx = 13;</code>
       * @param values The airPeriodRx to add.
       * @return This builder for chaining.
       */
      public Builder addAllAirPeriodRx(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAirPeriodRxIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, airPeriodRx_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 24 time windows of 1hr each with the airtime of valid packets for your mesh.
       * </pre>
       *
       * <code>repeated uint32 air_period_rx = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearAirPeriodRx() {
        airPeriodRx_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      private boolean hasWifi_ ;
      /**
       * <pre>
       * Is the device wifi capable?
       * </pre>
       *
       * <code>bool has_wifi = 14;</code>
       * @return The hasWifi.
       */
      @java.lang.Override
      public boolean getHasWifi() {
        return hasWifi_;
      }
      /**
       * <pre>
       * Is the device wifi capable?
       * </pre>
       *
       * <code>bool has_wifi = 14;</code>
       * @param value The hasWifi to set.
       * @return This builder for chaining.
       */
      public Builder setHasWifi(boolean value) {
        
        hasWifi_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Is the device wifi capable?
       * </pre>
       *
       * <code>bool has_wifi = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasWifi() {
        bitField0_ = (bitField0_ & ~0x00002000);
        hasWifi_ = false;
        onChanged();
        return this;
      }

      private float channelUtilization_ ;
      /**
       * <pre>
       * Utilization for the current channel, including well formed TX, RX and malformed RX (aka noise).
       * </pre>
       *
       * <code>float channel_utilization = 15;</code>
       * @return The channelUtilization.
       */
      @java.lang.Override
      public float getChannelUtilization() {
        return channelUtilization_;
      }
      /**
       * <pre>
       * Utilization for the current channel, including well formed TX, RX and malformed RX (aka noise).
       * </pre>
       *
       * <code>float channel_utilization = 15;</code>
       * @param value The channelUtilization to set.
       * @return This builder for chaining.
       */
      public Builder setChannelUtilization(float value) {
        
        channelUtilization_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Utilization for the current channel, including well formed TX, RX and malformed RX (aka noise).
       * </pre>
       *
       * <code>float channel_utilization = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelUtilization() {
        bitField0_ = (bitField0_ & ~0x00004000);
        channelUtilization_ = 0F;
        onChanged();
        return this;
      }

      private float airUtilTx_ ;
      /**
       * <pre>
       * Percent of airtime for transmission used within the last hour.
       * </pre>
       *
       * <code>float air_util_tx = 16;</code>
       * @return The airUtilTx.
       */
      @java.lang.Override
      public float getAirUtilTx() {
        return airUtilTx_;
      }
      /**
       * <pre>
       * Percent of airtime for transmission used within the last hour.
       * </pre>
       *
       * <code>float air_util_tx = 16;</code>
       * @param value The airUtilTx to set.
       * @return This builder for chaining.
       */
      public Builder setAirUtilTx(float value) {
        
        airUtilTx_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Percent of airtime for transmission used within the last hour.
       * </pre>
       *
       * <code>float air_util_tx = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearAirUtilTx() {
        bitField0_ = (bitField0_ & ~0x00008000);
        airUtilTx_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MyNodeInfo)
    }

    // @@protoc_insertion_point(class_scope:MyNodeInfo)
    private static final com.geeksville.mesh.MeshProtos.MyNodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.MyNodeInfo();
    }

    public static com.geeksville.mesh.MeshProtos.MyNodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MyNodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<MyNodeInfo>() {
      @java.lang.Override
      public MyNodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MyNodeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MyNodeInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MyNodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogRecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogRecord)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Log levels, chosen to match python logging conventions.
     * </pre>
     *
     * <code>string message = 1;</code>
     * @return The message.
     */
    java.lang.String getMessage();
    /**
     * <pre>
     * Log levels, chosen to match python logging conventions.
     * </pre>
     *
     * <code>string message = 1;</code>
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    /**
     * <pre>
     * Seconds since 1970 - or 0 for unknown/unset
     * </pre>
     *
     * <code>fixed32 time = 2;</code>
     * @return The time.
     */
    int getTime();

    /**
     * <pre>
     * Usually based on thread name - if known
     * </pre>
     *
     * <code>string source = 3;</code>
     * @return The source.
     */
    java.lang.String getSource();
    /**
     * <pre>
     * Usually based on thread name - if known
     * </pre>
     *
     * <code>string source = 3;</code>
     * @return The bytes for source.
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <pre>
     * Not yet set
     * </pre>
     *
     * <code>.LogRecord.Level level = 4;</code>
     * @return The enum numeric value on the wire for level.
     */
    int getLevelValue();
    /**
     * <pre>
     * Not yet set
     * </pre>
     *
     * <code>.LogRecord.Level level = 4;</code>
     * @return The level.
     */
    com.geeksville.mesh.MeshProtos.LogRecord.Level getLevel();
  }
  /**
   * <pre>
   * Debug output from the device.
   * To minimize the size of records inside the device code, if a time/source/level is not set
   * on the message it is assumed to be a continuation of the previously sent message.
   * This allows the device code to use fixed maxlen 64 byte strings for messages,
   * and then extend as needed by emitting multiple records.
   * </pre>
   *
   * Protobuf type {@code LogRecord}
   */
  public static final class LogRecord extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:LogRecord)
      LogRecordOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogRecord.newBuilder() to construct.
    private LogRecord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogRecord() {
      message_ = "";
      source_ = "";
      level_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogRecord();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_LogRecord_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_LogRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.LogRecord.class, com.geeksville.mesh.MeshProtos.LogRecord.Builder.class);
    }

    /**
     * <pre>
     * Log levels, chosen to match python logging conventions.
     * </pre>
     *
     * Protobuf enum {@code LogRecord.Level}
     */
    public enum Level
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>UNSET = 0;</code>
       */
      UNSET(0),
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>CRITICAL = 50;</code>
       */
      CRITICAL(50),
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>ERROR = 40;</code>
       */
      ERROR(40),
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>WARNING = 30;</code>
       */
      WARNING(30),
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>INFO = 20;</code>
       */
      INFO(20),
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>DEBUG = 10;</code>
       */
      DEBUG(10),
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>TRACE = 5;</code>
       */
      TRACE(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>UNSET = 0;</code>
       */
      public static final int UNSET_VALUE = 0;
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>CRITICAL = 50;</code>
       */
      public static final int CRITICAL_VALUE = 50;
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>ERROR = 40;</code>
       */
      public static final int ERROR_VALUE = 40;
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>WARNING = 30;</code>
       */
      public static final int WARNING_VALUE = 30;
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>INFO = 20;</code>
       */
      public static final int INFO_VALUE = 20;
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>DEBUG = 10;</code>
       */
      public static final int DEBUG_VALUE = 10;
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>TRACE = 5;</code>
       */
      public static final int TRACE_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Level valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Level forNumber(int value) {
        switch (value) {
          case 0: return UNSET;
          case 50: return CRITICAL;
          case 40: return ERROR;
          case 30: return WARNING;
          case 20: return INFO;
          case 10: return DEBUG;
          case 5: return TRACE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Level>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Level> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Level>() {
              public Level findValueByNumber(int number) {
                return Level.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.LogRecord.getDescriptor().getEnumTypes().get(0);
      }

      private static final Level[] VALUES = values();

      public static Level valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Level(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:LogRecord.Level)
    }

    public static final int MESSAGE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object message_ = "";
    /**
     * <pre>
     * Log levels, chosen to match python logging conventions.
     * </pre>
     *
     * <code>string message = 1;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Log levels, chosen to match python logging conventions.
     * </pre>
     *
     * <code>string message = 1;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private int time_ = 0;
    /**
     * <pre>
     * Seconds since 1970 - or 0 for unknown/unset
     * </pre>
     *
     * <code>fixed32 time = 2;</code>
     * @return The time.
     */
    @java.lang.Override
    public int getTime() {
      return time_;
    }

    public static final int SOURCE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object source_ = "";
    /**
     * <pre>
     * Usually based on thread name - if known
     * </pre>
     *
     * <code>string source = 3;</code>
     * @return The source.
     */
    @java.lang.Override
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Usually based on thread name - if known
     * </pre>
     *
     * <code>string source = 3;</code>
     * @return The bytes for source.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LEVEL_FIELD_NUMBER = 4;
    private int level_ = 0;
    /**
     * <pre>
     * Not yet set
     * </pre>
     *
     * <code>.LogRecord.Level level = 4;</code>
     * @return The enum numeric value on the wire for level.
     */
    @java.lang.Override public int getLevelValue() {
      return level_;
    }
    /**
     * <pre>
     * Not yet set
     * </pre>
     *
     * <code>.LogRecord.Level level = 4;</code>
     * @return The level.
     */
    @java.lang.Override public com.geeksville.mesh.MeshProtos.LogRecord.Level getLevel() {
      com.geeksville.mesh.MeshProtos.LogRecord.Level result = com.geeksville.mesh.MeshProtos.LogRecord.Level.forNumber(level_);
      return result == null ? com.geeksville.mesh.MeshProtos.LogRecord.Level.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
      }
      if (time_ != 0) {
        output.writeFixed32(2, time_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(source_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, source_);
      }
      if (level_ != com.geeksville.mesh.MeshProtos.LogRecord.Level.UNSET.getNumber()) {
        output.writeEnum(4, level_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, time_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(source_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, source_);
      }
      if (level_ != com.geeksville.mesh.MeshProtos.LogRecord.Level.UNSET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, level_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.LogRecord)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.LogRecord other = (com.geeksville.mesh.MeshProtos.LogRecord) obj;

      if (!getMessage()
          .equals(other.getMessage())) return false;
      if (getTime()
          != other.getTime()) return false;
      if (!getSource()
          .equals(other.getSource())) return false;
      if (level_ != other.level_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource().hashCode();
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + level_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.LogRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.LogRecord prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Debug output from the device.
     * To minimize the size of records inside the device code, if a time/source/level is not set
     * on the message it is assumed to be a continuation of the previously sent message.
     * This allows the device code to use fixed maxlen 64 byte strings for messages,
     * and then extend as needed by emitting multiple records.
     * </pre>
     *
     * Protobuf type {@code LogRecord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogRecord)
        com.geeksville.mesh.MeshProtos.LogRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_LogRecord_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_LogRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.LogRecord.class, com.geeksville.mesh.MeshProtos.LogRecord.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.LogRecord.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        message_ = "";
        time_ = 0;
        source_ = "";
        level_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_LogRecord_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.LogRecord getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.LogRecord build() {
        com.geeksville.mesh.MeshProtos.LogRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.LogRecord buildPartial() {
        com.geeksville.mesh.MeshProtos.LogRecord result = new com.geeksville.mesh.MeshProtos.LogRecord(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.geeksville.mesh.MeshProtos.LogRecord result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.message_ = message_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.time_ = time_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.source_ = source_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.level_ = level_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.LogRecord) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.LogRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.LogRecord other) {
        if (other == com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance()) return this;
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        if (!other.getSource().isEmpty()) {
          source_ = other.source_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.level_ != 0) {
          setLevelValue(other.getLevelValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                message_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 21: {
                time_ = input.readFixed32();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              case 26: {
                source_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                level_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object message_ = "";
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>string message = 1;</code>
       * @return The message.
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>string message = 1;</code>
       * @return The bytes for message.
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>string message = 1;</code>
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        message_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>string message = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessage() {
        message_ = getDefaultInstance().getMessage();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>string message = 1;</code>
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        message_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <pre>
       * Seconds since 1970 - or 0 for unknown/unset
       * </pre>
       *
       * <code>fixed32 time = 2;</code>
       * @return The time.
       */
      @java.lang.Override
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       * Seconds since 1970 - or 0 for unknown/unset
       * </pre>
       *
       * <code>fixed32 time = 2;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(int value) {
        
        time_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Seconds since 1970 - or 0 for unknown/unset
       * </pre>
       *
       * <code>fixed32 time = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object source_ = "";
      /**
       * <pre>
       * Usually based on thread name - if known
       * </pre>
       *
       * <code>string source = 3;</code>
       * @return The source.
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Usually based on thread name - if known
       * </pre>
       *
       * <code>string source = 3;</code>
       * @return The bytes for source.
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Usually based on thread name - if known
       * </pre>
       *
       * <code>string source = 3;</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        source_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Usually based on thread name - if known
       * </pre>
       *
       * <code>string source = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        source_ = getDefaultInstance().getSource();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Usually based on thread name - if known
       * </pre>
       *
       * <code>string source = 3;</code>
       * @param value The bytes for source to set.
       * @return This builder for chaining.
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        source_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private int level_ = 0;
      /**
       * <pre>
       * Not yet set
       * </pre>
       *
       * <code>.LogRecord.Level level = 4;</code>
       * @return The enum numeric value on the wire for level.
       */
      @java.lang.Override public int getLevelValue() {
        return level_;
      }
      /**
       * <pre>
       * Not yet set
       * </pre>
       *
       * <code>.LogRecord.Level level = 4;</code>
       * @param value The enum numeric value on the wire for level to set.
       * @return This builder for chaining.
       */
      public Builder setLevelValue(int value) {
        level_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Not yet set
       * </pre>
       *
       * <code>.LogRecord.Level level = 4;</code>
       * @return The level.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.LogRecord.Level getLevel() {
        com.geeksville.mesh.MeshProtos.LogRecord.Level result = com.geeksville.mesh.MeshProtos.LogRecord.Level.forNumber(level_);
        return result == null ? com.geeksville.mesh.MeshProtos.LogRecord.Level.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Not yet set
       * </pre>
       *
       * <code>.LogRecord.Level level = 4;</code>
       * @param value The level to set.
       * @return This builder for chaining.
       */
      public Builder setLevel(com.geeksville.mesh.MeshProtos.LogRecord.Level value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        level_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Not yet set
       * </pre>
       *
       * <code>.LogRecord.Level level = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        level_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:LogRecord)
    }

    // @@protoc_insertion_point(class_scope:LogRecord)
    private static final com.geeksville.mesh.MeshProtos.LogRecord DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.LogRecord();
    }

    public static com.geeksville.mesh.MeshProtos.LogRecord getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogRecord>
        PARSER = new com.google.protobuf.AbstractParser<LogRecord>() {
      @java.lang.Override
      public LogRecord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LogRecord> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogRecord> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.LogRecord getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FromRadioOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FromRadio)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The packet id, used to allow the phone to request missing read packets from the FIFO,
     * see our bluetooth docs
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     * Log levels, chosen to match python logging conventions.
     * </pre>
     *
     * <code>.MeshPacket packet = 2;</code>
     * @return Whether the packet field is set.
     */
    boolean hasPacket();
    /**
     * <pre>
     * Log levels, chosen to match python logging conventions.
     * </pre>
     *
     * <code>.MeshPacket packet = 2;</code>
     * @return The packet.
     */
    com.geeksville.mesh.MeshProtos.MeshPacket getPacket();
    /**
     * <pre>
     * Log levels, chosen to match python logging conventions.
     * </pre>
     *
     * <code>.MeshPacket packet = 2;</code>
     */
    com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder getPacketOrBuilder();

    /**
     * <pre>
     * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>.MyNodeInfo my_info = 3;</code>
     * @return Whether the myInfo field is set.
     */
    boolean hasMyInfo();
    /**
     * <pre>
     * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>.MyNodeInfo my_info = 3;</code>
     * @return The myInfo.
     */
    com.geeksville.mesh.MeshProtos.MyNodeInfo getMyInfo();
    /**
     * <pre>
     * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>.MyNodeInfo my_info = 3;</code>
     */
    com.geeksville.mesh.MeshProtos.MyNodeInfoOrBuilder getMyInfoOrBuilder();

    /**
     * <pre>
     * One packet is sent for each node in the on radio DB
     * starts over with the first node in our DB
     * </pre>
     *
     * <code>.NodeInfo node_info = 4;</code>
     * @return Whether the nodeInfo field is set.
     */
    boolean hasNodeInfo();
    /**
     * <pre>
     * One packet is sent for each node in the on radio DB
     * starts over with the first node in our DB
     * </pre>
     *
     * <code>.NodeInfo node_info = 4;</code>
     * @return The nodeInfo.
     */
    com.geeksville.mesh.MeshProtos.NodeInfo getNodeInfo();
    /**
     * <pre>
     * One packet is sent for each node in the on radio DB
     * starts over with the first node in our DB
     * </pre>
     *
     * <code>.NodeInfo node_info = 4;</code>
     */
    com.geeksville.mesh.MeshProtos.NodeInfoOrBuilder getNodeInfoOrBuilder();

    /**
     * <pre>
     * Include a part of the config (was: RadioConfig radio)
     * </pre>
     *
     * <code>.Config config = 5;</code>
     * @return Whether the config field is set.
     */
    boolean hasConfig();
    /**
     * <pre>
     * Include a part of the config (was: RadioConfig radio)
     * </pre>
     *
     * <code>.Config config = 5;</code>
     * @return The config.
     */
    com.geeksville.mesh.ConfigProtos.Config getConfig();
    /**
     * <pre>
     * Include a part of the config (was: RadioConfig radio)
     * </pre>
     *
     * <code>.Config config = 5;</code>
     */
    com.geeksville.mesh.ConfigProtos.ConfigOrBuilder getConfigOrBuilder();

    /**
     * <pre>
     * Set to send debug console output over our protobuf stream
     * </pre>
     *
     * <code>.LogRecord log_record = 6;</code>
     * @return Whether the logRecord field is set.
     */
    boolean hasLogRecord();
    /**
     * <pre>
     * Set to send debug console output over our protobuf stream
     * </pre>
     *
     * <code>.LogRecord log_record = 6;</code>
     * @return The logRecord.
     */
    com.geeksville.mesh.MeshProtos.LogRecord getLogRecord();
    /**
     * <pre>
     * Set to send debug console output over our protobuf stream
     * </pre>
     *
     * <code>.LogRecord log_record = 6;</code>
     */
    com.geeksville.mesh.MeshProtos.LogRecordOrBuilder getLogRecordOrBuilder();

    /**
     * <pre>
     * Sent as true once the device has finished sending all of the responses to want_config
     * recipient should check if this ID matches our original request nonce, if
     * not, it means your config responses haven't started yet.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>uint32 config_complete_id = 7;</code>
     * @return Whether the configCompleteId field is set.
     */
    boolean hasConfigCompleteId();
    /**
     * <pre>
     * Sent as true once the device has finished sending all of the responses to want_config
     * recipient should check if this ID matches our original request nonce, if
     * not, it means your config responses haven't started yet.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>uint32 config_complete_id = 7;</code>
     * @return The configCompleteId.
     */
    int getConfigCompleteId();

    /**
     * <pre>
     * Sent to tell clients the radio has just rebooted.
     * Set to true if present.
     * Not used on all transports, currently just used for the serial console.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>bool rebooted = 8;</code>
     * @return Whether the rebooted field is set.
     */
    boolean hasRebooted();
    /**
     * <pre>
     * Sent to tell clients the radio has just rebooted.
     * Set to true if present.
     * Not used on all transports, currently just used for the serial console.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>bool rebooted = 8;</code>
     * @return The rebooted.
     */
    boolean getRebooted();

    /**
     * <pre>
     * Include module config
     * </pre>
     *
     * <code>.ModuleConfig moduleConfig = 9;</code>
     * @return Whether the moduleConfig field is set.
     */
    boolean hasModuleConfig();
    /**
     * <pre>
     * Include module config
     * </pre>
     *
     * <code>.ModuleConfig moduleConfig = 9;</code>
     * @return The moduleConfig.
     */
    com.geeksville.mesh.ModuleConfigProtos.ModuleConfig getModuleConfig();
    /**
     * <pre>
     * Include module config
     * </pre>
     *
     * <code>.ModuleConfig moduleConfig = 9;</code>
     */
    com.geeksville.mesh.ModuleConfigProtos.ModuleConfigOrBuilder getModuleConfigOrBuilder();

    /**
     * <pre>
     * One packet is sent for each channel
     * </pre>
     *
     * <code>.Channel channel = 10;</code>
     * @return Whether the channel field is set.
     */
    boolean hasChannel();
    /**
     * <pre>
     * One packet is sent for each channel
     * </pre>
     *
     * <code>.Channel channel = 10;</code>
     * @return The channel.
     */
    com.geeksville.mesh.ChannelProtos.Channel getChannel();
    /**
     * <pre>
     * One packet is sent for each channel
     * </pre>
     *
     * <code>.Channel channel = 10;</code>
     */
    com.geeksville.mesh.ChannelProtos.ChannelOrBuilder getChannelOrBuilder();

    public com.geeksville.mesh.MeshProtos.FromRadio.PayloadVariantCase getPayloadVariantCase();
  }
  /**
   * <pre>
   * Packets from the radio to the phone will appear on the fromRadio characteristic.
   * It will support READ and NOTIFY. When a new packet arrives the device will BLE notify?
   * It will sit in that descriptor until consumed by the phone,
   * at which point the next item in the FIFO will be populated.
   * </pre>
   *
   * Protobuf type {@code FromRadio}
   */
  public static final class FromRadio extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:FromRadio)
      FromRadioOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FromRadio.newBuilder() to construct.
    private FromRadio(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FromRadio() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FromRadio();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_FromRadio_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_FromRadio_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.FromRadio.class, com.geeksville.mesh.MeshProtos.FromRadio.Builder.class);
    }

    private int payloadVariantCase_ = 0;
    private java.lang.Object payloadVariant_;
    public enum PayloadVariantCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PACKET(2),
      MY_INFO(3),
      NODE_INFO(4),
      CONFIG(5),
      LOG_RECORD(6),
      CONFIG_COMPLETE_ID(7),
      REBOOTED(8),
      MODULECONFIG(9),
      CHANNEL(10),
      PAYLOADVARIANT_NOT_SET(0);
      private final int value;
      private PayloadVariantCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadVariantCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadVariantCase forNumber(int value) {
        switch (value) {
          case 2: return PACKET;
          case 3: return MY_INFO;
          case 4: return NODE_INFO;
          case 5: return CONFIG;
          case 6: return LOG_RECORD;
          case 7: return CONFIG_COMPLETE_ID;
          case 8: return REBOOTED;
          case 9: return MODULECONFIG;
          case 10: return CHANNEL;
          case 0: return PAYLOADVARIANT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadVariantCase
    getPayloadVariantCase() {
      return PayloadVariantCase.forNumber(
          payloadVariantCase_);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <pre>
     * The packet id, used to allow the phone to request missing read packets from the FIFO,
     * see our bluetooth docs
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int PACKET_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Log levels, chosen to match python logging conventions.
     * </pre>
     *
     * <code>.MeshPacket packet = 2;</code>
     * @return Whether the packet field is set.
     */
    @java.lang.Override
    public boolean hasPacket() {
      return payloadVariantCase_ == 2;
    }
    /**
     * <pre>
     * Log levels, chosen to match python logging conventions.
     * </pre>
     *
     * <code>.MeshPacket packet = 2;</code>
     * @return The packet.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MeshPacket getPacket() {
      if (payloadVariantCase_ == 2) {
         return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
    }
    /**
     * <pre>
     * Log levels, chosen to match python logging conventions.
     * </pre>
     *
     * <code>.MeshPacket packet = 2;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder getPacketOrBuilder() {
      if (payloadVariantCase_ == 2) {
         return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
    }

    public static final int MY_INFO_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>.MyNodeInfo my_info = 3;</code>
     * @return Whether the myInfo field is set.
     */
    @java.lang.Override
    public boolean hasMyInfo() {
      return payloadVariantCase_ == 3;
    }
    /**
     * <pre>
     * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>.MyNodeInfo my_info = 3;</code>
     * @return The myInfo.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MyNodeInfo getMyInfo() {
      if (payloadVariantCase_ == 3) {
         return (com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance();
    }
    /**
     * <pre>
     * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>.MyNodeInfo my_info = 3;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MyNodeInfoOrBuilder getMyInfoOrBuilder() {
      if (payloadVariantCase_ == 3) {
         return (com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance();
    }

    public static final int NODE_INFO_FIELD_NUMBER = 4;
    /**
     * <pre>
     * One packet is sent for each node in the on radio DB
     * starts over with the first node in our DB
     * </pre>
     *
     * <code>.NodeInfo node_info = 4;</code>
     * @return Whether the nodeInfo field is set.
     */
    @java.lang.Override
    public boolean hasNodeInfo() {
      return payloadVariantCase_ == 4;
    }
    /**
     * <pre>
     * One packet is sent for each node in the on radio DB
     * starts over with the first node in our DB
     * </pre>
     *
     * <code>.NodeInfo node_info = 4;</code>
     * @return The nodeInfo.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.NodeInfo getNodeInfo() {
      if (payloadVariantCase_ == 4) {
         return (com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance();
    }
    /**
     * <pre>
     * One packet is sent for each node in the on radio DB
     * starts over with the first node in our DB
     * </pre>
     *
     * <code>.NodeInfo node_info = 4;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.NodeInfoOrBuilder getNodeInfoOrBuilder() {
      if (payloadVariantCase_ == 4) {
         return (com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance();
    }

    public static final int CONFIG_FIELD_NUMBER = 5;
    /**
     * <pre>
     * Include a part of the config (was: RadioConfig radio)
     * </pre>
     *
     * <code>.Config config = 5;</code>
     * @return Whether the config field is set.
     */
    @java.lang.Override
    public boolean hasConfig() {
      return payloadVariantCase_ == 5;
    }
    /**
     * <pre>
     * Include a part of the config (was: RadioConfig radio)
     * </pre>
     *
     * <code>.Config config = 5;</code>
     * @return The config.
     */
    @java.lang.Override
    public com.geeksville.mesh.ConfigProtos.Config getConfig() {
      if (payloadVariantCase_ == 5) {
         return (com.geeksville.mesh.ConfigProtos.Config) payloadVariant_;
      }
      return com.geeksville.mesh.ConfigProtos.Config.getDefaultInstance();
    }
    /**
     * <pre>
     * Include a part of the config (was: RadioConfig radio)
     * </pre>
     *
     * <code>.Config config = 5;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.ConfigProtos.ConfigOrBuilder getConfigOrBuilder() {
      if (payloadVariantCase_ == 5) {
         return (com.geeksville.mesh.ConfigProtos.Config) payloadVariant_;
      }
      return com.geeksville.mesh.ConfigProtos.Config.getDefaultInstance();
    }

    public static final int LOG_RECORD_FIELD_NUMBER = 6;
    /**
     * <pre>
     * Set to send debug console output over our protobuf stream
     * </pre>
     *
     * <code>.LogRecord log_record = 6;</code>
     * @return Whether the logRecord field is set.
     */
    @java.lang.Override
    public boolean hasLogRecord() {
      return payloadVariantCase_ == 6;
    }
    /**
     * <pre>
     * Set to send debug console output over our protobuf stream
     * </pre>
     *
     * <code>.LogRecord log_record = 6;</code>
     * @return The logRecord.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.LogRecord getLogRecord() {
      if (payloadVariantCase_ == 6) {
         return (com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance();
    }
    /**
     * <pre>
     * Set to send debug console output over our protobuf stream
     * </pre>
     *
     * <code>.LogRecord log_record = 6;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.LogRecordOrBuilder getLogRecordOrBuilder() {
      if (payloadVariantCase_ == 6) {
         return (com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance();
    }

    public static final int CONFIG_COMPLETE_ID_FIELD_NUMBER = 7;
    /**
     * <pre>
     * Sent as true once the device has finished sending all of the responses to want_config
     * recipient should check if this ID matches our original request nonce, if
     * not, it means your config responses haven't started yet.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>uint32 config_complete_id = 7;</code>
     * @return Whether the configCompleteId field is set.
     */
    @java.lang.Override
    public boolean hasConfigCompleteId() {
      return payloadVariantCase_ == 7;
    }
    /**
     * <pre>
     * Sent as true once the device has finished sending all of the responses to want_config
     * recipient should check if this ID matches our original request nonce, if
     * not, it means your config responses haven't started yet.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>uint32 config_complete_id = 7;</code>
     * @return The configCompleteId.
     */
    @java.lang.Override
    public int getConfigCompleteId() {
      if (payloadVariantCase_ == 7) {
        return (java.lang.Integer) payloadVariant_;
      }
      return 0;
    }

    public static final int REBOOTED_FIELD_NUMBER = 8;
    /**
     * <pre>
     * Sent to tell clients the radio has just rebooted.
     * Set to true if present.
     * Not used on all transports, currently just used for the serial console.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>bool rebooted = 8;</code>
     * @return Whether the rebooted field is set.
     */
    @java.lang.Override
    public boolean hasRebooted() {
      return payloadVariantCase_ == 8;
    }
    /**
     * <pre>
     * Sent to tell clients the radio has just rebooted.
     * Set to true if present.
     * Not used on all transports, currently just used for the serial console.
     * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
     * </pre>
     *
     * <code>bool rebooted = 8;</code>
     * @return The rebooted.
     */
    @java.lang.Override
    public boolean getRebooted() {
      if (payloadVariantCase_ == 8) {
        return (java.lang.Boolean) payloadVariant_;
      }
      return false;
    }

    public static final int MODULECONFIG_FIELD_NUMBER = 9;
    /**
     * <pre>
     * Include module config
     * </pre>
     *
     * <code>.ModuleConfig moduleConfig = 9;</code>
     * @return Whether the moduleConfig field is set.
     */
    @java.lang.Override
    public boolean hasModuleConfig() {
      return payloadVariantCase_ == 9;
    }
    /**
     * <pre>
     * Include module config
     * </pre>
     *
     * <code>.ModuleConfig moduleConfig = 9;</code>
     * @return The moduleConfig.
     */
    @java.lang.Override
    public com.geeksville.mesh.ModuleConfigProtos.ModuleConfig getModuleConfig() {
      if (payloadVariantCase_ == 9) {
         return (com.geeksville.mesh.ModuleConfigProtos.ModuleConfig) payloadVariant_;
      }
      return com.geeksville.mesh.ModuleConfigProtos.ModuleConfig.getDefaultInstance();
    }
    /**
     * <pre>
     * Include module config
     * </pre>
     *
     * <code>.ModuleConfig moduleConfig = 9;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.ModuleConfigProtos.ModuleConfigOrBuilder getModuleConfigOrBuilder() {
      if (payloadVariantCase_ == 9) {
         return (com.geeksville.mesh.ModuleConfigProtos.ModuleConfig) payloadVariant_;
      }
      return com.geeksville.mesh.ModuleConfigProtos.ModuleConfig.getDefaultInstance();
    }

    public static final int CHANNEL_FIELD_NUMBER = 10;
    /**
     * <pre>
     * One packet is sent for each channel
     * </pre>
     *
     * <code>.Channel channel = 10;</code>
     * @return Whether the channel field is set.
     */
    @java.lang.Override
    public boolean hasChannel() {
      return payloadVariantCase_ == 10;
    }
    /**
     * <pre>
     * One packet is sent for each channel
     * </pre>
     *
     * <code>.Channel channel = 10;</code>
     * @return The channel.
     */
    @java.lang.Override
    public com.geeksville.mesh.ChannelProtos.Channel getChannel() {
      if (payloadVariantCase_ == 10) {
         return (com.geeksville.mesh.ChannelProtos.Channel) payloadVariant_;
      }
      return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
    }
    /**
     * <pre>
     * One packet is sent for each channel
     * </pre>
     *
     * <code>.Channel channel = 10;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.ChannelProtos.ChannelOrBuilder getChannelOrBuilder() {
      if (payloadVariantCase_ == 10) {
         return (com.geeksville.mesh.ChannelProtos.Channel) payloadVariant_;
      }
      return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (payloadVariantCase_ == 2) {
        output.writeMessage(2, (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_);
      }
      if (payloadVariantCase_ == 3) {
        output.writeMessage(3, (com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_);
      }
      if (payloadVariantCase_ == 4) {
        output.writeMessage(4, (com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_);
      }
      if (payloadVariantCase_ == 5) {
        output.writeMessage(5, (com.geeksville.mesh.ConfigProtos.Config) payloadVariant_);
      }
      if (payloadVariantCase_ == 6) {
        output.writeMessage(6, (com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_);
      }
      if (payloadVariantCase_ == 7) {
        output.writeUInt32(
            7, (int)((java.lang.Integer) payloadVariant_));
      }
      if (payloadVariantCase_ == 8) {
        output.writeBool(
            8, (boolean)((java.lang.Boolean) payloadVariant_));
      }
      if (payloadVariantCase_ == 9) {
        output.writeMessage(9, (com.geeksville.mesh.ModuleConfigProtos.ModuleConfig) payloadVariant_);
      }
      if (payloadVariantCase_ == 10) {
        output.writeMessage(10, (com.geeksville.mesh.ChannelProtos.Channel) payloadVariant_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (payloadVariantCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_);
      }
      if (payloadVariantCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_);
      }
      if (payloadVariantCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_);
      }
      if (payloadVariantCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (com.geeksville.mesh.ConfigProtos.Config) payloadVariant_);
      }
      if (payloadVariantCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_);
      }
      if (payloadVariantCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              7, (int)((java.lang.Integer) payloadVariant_));
      }
      if (payloadVariantCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              8, (boolean)((java.lang.Boolean) payloadVariant_));
      }
      if (payloadVariantCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (com.geeksville.mesh.ModuleConfigProtos.ModuleConfig) payloadVariant_);
      }
      if (payloadVariantCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (com.geeksville.mesh.ChannelProtos.Channel) payloadVariant_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.FromRadio)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.FromRadio other = (com.geeksville.mesh.MeshProtos.FromRadio) obj;

      if (getId()
          != other.getId()) return false;
      if (!getPayloadVariantCase().equals(other.getPayloadVariantCase())) return false;
      switch (payloadVariantCase_) {
        case 2:
          if (!getPacket()
              .equals(other.getPacket())) return false;
          break;
        case 3:
          if (!getMyInfo()
              .equals(other.getMyInfo())) return false;
          break;
        case 4:
          if (!getNodeInfo()
              .equals(other.getNodeInfo())) return false;
          break;
        case 5:
          if (!getConfig()
              .equals(other.getConfig())) return false;
          break;
        case 6:
          if (!getLogRecord()
              .equals(other.getLogRecord())) return false;
          break;
        case 7:
          if (getConfigCompleteId()
              != other.getConfigCompleteId()) return false;
          break;
        case 8:
          if (getRebooted()
              != other.getRebooted()) return false;
          break;
        case 9:
          if (!getModuleConfig()
              .equals(other.getModuleConfig())) return false;
          break;
        case 10:
          if (!getChannel()
              .equals(other.getChannel())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      switch (payloadVariantCase_) {
        case 2:
          hash = (37 * hash) + PACKET_FIELD_NUMBER;
          hash = (53 * hash) + getPacket().hashCode();
          break;
        case 3:
          hash = (37 * hash) + MY_INFO_FIELD_NUMBER;
          hash = (53 * hash) + getMyInfo().hashCode();
          break;
        case 4:
          hash = (37 * hash) + NODE_INFO_FIELD_NUMBER;
          hash = (53 * hash) + getNodeInfo().hashCode();
          break;
        case 5:
          hash = (37 * hash) + CONFIG_FIELD_NUMBER;
          hash = (53 * hash) + getConfig().hashCode();
          break;
        case 6:
          hash = (37 * hash) + LOG_RECORD_FIELD_NUMBER;
          hash = (53 * hash) + getLogRecord().hashCode();
          break;
        case 7:
          hash = (37 * hash) + CONFIG_COMPLETE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getConfigCompleteId();
          break;
        case 8:
          hash = (37 * hash) + REBOOTED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getRebooted());
          break;
        case 9:
          hash = (37 * hash) + MODULECONFIG_FIELD_NUMBER;
          hash = (53 * hash) + getModuleConfig().hashCode();
          break;
        case 10:
          hash = (37 * hash) + CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getChannel().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.FromRadio parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.FromRadio prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Packets from the radio to the phone will appear on the fromRadio characteristic.
     * It will support READ and NOTIFY. When a new packet arrives the device will BLE notify?
     * It will sit in that descriptor until consumed by the phone,
     * at which point the next item in the FIFO will be populated.
     * </pre>
     *
     * Protobuf type {@code FromRadio}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FromRadio)
        com.geeksville.mesh.MeshProtos.FromRadioOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_FromRadio_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_FromRadio_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.FromRadio.class, com.geeksville.mesh.MeshProtos.FromRadio.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.FromRadio.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        if (packetBuilder_ != null) {
          packetBuilder_.clear();
        }
        if (myInfoBuilder_ != null) {
          myInfoBuilder_.clear();
        }
        if (nodeInfoBuilder_ != null) {
          nodeInfoBuilder_.clear();
        }
        if (configBuilder_ != null) {
          configBuilder_.clear();
        }
        if (logRecordBuilder_ != null) {
          logRecordBuilder_.clear();
        }
        if (moduleConfigBuilder_ != null) {
          moduleConfigBuilder_.clear();
        }
        if (channelBuilder_ != null) {
          channelBuilder_.clear();
        }
        payloadVariantCase_ = 0;
        payloadVariant_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_FromRadio_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.FromRadio getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.FromRadio.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.FromRadio build() {
        com.geeksville.mesh.MeshProtos.FromRadio result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.FromRadio buildPartial() {
        com.geeksville.mesh.MeshProtos.FromRadio result = new com.geeksville.mesh.MeshProtos.FromRadio(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.geeksville.mesh.MeshProtos.FromRadio result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
      }

      private void buildPartialOneofs(com.geeksville.mesh.MeshProtos.FromRadio result) {
        result.payloadVariantCase_ = payloadVariantCase_;
        result.payloadVariant_ = this.payloadVariant_;
        if (payloadVariantCase_ == 2 &&
            packetBuilder_ != null) {
          result.payloadVariant_ = packetBuilder_.build();
        }
        if (payloadVariantCase_ == 3 &&
            myInfoBuilder_ != null) {
          result.payloadVariant_ = myInfoBuilder_.build();
        }
        if (payloadVariantCase_ == 4 &&
            nodeInfoBuilder_ != null) {
          result.payloadVariant_ = nodeInfoBuilder_.build();
        }
        if (payloadVariantCase_ == 5 &&
            configBuilder_ != null) {
          result.payloadVariant_ = configBuilder_.build();
        }
        if (payloadVariantCase_ == 6 &&
            logRecordBuilder_ != null) {
          result.payloadVariant_ = logRecordBuilder_.build();
        }
        if (payloadVariantCase_ == 9 &&
            moduleConfigBuilder_ != null) {
          result.payloadVariant_ = moduleConfigBuilder_.build();
        }
        if (payloadVariantCase_ == 10 &&
            channelBuilder_ != null) {
          result.payloadVariant_ = channelBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.FromRadio) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.FromRadio)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.FromRadio other) {
        if (other == com.geeksville.mesh.MeshProtos.FromRadio.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        switch (other.getPayloadVariantCase()) {
          case PACKET: {
            mergePacket(other.getPacket());
            break;
          }
          case MY_INFO: {
            mergeMyInfo(other.getMyInfo());
            break;
          }
          case NODE_INFO: {
            mergeNodeInfo(other.getNodeInfo());
            break;
          }
          case CONFIG: {
            mergeConfig(other.getConfig());
            break;
          }
          case LOG_RECORD: {
            mergeLogRecord(other.getLogRecord());
            break;
          }
          case CONFIG_COMPLETE_ID: {
            setConfigCompleteId(other.getConfigCompleteId());
            break;
          }
          case REBOOTED: {
            setRebooted(other.getRebooted());
            break;
          }
          case MODULECONFIG: {
            mergeModuleConfig(other.getModuleConfig());
            break;
          }
          case CHANNEL: {
            mergeChannel(other.getChannel());
            break;
          }
          case PAYLOADVARIANT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getPacketFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadVariantCase_ = 2;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getMyInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadVariantCase_ = 3;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getNodeInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadVariantCase_ = 4;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getConfigFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadVariantCase_ = 5;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getLogRecordFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadVariantCase_ = 6;
                break;
              } // case 50
              case 56: {
                payloadVariant_ = input.readUInt32();
                payloadVariantCase_ = 7;
                break;
              } // case 56
              case 64: {
                payloadVariant_ = input.readBool();
                payloadVariantCase_ = 8;
                break;
              } // case 64
              case 74: {
                input.readMessage(
                    getModuleConfigFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadVariantCase_ = 9;
                break;
              } // case 74
              case 82: {
                input.readMessage(
                    getChannelFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadVariantCase_ = 10;
                break;
              } // case 82
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int payloadVariantCase_ = 0;
      private java.lang.Object payloadVariant_;
      public PayloadVariantCase
          getPayloadVariantCase() {
        return PayloadVariantCase.forNumber(
            payloadVariantCase_);
      }

      public Builder clearPayloadVariant() {
        payloadVariantCase_ = 0;
        payloadVariant_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       * The packet id, used to allow the phone to request missing read packets from the FIFO,
       * see our bluetooth docs
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * The packet id, used to allow the phone to request missing read packets from the FIFO,
       * see our bluetooth docs
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The packet id, used to allow the phone to request missing read packets from the FIFO,
       * see our bluetooth docs
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.MeshPacket, com.geeksville.mesh.MeshProtos.MeshPacket.Builder, com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder> packetBuilder_;
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       * @return Whether the packet field is set.
       */
      @java.lang.Override
      public boolean hasPacket() {
        return payloadVariantCase_ == 2;
      }
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       * @return The packet.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacket getPacket() {
        if (packetBuilder_ == null) {
          if (payloadVariantCase_ == 2) {
            return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 2) {
            return packetBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       */
      public Builder setPacket(com.geeksville.mesh.MeshProtos.MeshPacket value) {
        if (packetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          packetBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       */
      public Builder setPacket(
          com.geeksville.mesh.MeshProtos.MeshPacket.Builder builderForValue) {
        if (packetBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          packetBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       */
      public Builder mergePacket(com.geeksville.mesh.MeshProtos.MeshPacket value) {
        if (packetBuilder_ == null) {
          if (payloadVariantCase_ == 2 &&
              payloadVariant_ != com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.MeshPacket.newBuilder((com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 2) {
            packetBuilder_.mergeFrom(value);
          } else {
            packetBuilder_.setMessage(value);
          }
        }
        payloadVariantCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       */
      public Builder clearPacket() {
        if (packetBuilder_ == null) {
          if (payloadVariantCase_ == 2) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 2) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          packetBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       */
      public com.geeksville.mesh.MeshProtos.MeshPacket.Builder getPacketBuilder() {
        return getPacketFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder getPacketOrBuilder() {
        if ((payloadVariantCase_ == 2) && (packetBuilder_ != null)) {
          return packetBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 2) {
            return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Log levels, chosen to match python logging conventions.
       * </pre>
       *
       * <code>.MeshPacket packet = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.MeshPacket, com.geeksville.mesh.MeshProtos.MeshPacket.Builder, com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder> 
          getPacketFieldBuilder() {
        if (packetBuilder_ == null) {
          if (!(payloadVariantCase_ == 2)) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
          }
          packetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.MeshPacket, com.geeksville.mesh.MeshProtos.MeshPacket.Builder, com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 2;
        onChanged();
        return packetBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.MyNodeInfo, com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder, com.geeksville.mesh.MeshProtos.MyNodeInfoOrBuilder> myInfoBuilder_;
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       * @return Whether the myInfo field is set.
       */
      @java.lang.Override
      public boolean hasMyInfo() {
        return payloadVariantCase_ == 3;
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       * @return The myInfo.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MyNodeInfo getMyInfo() {
        if (myInfoBuilder_ == null) {
          if (payloadVariantCase_ == 3) {
            return (com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 3) {
            return myInfoBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       */
      public Builder setMyInfo(com.geeksville.mesh.MeshProtos.MyNodeInfo value) {
        if (myInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          myInfoBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       */
      public Builder setMyInfo(
          com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder builderForValue) {
        if (myInfoBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          myInfoBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       */
      public Builder mergeMyInfo(com.geeksville.mesh.MeshProtos.MyNodeInfo value) {
        if (myInfoBuilder_ == null) {
          if (payloadVariantCase_ == 3 &&
              payloadVariant_ != com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.MyNodeInfo.newBuilder((com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 3) {
            myInfoBuilder_.mergeFrom(value);
          } else {
            myInfoBuilder_.setMessage(value);
          }
        }
        payloadVariantCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       */
      public Builder clearMyInfo() {
        if (myInfoBuilder_ == null) {
          if (payloadVariantCase_ == 3) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 3) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          myInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       */
      public com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder getMyInfoBuilder() {
        return getMyInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MyNodeInfoOrBuilder getMyInfoOrBuilder() {
        if ((payloadVariantCase_ == 3) && (myInfoBuilder_ != null)) {
          return myInfoBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 3) {
            return (com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Tells the phone what our node number is, can be -1 if we've not yet joined a mesh.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>.MyNodeInfo my_info = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.MyNodeInfo, com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder, com.geeksville.mesh.MeshProtos.MyNodeInfoOrBuilder> 
          getMyInfoFieldBuilder() {
        if (myInfoBuilder_ == null) {
          if (!(payloadVariantCase_ == 3)) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.MyNodeInfo.getDefaultInstance();
          }
          myInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.MyNodeInfo, com.geeksville.mesh.MeshProtos.MyNodeInfo.Builder, com.geeksville.mesh.MeshProtos.MyNodeInfoOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.MyNodeInfo) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 3;
        onChanged();
        return myInfoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.NodeInfo, com.geeksville.mesh.MeshProtos.NodeInfo.Builder, com.geeksville.mesh.MeshProtos.NodeInfoOrBuilder> nodeInfoBuilder_;
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       * @return Whether the nodeInfo field is set.
       */
      @java.lang.Override
      public boolean hasNodeInfo() {
        return payloadVariantCase_ == 4;
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       * @return The nodeInfo.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.NodeInfo getNodeInfo() {
        if (nodeInfoBuilder_ == null) {
          if (payloadVariantCase_ == 4) {
            return (com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 4) {
            return nodeInfoBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       */
      public Builder setNodeInfo(com.geeksville.mesh.MeshProtos.NodeInfo value) {
        if (nodeInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          nodeInfoBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       */
      public Builder setNodeInfo(
          com.geeksville.mesh.MeshProtos.NodeInfo.Builder builderForValue) {
        if (nodeInfoBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          nodeInfoBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       */
      public Builder mergeNodeInfo(com.geeksville.mesh.MeshProtos.NodeInfo value) {
        if (nodeInfoBuilder_ == null) {
          if (payloadVariantCase_ == 4 &&
              payloadVariant_ != com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.NodeInfo.newBuilder((com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 4) {
            nodeInfoBuilder_.mergeFrom(value);
          } else {
            nodeInfoBuilder_.setMessage(value);
          }
        }
        payloadVariantCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       */
      public Builder clearNodeInfo() {
        if (nodeInfoBuilder_ == null) {
          if (payloadVariantCase_ == 4) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 4) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          nodeInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       */
      public com.geeksville.mesh.MeshProtos.NodeInfo.Builder getNodeInfoBuilder() {
        return getNodeInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.NodeInfoOrBuilder getNodeInfoOrBuilder() {
        if ((payloadVariantCase_ == 4) && (nodeInfoBuilder_ != null)) {
          return nodeInfoBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 4) {
            return (com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * One packet is sent for each node in the on radio DB
       * starts over with the first node in our DB
       * </pre>
       *
       * <code>.NodeInfo node_info = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.NodeInfo, com.geeksville.mesh.MeshProtos.NodeInfo.Builder, com.geeksville.mesh.MeshProtos.NodeInfoOrBuilder> 
          getNodeInfoFieldBuilder() {
        if (nodeInfoBuilder_ == null) {
          if (!(payloadVariantCase_ == 4)) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.NodeInfo.getDefaultInstance();
          }
          nodeInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.NodeInfo, com.geeksville.mesh.MeshProtos.NodeInfo.Builder, com.geeksville.mesh.MeshProtos.NodeInfoOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.NodeInfo) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 4;
        onChanged();
        return nodeInfoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.ConfigProtos.Config, com.geeksville.mesh.ConfigProtos.Config.Builder, com.geeksville.mesh.ConfigProtos.ConfigOrBuilder> configBuilder_;
      /**
       * <pre>
       * Include a part of the config (was: RadioConfig radio)
       * </pre>
       *
       * <code>.Config config = 5;</code>
       * @return Whether the config field is set.
       */
      @java.lang.Override
      public boolean hasConfig() {
        return payloadVariantCase_ == 5;
      }
      /**
       * <pre>
       * Include a part of the config (was: RadioConfig radio)
       * </pre>
       *
       * <code>.Config config = 5;</code>
       * @return The config.
       */
      @java.lang.Override
      public com.geeksville.mesh.ConfigProtos.Config getConfig() {
        if (configBuilder_ == null) {
          if (payloadVariantCase_ == 5) {
            return (com.geeksville.mesh.ConfigProtos.Config) payloadVariant_;
          }
          return com.geeksville.mesh.ConfigProtos.Config.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 5) {
            return configBuilder_.getMessage();
          }
          return com.geeksville.mesh.ConfigProtos.Config.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Include a part of the config (was: RadioConfig radio)
       * </pre>
       *
       * <code>.Config config = 5;</code>
       */
      public Builder setConfig(com.geeksville.mesh.ConfigProtos.Config value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 5;
        return this;
      }
      /**
       * <pre>
       * Include a part of the config (was: RadioConfig radio)
       * </pre>
       *
       * <code>.Config config = 5;</code>
       */
      public Builder setConfig(
          com.geeksville.mesh.ConfigProtos.Config.Builder builderForValue) {
        if (configBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 5;
        return this;
      }
      /**
       * <pre>
       * Include a part of the config (was: RadioConfig radio)
       * </pre>
       *
       * <code>.Config config = 5;</code>
       */
      public Builder mergeConfig(com.geeksville.mesh.ConfigProtos.Config value) {
        if (configBuilder_ == null) {
          if (payloadVariantCase_ == 5 &&
              payloadVariant_ != com.geeksville.mesh.ConfigProtos.Config.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.ConfigProtos.Config.newBuilder((com.geeksville.mesh.ConfigProtos.Config) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 5) {
            configBuilder_.mergeFrom(value);
          } else {
            configBuilder_.setMessage(value);
          }
        }
        payloadVariantCase_ = 5;
        return this;
      }
      /**
       * <pre>
       * Include a part of the config (was: RadioConfig radio)
       * </pre>
       *
       * <code>.Config config = 5;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          if (payloadVariantCase_ == 5) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 5) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          configBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Include a part of the config (was: RadioConfig radio)
       * </pre>
       *
       * <code>.Config config = 5;</code>
       */
      public com.geeksville.mesh.ConfigProtos.Config.Builder getConfigBuilder() {
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Include a part of the config (was: RadioConfig radio)
       * </pre>
       *
       * <code>.Config config = 5;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.ConfigProtos.ConfigOrBuilder getConfigOrBuilder() {
        if ((payloadVariantCase_ == 5) && (configBuilder_ != null)) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 5) {
            return (com.geeksville.mesh.ConfigProtos.Config) payloadVariant_;
          }
          return com.geeksville.mesh.ConfigProtos.Config.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Include a part of the config (was: RadioConfig radio)
       * </pre>
       *
       * <code>.Config config = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.ConfigProtos.Config, com.geeksville.mesh.ConfigProtos.Config.Builder, com.geeksville.mesh.ConfigProtos.ConfigOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          if (!(payloadVariantCase_ == 5)) {
            payloadVariant_ = com.geeksville.mesh.ConfigProtos.Config.getDefaultInstance();
          }
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.ConfigProtos.Config, com.geeksville.mesh.ConfigProtos.Config.Builder, com.geeksville.mesh.ConfigProtos.ConfigOrBuilder>(
                  (com.geeksville.mesh.ConfigProtos.Config) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 5;
        onChanged();
        return configBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.LogRecord, com.geeksville.mesh.MeshProtos.LogRecord.Builder, com.geeksville.mesh.MeshProtos.LogRecordOrBuilder> logRecordBuilder_;
      /**
       * <pre>
       * Set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 6;</code>
       * @return Whether the logRecord field is set.
       */
      @java.lang.Override
      public boolean hasLogRecord() {
        return payloadVariantCase_ == 6;
      }
      /**
       * <pre>
       * Set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 6;</code>
       * @return The logRecord.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.LogRecord getLogRecord() {
        if (logRecordBuilder_ == null) {
          if (payloadVariantCase_ == 6) {
            return (com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 6) {
            return logRecordBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 6;</code>
       */
      public Builder setLogRecord(com.geeksville.mesh.MeshProtos.LogRecord value) {
        if (logRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          logRecordBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 6;</code>
       */
      public Builder setLogRecord(
          com.geeksville.mesh.MeshProtos.LogRecord.Builder builderForValue) {
        if (logRecordBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          logRecordBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 6;</code>
       */
      public Builder mergeLogRecord(com.geeksville.mesh.MeshProtos.LogRecord value) {
        if (logRecordBuilder_ == null) {
          if (payloadVariantCase_ == 6 &&
              payloadVariant_ != com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.LogRecord.newBuilder((com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 6) {
            logRecordBuilder_.mergeFrom(value);
          } else {
            logRecordBuilder_.setMessage(value);
          }
        }
        payloadVariantCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 6;</code>
       */
      public Builder clearLogRecord() {
        if (logRecordBuilder_ == null) {
          if (payloadVariantCase_ == 6) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 6) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          logRecordBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 6;</code>
       */
      public com.geeksville.mesh.MeshProtos.LogRecord.Builder getLogRecordBuilder() {
        return getLogRecordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 6;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.LogRecordOrBuilder getLogRecordOrBuilder() {
        if ((payloadVariantCase_ == 6) && (logRecordBuilder_ != null)) {
          return logRecordBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 6) {
            return (com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Set to send debug console output over our protobuf stream
       * </pre>
       *
       * <code>.LogRecord log_record = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.LogRecord, com.geeksville.mesh.MeshProtos.LogRecord.Builder, com.geeksville.mesh.MeshProtos.LogRecordOrBuilder> 
          getLogRecordFieldBuilder() {
        if (logRecordBuilder_ == null) {
          if (!(payloadVariantCase_ == 6)) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.LogRecord.getDefaultInstance();
          }
          logRecordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.LogRecord, com.geeksville.mesh.MeshProtos.LogRecord.Builder, com.geeksville.mesh.MeshProtos.LogRecordOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.LogRecord) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 6;
        onChanged();
        return logRecordBuilder_;
      }

      /**
       * <pre>
       * Sent as true once the device has finished sending all of the responses to want_config
       * recipient should check if this ID matches our original request nonce, if
       * not, it means your config responses haven't started yet.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>uint32 config_complete_id = 7;</code>
       * @return Whether the configCompleteId field is set.
       */
      public boolean hasConfigCompleteId() {
        return payloadVariantCase_ == 7;
      }
      /**
       * <pre>
       * Sent as true once the device has finished sending all of the responses to want_config
       * recipient should check if this ID matches our original request nonce, if
       * not, it means your config responses haven't started yet.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>uint32 config_complete_id = 7;</code>
       * @return The configCompleteId.
       */
      public int getConfigCompleteId() {
        if (payloadVariantCase_ == 7) {
          return (java.lang.Integer) payloadVariant_;
        }
        return 0;
      }
      /**
       * <pre>
       * Sent as true once the device has finished sending all of the responses to want_config
       * recipient should check if this ID matches our original request nonce, if
       * not, it means your config responses haven't started yet.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>uint32 config_complete_id = 7;</code>
       * @param value The configCompleteId to set.
       * @return This builder for chaining.
       */
      public Builder setConfigCompleteId(int value) {
        
        payloadVariantCase_ = 7;
        payloadVariant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sent as true once the device has finished sending all of the responses to want_config
       * recipient should check if this ID matches our original request nonce, if
       * not, it means your config responses haven't started yet.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>uint32 config_complete_id = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfigCompleteId() {
        if (payloadVariantCase_ == 7) {
          payloadVariantCase_ = 0;
          payloadVariant_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * Sent to tell clients the radio has just rebooted.
       * Set to true if present.
       * Not used on all transports, currently just used for the serial console.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>bool rebooted = 8;</code>
       * @return Whether the rebooted field is set.
       */
      public boolean hasRebooted() {
        return payloadVariantCase_ == 8;
      }
      /**
       * <pre>
       * Sent to tell clients the radio has just rebooted.
       * Set to true if present.
       * Not used on all transports, currently just used for the serial console.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>bool rebooted = 8;</code>
       * @return The rebooted.
       */
      public boolean getRebooted() {
        if (payloadVariantCase_ == 8) {
          return (java.lang.Boolean) payloadVariant_;
        }
        return false;
      }
      /**
       * <pre>
       * Sent to tell clients the radio has just rebooted.
       * Set to true if present.
       * Not used on all transports, currently just used for the serial console.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>bool rebooted = 8;</code>
       * @param value The rebooted to set.
       * @return This builder for chaining.
       */
      public Builder setRebooted(boolean value) {
        
        payloadVariantCase_ = 8;
        payloadVariant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sent to tell clients the radio has just rebooted.
       * Set to true if present.
       * Not used on all transports, currently just used for the serial console.
       * NOTE: This ID must not change - to keep (minimal) compatibility with &lt;1.2 version of android apps.
       * </pre>
       *
       * <code>bool rebooted = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearRebooted() {
        if (payloadVariantCase_ == 8) {
          payloadVariantCase_ = 0;
          payloadVariant_ = null;
          onChanged();
        }
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.ModuleConfigProtos.ModuleConfig, com.geeksville.mesh.ModuleConfigProtos.ModuleConfig.Builder, com.geeksville.mesh.ModuleConfigProtos.ModuleConfigOrBuilder> moduleConfigBuilder_;
      /**
       * <pre>
       * Include module config
       * </pre>
       *
       * <code>.ModuleConfig moduleConfig = 9;</code>
       * @return Whether the moduleConfig field is set.
       */
      @java.lang.Override
      public boolean hasModuleConfig() {
        return payloadVariantCase_ == 9;
      }
      /**
       * <pre>
       * Include module config
       * </pre>
       *
       * <code>.ModuleConfig moduleConfig = 9;</code>
       * @return The moduleConfig.
       */
      @java.lang.Override
      public com.geeksville.mesh.ModuleConfigProtos.ModuleConfig getModuleConfig() {
        if (moduleConfigBuilder_ == null) {
          if (payloadVariantCase_ == 9) {
            return (com.geeksville.mesh.ModuleConfigProtos.ModuleConfig) payloadVariant_;
          }
          return com.geeksville.mesh.ModuleConfigProtos.ModuleConfig.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 9) {
            return moduleConfigBuilder_.getMessage();
          }
          return com.geeksville.mesh.ModuleConfigProtos.ModuleConfig.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Include module config
       * </pre>
       *
       * <code>.ModuleConfig moduleConfig = 9;</code>
       */
      public Builder setModuleConfig(com.geeksville.mesh.ModuleConfigProtos.ModuleConfig value) {
        if (moduleConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          moduleConfigBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 9;
        return this;
      }
      /**
       * <pre>
       * Include module config
       * </pre>
       *
       * <code>.ModuleConfig moduleConfig = 9;</code>
       */
      public Builder setModuleConfig(
          com.geeksville.mesh.ModuleConfigProtos.ModuleConfig.Builder builderForValue) {
        if (moduleConfigBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          moduleConfigBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 9;
        return this;
      }
      /**
       * <pre>
       * Include module config
       * </pre>
       *
       * <code>.ModuleConfig moduleConfig = 9;</code>
       */
      public Builder mergeModuleConfig(com.geeksville.mesh.ModuleConfigProtos.ModuleConfig value) {
        if (moduleConfigBuilder_ == null) {
          if (payloadVariantCase_ == 9 &&
              payloadVariant_ != com.geeksville.mesh.ModuleConfigProtos.ModuleConfig.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.ModuleConfigProtos.ModuleConfig.newBuilder((com.geeksville.mesh.ModuleConfigProtos.ModuleConfig) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 9) {
            moduleConfigBuilder_.mergeFrom(value);
          } else {
            moduleConfigBuilder_.setMessage(value);
          }
        }
        payloadVariantCase_ = 9;
        return this;
      }
      /**
       * <pre>
       * Include module config
       * </pre>
       *
       * <code>.ModuleConfig moduleConfig = 9;</code>
       */
      public Builder clearModuleConfig() {
        if (moduleConfigBuilder_ == null) {
          if (payloadVariantCase_ == 9) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 9) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          moduleConfigBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Include module config
       * </pre>
       *
       * <code>.ModuleConfig moduleConfig = 9;</code>
       */
      public com.geeksville.mesh.ModuleConfigProtos.ModuleConfig.Builder getModuleConfigBuilder() {
        return getModuleConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Include module config
       * </pre>
       *
       * <code>.ModuleConfig moduleConfig = 9;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.ModuleConfigProtos.ModuleConfigOrBuilder getModuleConfigOrBuilder() {
        if ((payloadVariantCase_ == 9) && (moduleConfigBuilder_ != null)) {
          return moduleConfigBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 9) {
            return (com.geeksville.mesh.ModuleConfigProtos.ModuleConfig) payloadVariant_;
          }
          return com.geeksville.mesh.ModuleConfigProtos.ModuleConfig.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Include module config
       * </pre>
       *
       * <code>.ModuleConfig moduleConfig = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.ModuleConfigProtos.ModuleConfig, com.geeksville.mesh.ModuleConfigProtos.ModuleConfig.Builder, com.geeksville.mesh.ModuleConfigProtos.ModuleConfigOrBuilder> 
          getModuleConfigFieldBuilder() {
        if (moduleConfigBuilder_ == null) {
          if (!(payloadVariantCase_ == 9)) {
            payloadVariant_ = com.geeksville.mesh.ModuleConfigProtos.ModuleConfig.getDefaultInstance();
          }
          moduleConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.ModuleConfigProtos.ModuleConfig, com.geeksville.mesh.ModuleConfigProtos.ModuleConfig.Builder, com.geeksville.mesh.ModuleConfigProtos.ModuleConfigOrBuilder>(
                  (com.geeksville.mesh.ModuleConfigProtos.ModuleConfig) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 9;
        onChanged();
        return moduleConfigBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.ChannelProtos.Channel, com.geeksville.mesh.ChannelProtos.Channel.Builder, com.geeksville.mesh.ChannelProtos.ChannelOrBuilder> channelBuilder_;
      /**
       * <pre>
       * One packet is sent for each channel
       * </pre>
       *
       * <code>.Channel channel = 10;</code>
       * @return Whether the channel field is set.
       */
      @java.lang.Override
      public boolean hasChannel() {
        return payloadVariantCase_ == 10;
      }
      /**
       * <pre>
       * One packet is sent for each channel
       * </pre>
       *
       * <code>.Channel channel = 10;</code>
       * @return The channel.
       */
      @java.lang.Override
      public com.geeksville.mesh.ChannelProtos.Channel getChannel() {
        if (channelBuilder_ == null) {
          if (payloadVariantCase_ == 10) {
            return (com.geeksville.mesh.ChannelProtos.Channel) payloadVariant_;
          }
          return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 10) {
            return channelBuilder_.getMessage();
          }
          return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * One packet is sent for each channel
       * </pre>
       *
       * <code>.Channel channel = 10;</code>
       */
      public Builder setChannel(com.geeksville.mesh.ChannelProtos.Channel value) {
        if (channelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          channelBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * One packet is sent for each channel
       * </pre>
       *
       * <code>.Channel channel = 10;</code>
       */
      public Builder setChannel(
          com.geeksville.mesh.ChannelProtos.Channel.Builder builderForValue) {
        if (channelBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          channelBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * One packet is sent for each channel
       * </pre>
       *
       * <code>.Channel channel = 10;</code>
       */
      public Builder mergeChannel(com.geeksville.mesh.ChannelProtos.Channel value) {
        if (channelBuilder_ == null) {
          if (payloadVariantCase_ == 10 &&
              payloadVariant_ != com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.ChannelProtos.Channel.newBuilder((com.geeksville.mesh.ChannelProtos.Channel) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 10) {
            channelBuilder_.mergeFrom(value);
          } else {
            channelBuilder_.setMessage(value);
          }
        }
        payloadVariantCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * One packet is sent for each channel
       * </pre>
       *
       * <code>.Channel channel = 10;</code>
       */
      public Builder clearChannel() {
        if (channelBuilder_ == null) {
          if (payloadVariantCase_ == 10) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 10) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          channelBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * One packet is sent for each channel
       * </pre>
       *
       * <code>.Channel channel = 10;</code>
       */
      public com.geeksville.mesh.ChannelProtos.Channel.Builder getChannelBuilder() {
        return getChannelFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * One packet is sent for each channel
       * </pre>
       *
       * <code>.Channel channel = 10;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.ChannelProtos.ChannelOrBuilder getChannelOrBuilder() {
        if ((payloadVariantCase_ == 10) && (channelBuilder_ != null)) {
          return channelBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 10) {
            return (com.geeksville.mesh.ChannelProtos.Channel) payloadVariant_;
          }
          return com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * One packet is sent for each channel
       * </pre>
       *
       * <code>.Channel channel = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.ChannelProtos.Channel, com.geeksville.mesh.ChannelProtos.Channel.Builder, com.geeksville.mesh.ChannelProtos.ChannelOrBuilder> 
          getChannelFieldBuilder() {
        if (channelBuilder_ == null) {
          if (!(payloadVariantCase_ == 10)) {
            payloadVariant_ = com.geeksville.mesh.ChannelProtos.Channel.getDefaultInstance();
          }
          channelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.ChannelProtos.Channel, com.geeksville.mesh.ChannelProtos.Channel.Builder, com.geeksville.mesh.ChannelProtos.ChannelOrBuilder>(
                  (com.geeksville.mesh.ChannelProtos.Channel) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 10;
        onChanged();
        return channelBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:FromRadio)
    }

    // @@protoc_insertion_point(class_scope:FromRadio)
    private static final com.geeksville.mesh.MeshProtos.FromRadio DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.FromRadio();
    }

    public static com.geeksville.mesh.MeshProtos.FromRadio getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FromRadio>
        PARSER = new com.google.protobuf.AbstractParser<FromRadio>() {
      @java.lang.Override
      public FromRadio parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FromRadio> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FromRadio> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.FromRadio getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ToRadioOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ToRadio)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Send this packet on the mesh
     * </pre>
     *
     * <code>.MeshPacket packet = 1;</code>
     * @return Whether the packet field is set.
     */
    boolean hasPacket();
    /**
     * <pre>
     * Send this packet on the mesh
     * </pre>
     *
     * <code>.MeshPacket packet = 1;</code>
     * @return The packet.
     */
    com.geeksville.mesh.MeshProtos.MeshPacket getPacket();
    /**
     * <pre>
     * Send this packet on the mesh
     * </pre>
     *
     * <code>.MeshPacket packet = 1;</code>
     */
    com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder getPacketOrBuilder();

    /**
     * <pre>
     * Phone wants radio to send full node db to the phone, This is
     * typically the first packet sent to the radio when the phone gets a
     * bluetooth connection. The radio will respond by sending back a
     * MyNodeInfo, a owner, a radio config and a series of
     * FromRadio.node_infos, and config_complete
     * the integer you write into this field will be reported back in the
     * config_complete_id response this allows clients to never be confused by
     * a stale old partially sent config.
     * </pre>
     *
     * <code>uint32 want_config_id = 3;</code>
     * @return Whether the wantConfigId field is set.
     */
    boolean hasWantConfigId();
    /**
     * <pre>
     * Phone wants radio to send full node db to the phone, This is
     * typically the first packet sent to the radio when the phone gets a
     * bluetooth connection. The radio will respond by sending back a
     * MyNodeInfo, a owner, a radio config and a series of
     * FromRadio.node_infos, and config_complete
     * the integer you write into this field will be reported back in the
     * config_complete_id response this allows clients to never be confused by
     * a stale old partially sent config.
     * </pre>
     *
     * <code>uint32 want_config_id = 3;</code>
     * @return The wantConfigId.
     */
    int getWantConfigId();

    /**
     * <pre>
     * Tell API server we are disconnecting now.
     * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
     * (Sending this message is optional for clients)
     * </pre>
     *
     * <code>bool disconnect = 4;</code>
     * @return Whether the disconnect field is set.
     */
    boolean hasDisconnect();
    /**
     * <pre>
     * Tell API server we are disconnecting now.
     * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
     * (Sending this message is optional for clients)
     * </pre>
     *
     * <code>bool disconnect = 4;</code>
     * @return The disconnect.
     */
    boolean getDisconnect();

    public com.geeksville.mesh.MeshProtos.ToRadio.PayloadVariantCase getPayloadVariantCase();
  }
  /**
   * <pre>
   * Packets/commands to the radio will be written (reliably) to the toRadio characteristic.
   * Once the write completes the phone can assume it is handled.
   * </pre>
   *
   * Protobuf type {@code ToRadio}
   */
  public static final class ToRadio extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ToRadio)
      ToRadioOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ToRadio.newBuilder() to construct.
    private ToRadio(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ToRadio() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ToRadio();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.ToRadio.class, com.geeksville.mesh.MeshProtos.ToRadio.Builder.class);
    }

    private int payloadVariantCase_ = 0;
    private java.lang.Object payloadVariant_;
    public enum PayloadVariantCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PACKET(1),
      WANT_CONFIG_ID(3),
      DISCONNECT(4),
      PAYLOADVARIANT_NOT_SET(0);
      private final int value;
      private PayloadVariantCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadVariantCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadVariantCase forNumber(int value) {
        switch (value) {
          case 1: return PACKET;
          case 3: return WANT_CONFIG_ID;
          case 4: return DISCONNECT;
          case 0: return PAYLOADVARIANT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadVariantCase
    getPayloadVariantCase() {
      return PayloadVariantCase.forNumber(
          payloadVariantCase_);
    }

    public static final int PACKET_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Send this packet on the mesh
     * </pre>
     *
     * <code>.MeshPacket packet = 1;</code>
     * @return Whether the packet field is set.
     */
    @java.lang.Override
    public boolean hasPacket() {
      return payloadVariantCase_ == 1;
    }
    /**
     * <pre>
     * Send this packet on the mesh
     * </pre>
     *
     * <code>.MeshPacket packet = 1;</code>
     * @return The packet.
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MeshPacket getPacket() {
      if (payloadVariantCase_ == 1) {
         return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
    }
    /**
     * <pre>
     * Send this packet on the mesh
     * </pre>
     *
     * <code>.MeshPacket packet = 1;</code>
     */
    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder getPacketOrBuilder() {
      if (payloadVariantCase_ == 1) {
         return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
      }
      return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
    }

    public static final int WANT_CONFIG_ID_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Phone wants radio to send full node db to the phone, This is
     * typically the first packet sent to the radio when the phone gets a
     * bluetooth connection. The radio will respond by sending back a
     * MyNodeInfo, a owner, a radio config and a series of
     * FromRadio.node_infos, and config_complete
     * the integer you write into this field will be reported back in the
     * config_complete_id response this allows clients to never be confused by
     * a stale old partially sent config.
     * </pre>
     *
     * <code>uint32 want_config_id = 3;</code>
     * @return Whether the wantConfigId field is set.
     */
    @java.lang.Override
    public boolean hasWantConfigId() {
      return payloadVariantCase_ == 3;
    }
    /**
     * <pre>
     * Phone wants radio to send full node db to the phone, This is
     * typically the first packet sent to the radio when the phone gets a
     * bluetooth connection. The radio will respond by sending back a
     * MyNodeInfo, a owner, a radio config and a series of
     * FromRadio.node_infos, and config_complete
     * the integer you write into this field will be reported back in the
     * config_complete_id response this allows clients to never be confused by
     * a stale old partially sent config.
     * </pre>
     *
     * <code>uint32 want_config_id = 3;</code>
     * @return The wantConfigId.
     */
    @java.lang.Override
    public int getWantConfigId() {
      if (payloadVariantCase_ == 3) {
        return (java.lang.Integer) payloadVariant_;
      }
      return 0;
    }

    public static final int DISCONNECT_FIELD_NUMBER = 4;
    /**
     * <pre>
     * Tell API server we are disconnecting now.
     * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
     * (Sending this message is optional for clients)
     * </pre>
     *
     * <code>bool disconnect = 4;</code>
     * @return Whether the disconnect field is set.
     */
    @java.lang.Override
    public boolean hasDisconnect() {
      return payloadVariantCase_ == 4;
    }
    /**
     * <pre>
     * Tell API server we are disconnecting now.
     * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
     * (Sending this message is optional for clients)
     * </pre>
     *
     * <code>bool disconnect = 4;</code>
     * @return The disconnect.
     */
    @java.lang.Override
    public boolean getDisconnect() {
      if (payloadVariantCase_ == 4) {
        return (java.lang.Boolean) payloadVariant_;
      }
      return false;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (payloadVariantCase_ == 1) {
        output.writeMessage(1, (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_);
      }
      if (payloadVariantCase_ == 3) {
        output.writeUInt32(
            3, (int)((java.lang.Integer) payloadVariant_));
      }
      if (payloadVariantCase_ == 4) {
        output.writeBool(
            4, (boolean)((java.lang.Boolean) payloadVariant_));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (payloadVariantCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_);
      }
      if (payloadVariantCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(
              3, (int)((java.lang.Integer) payloadVariant_));
      }
      if (payloadVariantCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              4, (boolean)((java.lang.Boolean) payloadVariant_));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.ToRadio)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.ToRadio other = (com.geeksville.mesh.MeshProtos.ToRadio) obj;

      if (!getPayloadVariantCase().equals(other.getPayloadVariantCase())) return false;
      switch (payloadVariantCase_) {
        case 1:
          if (!getPacket()
              .equals(other.getPacket())) return false;
          break;
        case 3:
          if (getWantConfigId()
              != other.getWantConfigId()) return false;
          break;
        case 4:
          if (getDisconnect()
              != other.getDisconnect()) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (payloadVariantCase_) {
        case 1:
          hash = (37 * hash) + PACKET_FIELD_NUMBER;
          hash = (53 * hash) + getPacket().hashCode();
          break;
        case 3:
          hash = (37 * hash) + WANT_CONFIG_ID_FIELD_NUMBER;
          hash = (53 * hash) + getWantConfigId();
          break;
        case 4:
          hash = (37 * hash) + DISCONNECT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getDisconnect());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.ToRadio parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.ToRadio prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Packets/commands to the radio will be written (reliably) to the toRadio characteristic.
     * Once the write completes the phone can assume it is handled.
     * </pre>
     *
     * Protobuf type {@code ToRadio}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ToRadio)
        com.geeksville.mesh.MeshProtos.ToRadioOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.ToRadio.class, com.geeksville.mesh.MeshProtos.ToRadio.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.ToRadio.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (packetBuilder_ != null) {
          packetBuilder_.clear();
        }
        payloadVariantCase_ = 0;
        payloadVariant_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_ToRadio_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.ToRadio getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.ToRadio.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.ToRadio build() {
        com.geeksville.mesh.MeshProtos.ToRadio result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.ToRadio buildPartial() {
        com.geeksville.mesh.MeshProtos.ToRadio result = new com.geeksville.mesh.MeshProtos.ToRadio(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.geeksville.mesh.MeshProtos.ToRadio result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(com.geeksville.mesh.MeshProtos.ToRadio result) {
        result.payloadVariantCase_ = payloadVariantCase_;
        result.payloadVariant_ = this.payloadVariant_;
        if (payloadVariantCase_ == 1 &&
            packetBuilder_ != null) {
          result.payloadVariant_ = packetBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.ToRadio) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.ToRadio)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.ToRadio other) {
        if (other == com.geeksville.mesh.MeshProtos.ToRadio.getDefaultInstance()) return this;
        switch (other.getPayloadVariantCase()) {
          case PACKET: {
            mergePacket(other.getPacket());
            break;
          }
          case WANT_CONFIG_ID: {
            setWantConfigId(other.getWantConfigId());
            break;
          }
          case DISCONNECT: {
            setDisconnect(other.getDisconnect());
            break;
          }
          case PAYLOADVARIANT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPacketFieldBuilder().getBuilder(),
                    extensionRegistry);
                payloadVariantCase_ = 1;
                break;
              } // case 10
              case 24: {
                payloadVariant_ = input.readUInt32();
                payloadVariantCase_ = 3;
                break;
              } // case 24
              case 32: {
                payloadVariant_ = input.readBool();
                payloadVariantCase_ = 4;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int payloadVariantCase_ = 0;
      private java.lang.Object payloadVariant_;
      public PayloadVariantCase
          getPayloadVariantCase() {
        return PayloadVariantCase.forNumber(
            payloadVariantCase_);
      }

      public Builder clearPayloadVariant() {
        payloadVariantCase_ = 0;
        payloadVariant_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.MeshPacket, com.geeksville.mesh.MeshProtos.MeshPacket.Builder, com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder> packetBuilder_;
      /**
       * <pre>
       * Send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 1;</code>
       * @return Whether the packet field is set.
       */
      @java.lang.Override
      public boolean hasPacket() {
        return payloadVariantCase_ == 1;
      }
      /**
       * <pre>
       * Send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 1;</code>
       * @return The packet.
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacket getPacket() {
        if (packetBuilder_ == null) {
          if (payloadVariantCase_ == 1) {
            return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
        } else {
          if (payloadVariantCase_ == 1) {
            return packetBuilder_.getMessage();
          }
          return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 1;</code>
       */
      public Builder setPacket(com.geeksville.mesh.MeshProtos.MeshPacket value) {
        if (packetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payloadVariant_ = value;
          onChanged();
        } else {
          packetBuilder_.setMessage(value);
        }
        payloadVariantCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 1;</code>
       */
      public Builder setPacket(
          com.geeksville.mesh.MeshProtos.MeshPacket.Builder builderForValue) {
        if (packetBuilder_ == null) {
          payloadVariant_ = builderForValue.build();
          onChanged();
        } else {
          packetBuilder_.setMessage(builderForValue.build());
        }
        payloadVariantCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 1;</code>
       */
      public Builder mergePacket(com.geeksville.mesh.MeshProtos.MeshPacket value) {
        if (packetBuilder_ == null) {
          if (payloadVariantCase_ == 1 &&
              payloadVariant_ != com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance()) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.MeshPacket.newBuilder((com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_)
                .mergeFrom(value).buildPartial();
          } else {
            payloadVariant_ = value;
          }
          onChanged();
        } else {
          if (payloadVariantCase_ == 1) {
            packetBuilder_.mergeFrom(value);
          } else {
            packetBuilder_.setMessage(value);
          }
        }
        payloadVariantCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 1;</code>
       */
      public Builder clearPacket() {
        if (packetBuilder_ == null) {
          if (payloadVariantCase_ == 1) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
            onChanged();
          }
        } else {
          if (payloadVariantCase_ == 1) {
            payloadVariantCase_ = 0;
            payloadVariant_ = null;
          }
          packetBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 1;</code>
       */
      public com.geeksville.mesh.MeshProtos.MeshPacket.Builder getPacketBuilder() {
        return getPacketFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 1;</code>
       */
      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder getPacketOrBuilder() {
        if ((payloadVariantCase_ == 1) && (packetBuilder_ != null)) {
          return packetBuilder_.getMessageOrBuilder();
        } else {
          if (payloadVariantCase_ == 1) {
            return (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_;
          }
          return com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Send this packet on the mesh
       * </pre>
       *
       * <code>.MeshPacket packet = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.geeksville.mesh.MeshProtos.MeshPacket, com.geeksville.mesh.MeshProtos.MeshPacket.Builder, com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder> 
          getPacketFieldBuilder() {
        if (packetBuilder_ == null) {
          if (!(payloadVariantCase_ == 1)) {
            payloadVariant_ = com.geeksville.mesh.MeshProtos.MeshPacket.getDefaultInstance();
          }
          packetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.geeksville.mesh.MeshProtos.MeshPacket, com.geeksville.mesh.MeshProtos.MeshPacket.Builder, com.geeksville.mesh.MeshProtos.MeshPacketOrBuilder>(
                  (com.geeksville.mesh.MeshProtos.MeshPacket) payloadVariant_,
                  getParentForChildren(),
                  isClean());
          payloadVariant_ = null;
        }
        payloadVariantCase_ = 1;
        onChanged();
        return packetBuilder_;
      }

      /**
       * <pre>
       * Phone wants radio to send full node db to the phone, This is
       * typically the first packet sent to the radio when the phone gets a
       * bluetooth connection. The radio will respond by sending back a
       * MyNodeInfo, a owner, a radio config and a series of
       * FromRadio.node_infos, and config_complete
       * the integer you write into this field will be reported back in the
       * config_complete_id response this allows clients to never be confused by
       * a stale old partially sent config.
       * </pre>
       *
       * <code>uint32 want_config_id = 3;</code>
       * @return Whether the wantConfigId field is set.
       */
      public boolean hasWantConfigId() {
        return payloadVariantCase_ == 3;
      }
      /**
       * <pre>
       * Phone wants radio to send full node db to the phone, This is
       * typically the first packet sent to the radio when the phone gets a
       * bluetooth connection. The radio will respond by sending back a
       * MyNodeInfo, a owner, a radio config and a series of
       * FromRadio.node_infos, and config_complete
       * the integer you write into this field will be reported back in the
       * config_complete_id response this allows clients to never be confused by
       * a stale old partially sent config.
       * </pre>
       *
       * <code>uint32 want_config_id = 3;</code>
       * @return The wantConfigId.
       */
      public int getWantConfigId() {
        if (payloadVariantCase_ == 3) {
          return (java.lang.Integer) payloadVariant_;
        }
        return 0;
      }
      /**
       * <pre>
       * Phone wants radio to send full node db to the phone, This is
       * typically the first packet sent to the radio when the phone gets a
       * bluetooth connection. The radio will respond by sending back a
       * MyNodeInfo, a owner, a radio config and a series of
       * FromRadio.node_infos, and config_complete
       * the integer you write into this field will be reported back in the
       * config_complete_id response this allows clients to never be confused by
       * a stale old partially sent config.
       * </pre>
       *
       * <code>uint32 want_config_id = 3;</code>
       * @param value The wantConfigId to set.
       * @return This builder for chaining.
       */
      public Builder setWantConfigId(int value) {
        
        payloadVariantCase_ = 3;
        payloadVariant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Phone wants radio to send full node db to the phone, This is
       * typically the first packet sent to the radio when the phone gets a
       * bluetooth connection. The radio will respond by sending back a
       * MyNodeInfo, a owner, a radio config and a series of
       * FromRadio.node_infos, and config_complete
       * the integer you write into this field will be reported back in the
       * config_complete_id response this allows clients to never be confused by
       * a stale old partially sent config.
       * </pre>
       *
       * <code>uint32 want_config_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearWantConfigId() {
        if (payloadVariantCase_ == 3) {
          payloadVariantCase_ = 0;
          payloadVariant_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * Tell API server we are disconnecting now.
       * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
       * (Sending this message is optional for clients)
       * </pre>
       *
       * <code>bool disconnect = 4;</code>
       * @return Whether the disconnect field is set.
       */
      public boolean hasDisconnect() {
        return payloadVariantCase_ == 4;
      }
      /**
       * <pre>
       * Tell API server we are disconnecting now.
       * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
       * (Sending this message is optional for clients)
       * </pre>
       *
       * <code>bool disconnect = 4;</code>
       * @return The disconnect.
       */
      public boolean getDisconnect() {
        if (payloadVariantCase_ == 4) {
          return (java.lang.Boolean) payloadVariant_;
        }
        return false;
      }
      /**
       * <pre>
       * Tell API server we are disconnecting now.
       * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
       * (Sending this message is optional for clients)
       * </pre>
       *
       * <code>bool disconnect = 4;</code>
       * @param value The disconnect to set.
       * @return This builder for chaining.
       */
      public Builder setDisconnect(boolean value) {
        
        payloadVariantCase_ = 4;
        payloadVariant_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tell API server we are disconnecting now.
       * This is useful for serial links where there is no hardware/protocol based notification that the client has dropped the link.
       * (Sending this message is optional for clients)
       * </pre>
       *
       * <code>bool disconnect = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisconnect() {
        if (payloadVariantCase_ == 4) {
          payloadVariantCase_ = 0;
          payloadVariant_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ToRadio)
    }

    // @@protoc_insertion_point(class_scope:ToRadio)
    private static final com.geeksville.mesh.MeshProtos.ToRadio DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.ToRadio();
    }

    public static com.geeksville.mesh.MeshProtos.ToRadio getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ToRadio>
        PARSER = new com.google.protobuf.AbstractParser<ToRadio>() {
      @java.lang.Override
      public ToRadio parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ToRadio> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ToRadio> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.ToRadio getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CompressedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Compressed)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * PortNum to determine the how to handle the compressed payload.
     * </pre>
     *
     * <code>.PortNum portnum = 1;</code>
     * @return The enum numeric value on the wire for portnum.
     */
    int getPortnumValue();
    /**
     * <pre>
     * PortNum to determine the how to handle the compressed payload.
     * </pre>
     *
     * <code>.PortNum portnum = 1;</code>
     * @return The portnum.
     */
    com.geeksville.mesh.Portnums.PortNum getPortnum();

    /**
     * <pre>
     * Compressed data.
     * </pre>
     *
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Compressed message payload
   * </pre>
   *
   * Protobuf type {@code Compressed}
   */
  public static final class Compressed extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Compressed)
      CompressedOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Compressed.newBuilder() to construct.
    private Compressed(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Compressed() {
      portnum_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Compressed();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.geeksville.mesh.MeshProtos.internal_static_Compressed_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.geeksville.mesh.MeshProtos.internal_static_Compressed_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.geeksville.mesh.MeshProtos.Compressed.class, com.geeksville.mesh.MeshProtos.Compressed.Builder.class);
    }

    public static final int PORTNUM_FIELD_NUMBER = 1;
    private int portnum_ = 0;
    /**
     * <pre>
     * PortNum to determine the how to handle the compressed payload.
     * </pre>
     *
     * <code>.PortNum portnum = 1;</code>
     * @return The enum numeric value on the wire for portnum.
     */
    @java.lang.Override public int getPortnumValue() {
      return portnum_;
    }
    /**
     * <pre>
     * PortNum to determine the how to handle the compressed payload.
     * </pre>
     *
     * <code>.PortNum portnum = 1;</code>
     * @return The portnum.
     */
    @java.lang.Override public com.geeksville.mesh.Portnums.PortNum getPortnum() {
      com.geeksville.mesh.Portnums.PortNum result = com.geeksville.mesh.Portnums.PortNum.forNumber(portnum_);
      return result == null ? com.geeksville.mesh.Portnums.PortNum.UNRECOGNIZED : result;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Compressed data.
     * </pre>
     *
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (portnum_ != com.geeksville.mesh.Portnums.PortNum.UNKNOWN_APP.getNumber()) {
        output.writeEnum(1, portnum_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (portnum_ != com.geeksville.mesh.Portnums.PortNum.UNKNOWN_APP.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, portnum_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.geeksville.mesh.MeshProtos.Compressed)) {
        return super.equals(obj);
      }
      com.geeksville.mesh.MeshProtos.Compressed other = (com.geeksville.mesh.MeshProtos.Compressed) obj;

      if (portnum_ != other.portnum_) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORTNUM_FIELD_NUMBER;
      hash = (53 * hash) + portnum_;
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.geeksville.mesh.MeshProtos.Compressed parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Compressed parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Compressed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Compressed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Compressed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.geeksville.mesh.MeshProtos.Compressed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Compressed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Compressed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Compressed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Compressed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.geeksville.mesh.MeshProtos.Compressed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.geeksville.mesh.MeshProtos.Compressed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.geeksville.mesh.MeshProtos.Compressed prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Compressed message payload
     * </pre>
     *
     * Protobuf type {@code Compressed}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Compressed)
        com.geeksville.mesh.MeshProtos.CompressedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.geeksville.mesh.MeshProtos.internal_static_Compressed_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.geeksville.mesh.MeshProtos.internal_static_Compressed_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.geeksville.mesh.MeshProtos.Compressed.class, com.geeksville.mesh.MeshProtos.Compressed.Builder.class);
      }

      // Construct using com.geeksville.mesh.MeshProtos.Compressed.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        portnum_ = 0;
        data_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.geeksville.mesh.MeshProtos.internal_static_Compressed_descriptor;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Compressed getDefaultInstanceForType() {
        return com.geeksville.mesh.MeshProtos.Compressed.getDefaultInstance();
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Compressed build() {
        com.geeksville.mesh.MeshProtos.Compressed result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.geeksville.mesh.MeshProtos.Compressed buildPartial() {
        com.geeksville.mesh.MeshProtos.Compressed result = new com.geeksville.mesh.MeshProtos.Compressed(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.geeksville.mesh.MeshProtos.Compressed result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.portnum_ = portnum_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.data_ = data_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.geeksville.mesh.MeshProtos.Compressed) {
          return mergeFrom((com.geeksville.mesh.MeshProtos.Compressed)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.geeksville.mesh.MeshProtos.Compressed other) {
        if (other == com.geeksville.mesh.MeshProtos.Compressed.getDefaultInstance()) return this;
        if (other.portnum_ != 0) {
          setPortnumValue(other.getPortnumValue());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                portnum_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                data_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int portnum_ = 0;
      /**
       * <pre>
       * PortNum to determine the how to handle the compressed payload.
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @return The enum numeric value on the wire for portnum.
       */
      @java.lang.Override public int getPortnumValue() {
        return portnum_;
      }
      /**
       * <pre>
       * PortNum to determine the how to handle the compressed payload.
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @param value The enum numeric value on the wire for portnum to set.
       * @return This builder for chaining.
       */
      public Builder setPortnumValue(int value) {
        portnum_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PortNum to determine the how to handle the compressed payload.
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @return The portnum.
       */
      @java.lang.Override
      public com.geeksville.mesh.Portnums.PortNum getPortnum() {
        com.geeksville.mesh.Portnums.PortNum result = com.geeksville.mesh.Portnums.PortNum.forNumber(portnum_);
        return result == null ? com.geeksville.mesh.Portnums.PortNum.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * PortNum to determine the how to handle the compressed payload.
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @param value The portnum to set.
       * @return This builder for chaining.
       */
      public Builder setPortnum(com.geeksville.mesh.Portnums.PortNum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        portnum_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PortNum to determine the how to handle the compressed payload.
       * </pre>
       *
       * <code>.PortNum portnum = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPortnum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        portnum_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Compressed data.
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Compressed data.
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        data_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Compressed data.
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Compressed)
    }

    // @@protoc_insertion_point(class_scope:Compressed)
    private static final com.geeksville.mesh.MeshProtos.Compressed DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.geeksville.mesh.MeshProtos.Compressed();
    }

    public static com.geeksville.mesh.MeshProtos.Compressed getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Compressed>
        PARSER = new com.google.protobuf.AbstractParser<Compressed>() {
      @java.lang.Override
      public Compressed parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Compressed> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Compressed> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.geeksville.mesh.MeshProtos.Compressed getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Position_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Position_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_User_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_User_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RouteDiscovery_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RouteDiscovery_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Routing_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Routing_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Data_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Data_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Waypoint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Waypoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MeshPacket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MeshPacket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NodeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NodeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MyNodeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MyNodeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogRecord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LogRecord_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FromRadio_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FromRadio_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ToRadio_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ToRadio_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Compressed_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Compressed_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nmesh.proto\032\rchannel.proto\032\014config.prot" +
      "o\032\023module_config.proto\032\016portnums.proto\032\017" +
      "telemetry.proto\"\267\005\n\010Position\022\022\n\nlatitude" +
      "_i\030\001 \001(\017\022\023\n\013longitude_i\030\002 \001(\017\022\020\n\010altitud" +
      "e\030\003 \001(\005\022\014\n\004time\030\004 \001(\007\022,\n\017location_source" +
      "\030\005 \001(\0162\023.Position.LocSource\022,\n\017altitude_" +
      "source\030\006 \001(\0162\023.Position.AltSource\022\021\n\ttim" +
      "estamp\030\007 \001(\007\022\037\n\027timestamp_millis_adjust\030" +
      "\010 \001(\005\022\024\n\014altitude_hae\030\t \001(\021\022#\n\033altitude_" +
      "geoidal_separation\030\n \001(\021\022\014\n\004PDOP\030\013 \001(\r\022\014" +
      "\n\004HDOP\030\014 \001(\r\022\014\n\004VDOP\030\r \001(\r\022\024\n\014gps_accura" +
      "cy\030\016 \001(\r\022\024\n\014ground_speed\030\017 \001(\r\022\024\n\014ground" +
      "_track\030\020 \001(\r\022\023\n\013fix_quality\030\021 \001(\r\022\020\n\010fix" +
      "_type\030\022 \001(\r\022\024\n\014sats_in_view\030\023 \001(\r\022\021\n\tsen" +
      "sor_id\030\024 \001(\r\022\023\n\013next_update\030\025 \001(\r\022\022\n\nseq" +
      "_number\030\026 \001(\r\"N\n\tLocSource\022\r\n\tLOC_UNSET\020" +
      "\000\022\016\n\nLOC_MANUAL\020\001\022\020\n\014LOC_INTERNAL\020\002\022\020\n\014L" +
      "OC_EXTERNAL\020\003\"b\n\tAltSource\022\r\n\tALT_UNSET\020" +
      "\000\022\016\n\nALT_MANUAL\020\001\022\020\n\014ALT_INTERNAL\020\002\022\020\n\014A" +
      "LT_EXTERNAL\020\003\022\022\n\016ALT_BAROMETRIC\020\004\"\201\001\n\004Us" +
      "er\022\n\n\002id\030\001 \001(\t\022\021\n\tlong_name\030\002 \001(\t\022\022\n\nsho" +
      "rt_name\030\003 \001(\t\022\017\n\007macaddr\030\004 \001(\014\022 \n\010hw_mod" +
      "el\030\005 \001(\0162\016.HardwareModel\022\023\n\013is_licensed\030" +
      "\006 \001(\010\"\037\n\016RouteDiscovery\022\r\n\005route\030\001 \003(\007\"\305" +
      "\002\n\007Routing\022(\n\rroute_request\030\001 \001(\0132\017.Rout" +
      "eDiscoveryH\000\022&\n\013route_reply\030\002 \001(\0132\017.Rout" +
      "eDiscoveryH\000\022&\n\014error_reason\030\003 \001(\0162\016.Rou" +
      "ting.ErrorH\000\"\264\001\n\005Error\022\010\n\004NONE\020\000\022\014\n\010NO_R" +
      "OUTE\020\001\022\013\n\007GOT_NAK\020\002\022\013\n\007TIMEOUT\020\003\022\020\n\014NO_I" +
      "NTERFACE\020\004\022\022\n\016MAX_RETRANSMIT\020\005\022\016\n\nNO_CHA" +
      "NNEL\020\006\022\r\n\tTOO_LARGE\020\007\022\017\n\013NO_RESPONSE\020\010\022\017" +
      "\n\013BAD_REQUEST\020 \022\022\n\016NOT_AUTHORIZED\020!B\t\n\007v" +
      "ariant\"\234\001\n\004Data\022\031\n\007portnum\030\001 \001(\0162\010.PortN" +
      "um\022\017\n\007payload\030\002 \001(\014\022\025\n\rwant_response\030\003 \001" +
      "(\010\022\014\n\004dest\030\004 \001(\007\022\016\n\006source\030\005 \001(\007\022\022\n\nrequ" +
      "est_id\030\006 \001(\007\022\020\n\010reply_id\030\007 \001(\007\022\r\n\005emoji\030" +
      "\010 \001(\007\"\202\001\n\010Waypoint\022\n\n\002id\030\001 \001(\r\022\022\n\nlatitu" +
      "de_i\030\002 \001(\017\022\023\n\013longitude_i\030\003 \001(\017\022\016\n\006expir" +
      "e\030\004 \001(\r\022\016\n\006locked\030\005 \001(\010\022\014\n\004name\030\006 \001(\t\022\023\n" +
      "\013description\030\007 \001(\t\"\313\003\n\nMeshPacket\022\014\n\004fro" +
      "m\030\001 \001(\007\022\n\n\002to\030\002 \001(\007\022\017\n\007channel\030\003 \001(\r\022\030\n\007" +
      "decoded\030\004 \001(\0132\005.DataH\000\022\023\n\tencrypted\030\005 \001(" +
      "\014H\000\022\n\n\002id\030\006 \001(\007\022\017\n\007rx_time\030\007 \001(\007\022\016\n\006rx_s" +
      "nr\030\010 \001(\002\022\021\n\thop_limit\030\t \001(\r\022\020\n\010want_ack\030" +
      "\n \001(\010\022&\n\010priority\030\013 \001(\0162\024.MeshPacket.Pri" +
      "ority\022\017\n\007rx_rssi\030\014 \001(\005\022$\n\007delayed\030\r \001(\0162" +
      "\023.MeshPacket.Delayed\"[\n\010Priority\022\t\n\005UNSE" +
      "T\020\000\022\007\n\003MIN\020\001\022\016\n\nBACKGROUND\020\n\022\013\n\007DEFAULT\020" +
      "@\022\014\n\010RELIABLE\020F\022\007\n\003ACK\020x\022\007\n\003MAX\020\177\"B\n\007Del" +
      "ayed\022\014\n\010NO_DELAY\020\000\022\025\n\021DELAYED_BROADCAST\020" +
      "\001\022\022\n\016DELAYED_DIRECT\020\002B\021\n\017payload_variant" +
      "\"\222\001\n\010NodeInfo\022\013\n\003num\030\001 \001(\r\022\023\n\004user\030\002 \001(\013" +
      "2\005.User\022\033\n\010position\030\003 \001(\0132\t.Position\022\013\n\003" +
      "snr\030\004 \001(\002\022\022\n\nlast_heard\030\005 \001(\007\022&\n\016device_" +
      "metrics\030\006 \001(\0132\016.DeviceMetrics\"\206\003\n\nMyNode" +
      "Info\022\023\n\013my_node_num\030\001 \001(\r\022\017\n\007has_gps\030\002 \001" +
      "(\010\022\024\n\014max_channels\030\003 \001(\r\022\030\n\020firmware_ver" +
      "sion\030\004 \001(\t\022&\n\nerror_code\030\005 \001(\0162\022.Critica" +
      "lErrorCode\022\025\n\rerror_address\030\006 \001(\r\022\023\n\013err" +
      "or_count\030\007 \001(\r\022\024\n\014reboot_count\030\010 \001(\r\022\017\n\007" +
      "bitrate\030\t \001(\002\022\034\n\024message_timeout_msec\030\n " +
      "\001(\r\022\027\n\017min_app_version\030\013 \001(\r\022\025\n\rair_peri" +
      "od_tx\030\014 \003(\r\022\025\n\rair_period_rx\030\r \003(\r\022\020\n\010ha" +
      "s_wifi\030\016 \001(\010\022\033\n\023channel_utilization\030\017 \001(" +
      "\002\022\023\n\013air_util_tx\030\020 \001(\002\"\265\001\n\tLogRecord\022\017\n\007" +
      "message\030\001 \001(\t\022\014\n\004time\030\002 \001(\007\022\016\n\006source\030\003 " +
      "\001(\t\022\037\n\005level\030\004 \001(\0162\020.LogRecord.Level\"X\n\005" +
      "Level\022\t\n\005UNSET\020\000\022\014\n\010CRITICAL\0202\022\t\n\005ERROR\020" +
      "(\022\013\n\007WARNING\020\036\022\010\n\004INFO\020\024\022\t\n\005DEBUG\020\n\022\t\n\005T" +
      "RACE\020\005\"\274\002\n\tFromRadio\022\n\n\002id\030\001 \001(\r\022\035\n\006pack" +
      "et\030\002 \001(\0132\013.MeshPacketH\000\022\036\n\007my_info\030\003 \001(\013" +
      "2\013.MyNodeInfoH\000\022\036\n\tnode_info\030\004 \001(\0132\t.Nod" +
      "eInfoH\000\022\031\n\006config\030\005 \001(\0132\007.ConfigH\000\022 \n\nlo" +
      "g_record\030\006 \001(\0132\n.LogRecordH\000\022\034\n\022config_c" +
      "omplete_id\030\007 \001(\rH\000\022\022\n\010rebooted\030\010 \001(\010H\000\022%" +
      "\n\014moduleConfig\030\t \001(\0132\r.ModuleConfigH\000\022\033\n" +
      "\007channel\030\n \001(\0132\010.ChannelH\000B\021\n\017payload_va" +
      "riant\"k\n\007ToRadio\022\035\n\006packet\030\001 \001(\0132\013.MeshP" +
      "acketH\000\022\030\n\016want_config_id\030\003 \001(\rH\000\022\024\n\ndis" +
      "connect\030\004 \001(\010H\000B\021\n\017payload_variant\"5\n\nCo" +
      "mpressed\022\031\n\007portnum\030\001 \001(\0162\010.PortNum\022\014\n\004d" +
      "ata\030\002 \001(\014*\371\003\n\rHardwareModel\022\t\n\005UNSET\020\000\022\014" +
      "\n\010TLORA_V2\020\001\022\014\n\010TLORA_V1\020\002\022\022\n\016TLORA_V2_1" +
      "_1P6\020\003\022\t\n\005TBEAM\020\004\022\017\n\013HELTEC_V2_0\020\005\022\016\n\nTB" +
      "EAM_V0P7\020\006\022\n\n\006T_ECHO\020\007\022\020\n\014TLORA_V1_1P3\020\010" +
      "\022\013\n\007RAK4631\020\t\022\017\n\013HELTEC_V2_1\020\n\022\r\n\tHELTEC" +
      "_V1\020\013\022\030\n\024LILYGO_TBEAM_S3_CORE\020\014\022\014\n\010RAK11" +
      "200\020\r\022\013\n\007NANO_G1\020\016\022\022\n\016TLORA_V2_1_1P8\020\017\022\016" +
      "\n\nSTATION_G1\020\031\022\021\n\rLORA_RELAY_V1\020 \022\016\n\nNRF" +
      "52840DK\020!\022\007\n\003PPR\020\"\022\017\n\013GENIEBLOCKS\020#\022\021\n\rN" +
      "RF52_UNKNOWN\020$\022\r\n\tPORTDUINO\020%\022\017\n\013ANDROID" +
      "_SIM\020&\022\n\n\006DIY_V1\020\'\022\025\n\021NRF52840_PCA10059\020" +
      "(\022\n\n\006DR_DEV\020)\022\013\n\007M5STACK\020*\022\r\n\tHELTEC_V3\020" +
      "+\022\021\n\rHELTEC_WSL_V3\020,\022\017\n\nPRIVATE_HW\020\377\001*,\n" +
      "\tConstants\022\010\n\004ZERO\020\000\022\025\n\020DATA_PAYLOAD_LEN" +
      "\020\355\001*\356\001\n\021CriticalErrorCode\022\010\n\004NONE\020\000\022\017\n\013T" +
      "X_WATCHDOG\020\001\022\024\n\020SLEEP_ENTER_WAIT\020\002\022\014\n\010NO" +
      "_RADIO\020\003\022\017\n\013UNSPECIFIED\020\004\022\025\n\021UBLOX_UNIT_" +
      "FAILED\020\005\022\r\n\tNO_AXP192\020\006\022\031\n\025INVALID_RADIO" +
      "_SETTING\020\007\022\023\n\017TRANSMIT_FAILED\020\010\022\014\n\010BROWN" +
      "OUT\020\t\022\022\n\016SX1262_FAILURE\020\n\022\021\n\rRADIO_SPI_B" +
      "UG\020\013BG\n\023com.geeksville.meshB\nMeshProtosH" +
      "\003Z\"github.com/meshtastic/go/generatedb\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.geeksville.mesh.ChannelProtos.getDescriptor(),
          com.geeksville.mesh.ConfigProtos.getDescriptor(),
          com.geeksville.mesh.ModuleConfigProtos.getDescriptor(),
          com.geeksville.mesh.Portnums.getDescriptor(),
          com.geeksville.mesh.TelemetryProtos.getDescriptor(),
        });
    internal_static_Position_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Position_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Position_descriptor,
        new java.lang.String[] { "LatitudeI", "LongitudeI", "Altitude", "Time", "LocationSource", "AltitudeSource", "Timestamp", "TimestampMillisAdjust", "AltitudeHae", "AltitudeGeoidalSeparation", "PDOP", "HDOP", "VDOP", "GpsAccuracy", "GroundSpeed", "GroundTrack", "FixQuality", "FixType", "SatsInView", "SensorId", "NextUpdate", "SeqNumber", });
    internal_static_User_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_User_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_User_descriptor,
        new java.lang.String[] { "Id", "LongName", "ShortName", "Macaddr", "HwModel", "IsLicensed", });
    internal_static_RouteDiscovery_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_RouteDiscovery_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RouteDiscovery_descriptor,
        new java.lang.String[] { "Route", });
    internal_static_Routing_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Routing_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Routing_descriptor,
        new java.lang.String[] { "RouteRequest", "RouteReply", "ErrorReason", "Variant", });
    internal_static_Data_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Data_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Data_descriptor,
        new java.lang.String[] { "Portnum", "Payload", "WantResponse", "Dest", "Source", "RequestId", "ReplyId", "Emoji", });
    internal_static_Waypoint_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_Waypoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Waypoint_descriptor,
        new java.lang.String[] { "Id", "LatitudeI", "LongitudeI", "Expire", "Locked", "Name", "Description", });
    internal_static_MeshPacket_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_MeshPacket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MeshPacket_descriptor,
        new java.lang.String[] { "From", "To", "Channel", "Decoded", "Encrypted", "Id", "RxTime", "RxSnr", "HopLimit", "WantAck", "Priority", "RxRssi", "Delayed", "PayloadVariant", });
    internal_static_NodeInfo_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_NodeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NodeInfo_descriptor,
        new java.lang.String[] { "Num", "User", "Position", "Snr", "LastHeard", "DeviceMetrics", });
    internal_static_MyNodeInfo_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_MyNodeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MyNodeInfo_descriptor,
        new java.lang.String[] { "MyNodeNum", "HasGps", "MaxChannels", "FirmwareVersion", "ErrorCode", "ErrorAddress", "ErrorCount", "RebootCount", "Bitrate", "MessageTimeoutMsec", "MinAppVersion", "AirPeriodTx", "AirPeriodRx", "HasWifi", "ChannelUtilization", "AirUtilTx", });
    internal_static_LogRecord_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_LogRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LogRecord_descriptor,
        new java.lang.String[] { "Message", "Time", "Source", "Level", });
    internal_static_FromRadio_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_FromRadio_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FromRadio_descriptor,
        new java.lang.String[] { "Id", "Packet", "MyInfo", "NodeInfo", "Config", "LogRecord", "ConfigCompleteId", "Rebooted", "ModuleConfig", "Channel", "PayloadVariant", });
    internal_static_ToRadio_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_ToRadio_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ToRadio_descriptor,
        new java.lang.String[] { "Packet", "WantConfigId", "Disconnect", "PayloadVariant", });
    internal_static_Compressed_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_Compressed_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Compressed_descriptor,
        new java.lang.String[] { "Portnum", "Data", });
    com.geeksville.mesh.ChannelProtos.getDescriptor();
    com.geeksville.mesh.ConfigProtos.getDescriptor();
    com.geeksville.mesh.ModuleConfigProtos.getDescriptor();
    com.geeksville.mesh.Portnums.getDescriptor();
    com.geeksville.mesh.TelemetryProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
