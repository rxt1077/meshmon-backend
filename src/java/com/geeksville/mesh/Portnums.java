// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: portnums.proto

package com.geeksville.mesh;

public final class Portnums {
  private Portnums() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * For any new 'apps' that run on the device or via sister apps on phones/PCs they should pick and use a
   * unique 'portnum' for their application.
   * If you are making a new app using meshtastic, please send in a pull request to add your 'portnum' to this
   * master table.
   * PortNums should be assigned in the following range:
   * 0-63   Core Meshtastic use, do not use for third party apps
   * 64-127 Registered 3rd party apps, send in a pull request that adds a new entry to portnums.proto to  register your application
   * 256-511 Use one of these portnums for your private applications that you don't want to register publically
   * All other values are reserved.
   * Note: This was formerly a Type enum named 'typ' with the same id #
   * We have change to this 'portnum' based scheme for specifying app handlers for particular payloads.
   * This change is backwards compatible by treating the legacy OPAQUE/CLEAR_TEXT values identically.
   * </pre>
   *
   * Protobuf enum {@code PortNum}
   */
  public enum PortNum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Deprecated: do not use in new code (formerly called OPAQUE)
     * A message sent from a device outside of the mesh, in a form the mesh does not understand
     * NOTE: This must be 0, because it is documented in IMeshService.aidl to be so
     * </pre>
     *
     * <code>UNKNOWN_APP = 0;</code>
     */
    UNKNOWN_APP(0),
    /**
     * <pre>
     * A simple UTF-8 text message, which even the little micros in the mesh
     * can understand and show on their screen eventually in some circumstances
     * even signal might send messages in this form (see below)
     * </pre>
     *
     * <code>TEXT_MESSAGE_APP = 1;</code>
     */
    TEXT_MESSAGE_APP(1),
    /**
     * <pre>
     * Reserved for built-in GPIO/example app.
     * See remote_hardware.proto/HardwareMessage for details on the message sent/received to this port number
     * </pre>
     *
     * <code>REMOTE_HARDWARE_APP = 2;</code>
     */
    REMOTE_HARDWARE_APP(2),
    /**
     * <pre>
     * The built-in position messaging app.
     * Payload is a [Position](/docs/developers/protobufs/api#position) message
     * </pre>
     *
     * <code>POSITION_APP = 3;</code>
     */
    POSITION_APP(3),
    /**
     * <pre>
     * The built-in user info app.
     * Payload is a [User](/docs/developers/protobufs/api#user) message
     * </pre>
     *
     * <code>NODEINFO_APP = 4;</code>
     */
    NODEINFO_APP(4),
    /**
     * <pre>
     * Protocol control packets for mesh protocol use.
     * Payload is a [Routing](/docs/developers/protobufs/api#routing) message
     * </pre>
     *
     * <code>ROUTING_APP = 5;</code>
     */
    ROUTING_APP(5),
    /**
     * <pre>
     * Admin control packets.
     * Payload is a [AdminMessage](/docs/developers/protobufs/api#adminmessage) message
     * </pre>
     *
     * <code>ADMIN_APP = 6;</code>
     */
    ADMIN_APP(6),
    /**
     * <pre>
     * Compressed TEXT_MESSAGE payloads.
     * </pre>
     *
     * <code>TEXT_MESSAGE_COMPRESSED_APP = 7;</code>
     */
    TEXT_MESSAGE_COMPRESSED_APP(7),
    /**
     * <pre>
     * Waypoint payloads.
     * Payload is a [Waypoint](/docs/developers/protobufs/api#waypoint) message
     * </pre>
     *
     * <code>WAYPOINT_APP = 8;</code>
     */
    WAYPOINT_APP(8),
    /**
     * <pre>
     * Audio Payloads.
     * Encapsulated codec2 packets. On 2.4 GHZ Bandwidths only for now
     * </pre>
     *
     * <code>AUDIO_APP = 9;</code>
     */
    AUDIO_APP(9),
    /**
     * <pre>
     * Provides a 'ping' service that replies to any packet it receives.
     * Also serves as a small example module.
     * </pre>
     *
     * <code>REPLY_APP = 32;</code>
     */
    REPLY_APP(32),
    /**
     * <pre>
     * Used for the python IP tunnel feature
     * </pre>
     *
     * <code>IP_TUNNEL_APP = 33;</code>
     */
    IP_TUNNEL_APP(33),
    /**
     * <pre>
     * Provides a hardware serial interface to send and receive from the Meshtastic network.
     * Connect to the RX/TX pins of a device with 38400 8N1. Packets received from the Meshtastic
     * network is forwarded to the RX pin while sending a packet to TX will go out to the Mesh network.
     * Maximum packet size of 240 bytes.
     * Module is disabled by default can be turned on by setting SERIAL_MODULE_ENABLED = 1 in SerialPlugh.cpp.
     * </pre>
     *
     * <code>SERIAL_APP = 64;</code>
     */
    SERIAL_APP(64),
    /**
     * <pre>
     * STORE_FORWARD_APP (Work in Progress)
     * Maintained by Jm Casler (MC Hamster) : jm&#64;casler.org
     * </pre>
     *
     * <code>STORE_FORWARD_APP = 65;</code>
     */
    STORE_FORWARD_APP(65),
    /**
     * <pre>
     * Optional port for messages for the range test module.
     * </pre>
     *
     * <code>RANGE_TEST_APP = 66;</code>
     */
    RANGE_TEST_APP(66),
    /**
     * <pre>
     * Provides a format to send and receive telemetry data from the Meshtastic network.
     * Maintained by Charles Crossan (crossan007) : crossan007&#64;gmail.com
     * </pre>
     *
     * <code>TELEMETRY_APP = 67;</code>
     */
    TELEMETRY_APP(67),
    /**
     * <pre>
     * Experimental tools for estimating node position without a GPS
     * Maintained by Github user a-f-G-U-C (a Meshtastic contributor)
     * Project files at https://github.com/a-f-G-U-C/Meshtastic-ZPS
     * </pre>
     *
     * <code>ZPS_APP = 68;</code>
     */
    ZPS_APP(68),
    /**
     * <pre>
     * Used to let multiple instances of Linux native applications communicate 
     * as if they did using their LoRa chip.
     * Maintained by GitHub user GUVWAF. 
     * Project files at https://github.com/GUVWAF/Meshtasticator 
     * </pre>
     *
     * <code>SIMULATOR_APP = 69;</code>
     */
    SIMULATOR_APP(69),
    /**
     * <pre>
     * Provides a traceroute functionality to show the route a packet towards
     * a certain destination would take on the mesh.
     * </pre>
     *
     * <code>TRACEROUTE_APP = 70;</code>
     */
    TRACEROUTE_APP(70),
    /**
     * <pre>
     * Private applications should use portnums &gt;= 256.
     * To simplify initial development and testing you can use "PRIVATE_APP"
     * in your code without needing to rebuild protobuf files (via [regen-protos.sh](https://github.com/meshtastic/firmware/blob/master/bin/regen-protos.sh))
     * </pre>
     *
     * <code>PRIVATE_APP = 256;</code>
     */
    PRIVATE_APP(256),
    /**
     * <pre>
     * ATAK Forwarder Module https://github.com/paulmandal/atak-forwarder
     * </pre>
     *
     * <code>ATAK_FORWARDER = 257;</code>
     */
    ATAK_FORWARDER(257),
    /**
     * <pre>
     * Currently we limit port nums to no higher than this value
     * </pre>
     *
     * <code>MAX = 511;</code>
     */
    MAX(511),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Deprecated: do not use in new code (formerly called OPAQUE)
     * A message sent from a device outside of the mesh, in a form the mesh does not understand
     * NOTE: This must be 0, because it is documented in IMeshService.aidl to be so
     * </pre>
     *
     * <code>UNKNOWN_APP = 0;</code>
     */
    public static final int UNKNOWN_APP_VALUE = 0;
    /**
     * <pre>
     * A simple UTF-8 text message, which even the little micros in the mesh
     * can understand and show on their screen eventually in some circumstances
     * even signal might send messages in this form (see below)
     * </pre>
     *
     * <code>TEXT_MESSAGE_APP = 1;</code>
     */
    public static final int TEXT_MESSAGE_APP_VALUE = 1;
    /**
     * <pre>
     * Reserved for built-in GPIO/example app.
     * See remote_hardware.proto/HardwareMessage for details on the message sent/received to this port number
     * </pre>
     *
     * <code>REMOTE_HARDWARE_APP = 2;</code>
     */
    public static final int REMOTE_HARDWARE_APP_VALUE = 2;
    /**
     * <pre>
     * The built-in position messaging app.
     * Payload is a [Position](/docs/developers/protobufs/api#position) message
     * </pre>
     *
     * <code>POSITION_APP = 3;</code>
     */
    public static final int POSITION_APP_VALUE = 3;
    /**
     * <pre>
     * The built-in user info app.
     * Payload is a [User](/docs/developers/protobufs/api#user) message
     * </pre>
     *
     * <code>NODEINFO_APP = 4;</code>
     */
    public static final int NODEINFO_APP_VALUE = 4;
    /**
     * <pre>
     * Protocol control packets for mesh protocol use.
     * Payload is a [Routing](/docs/developers/protobufs/api#routing) message
     * </pre>
     *
     * <code>ROUTING_APP = 5;</code>
     */
    public static final int ROUTING_APP_VALUE = 5;
    /**
     * <pre>
     * Admin control packets.
     * Payload is a [AdminMessage](/docs/developers/protobufs/api#adminmessage) message
     * </pre>
     *
     * <code>ADMIN_APP = 6;</code>
     */
    public static final int ADMIN_APP_VALUE = 6;
    /**
     * <pre>
     * Compressed TEXT_MESSAGE payloads.
     * </pre>
     *
     * <code>TEXT_MESSAGE_COMPRESSED_APP = 7;</code>
     */
    public static final int TEXT_MESSAGE_COMPRESSED_APP_VALUE = 7;
    /**
     * <pre>
     * Waypoint payloads.
     * Payload is a [Waypoint](/docs/developers/protobufs/api#waypoint) message
     * </pre>
     *
     * <code>WAYPOINT_APP = 8;</code>
     */
    public static final int WAYPOINT_APP_VALUE = 8;
    /**
     * <pre>
     * Audio Payloads.
     * Encapsulated codec2 packets. On 2.4 GHZ Bandwidths only for now
     * </pre>
     *
     * <code>AUDIO_APP = 9;</code>
     */
    public static final int AUDIO_APP_VALUE = 9;
    /**
     * <pre>
     * Provides a 'ping' service that replies to any packet it receives.
     * Also serves as a small example module.
     * </pre>
     *
     * <code>REPLY_APP = 32;</code>
     */
    public static final int REPLY_APP_VALUE = 32;
    /**
     * <pre>
     * Used for the python IP tunnel feature
     * </pre>
     *
     * <code>IP_TUNNEL_APP = 33;</code>
     */
    public static final int IP_TUNNEL_APP_VALUE = 33;
    /**
     * <pre>
     * Provides a hardware serial interface to send and receive from the Meshtastic network.
     * Connect to the RX/TX pins of a device with 38400 8N1. Packets received from the Meshtastic
     * network is forwarded to the RX pin while sending a packet to TX will go out to the Mesh network.
     * Maximum packet size of 240 bytes.
     * Module is disabled by default can be turned on by setting SERIAL_MODULE_ENABLED = 1 in SerialPlugh.cpp.
     * </pre>
     *
     * <code>SERIAL_APP = 64;</code>
     */
    public static final int SERIAL_APP_VALUE = 64;
    /**
     * <pre>
     * STORE_FORWARD_APP (Work in Progress)
     * Maintained by Jm Casler (MC Hamster) : jm&#64;casler.org
     * </pre>
     *
     * <code>STORE_FORWARD_APP = 65;</code>
     */
    public static final int STORE_FORWARD_APP_VALUE = 65;
    /**
     * <pre>
     * Optional port for messages for the range test module.
     * </pre>
     *
     * <code>RANGE_TEST_APP = 66;</code>
     */
    public static final int RANGE_TEST_APP_VALUE = 66;
    /**
     * <pre>
     * Provides a format to send and receive telemetry data from the Meshtastic network.
     * Maintained by Charles Crossan (crossan007) : crossan007&#64;gmail.com
     * </pre>
     *
     * <code>TELEMETRY_APP = 67;</code>
     */
    public static final int TELEMETRY_APP_VALUE = 67;
    /**
     * <pre>
     * Experimental tools for estimating node position without a GPS
     * Maintained by Github user a-f-G-U-C (a Meshtastic contributor)
     * Project files at https://github.com/a-f-G-U-C/Meshtastic-ZPS
     * </pre>
     *
     * <code>ZPS_APP = 68;</code>
     */
    public static final int ZPS_APP_VALUE = 68;
    /**
     * <pre>
     * Used to let multiple instances of Linux native applications communicate 
     * as if they did using their LoRa chip.
     * Maintained by GitHub user GUVWAF. 
     * Project files at https://github.com/GUVWAF/Meshtasticator 
     * </pre>
     *
     * <code>SIMULATOR_APP = 69;</code>
     */
    public static final int SIMULATOR_APP_VALUE = 69;
    /**
     * <pre>
     * Provides a traceroute functionality to show the route a packet towards
     * a certain destination would take on the mesh.
     * </pre>
     *
     * <code>TRACEROUTE_APP = 70;</code>
     */
    public static final int TRACEROUTE_APP_VALUE = 70;
    /**
     * <pre>
     * Private applications should use portnums &gt;= 256.
     * To simplify initial development and testing you can use "PRIVATE_APP"
     * in your code without needing to rebuild protobuf files (via [regen-protos.sh](https://github.com/meshtastic/firmware/blob/master/bin/regen-protos.sh))
     * </pre>
     *
     * <code>PRIVATE_APP = 256;</code>
     */
    public static final int PRIVATE_APP_VALUE = 256;
    /**
     * <pre>
     * ATAK Forwarder Module https://github.com/paulmandal/atak-forwarder
     * </pre>
     *
     * <code>ATAK_FORWARDER = 257;</code>
     */
    public static final int ATAK_FORWARDER_VALUE = 257;
    /**
     * <pre>
     * Currently we limit port nums to no higher than this value
     * </pre>
     *
     * <code>MAX = 511;</code>
     */
    public static final int MAX_VALUE = 511;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PortNum valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PortNum forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_APP;
        case 1: return TEXT_MESSAGE_APP;
        case 2: return REMOTE_HARDWARE_APP;
        case 3: return POSITION_APP;
        case 4: return NODEINFO_APP;
        case 5: return ROUTING_APP;
        case 6: return ADMIN_APP;
        case 7: return TEXT_MESSAGE_COMPRESSED_APP;
        case 8: return WAYPOINT_APP;
        case 9: return AUDIO_APP;
        case 32: return REPLY_APP;
        case 33: return IP_TUNNEL_APP;
        case 64: return SERIAL_APP;
        case 65: return STORE_FORWARD_APP;
        case 66: return RANGE_TEST_APP;
        case 67: return TELEMETRY_APP;
        case 68: return ZPS_APP;
        case 69: return SIMULATOR_APP;
        case 70: return TRACEROUTE_APP;
        case 256: return PRIVATE_APP;
        case 257: return ATAK_FORWARDER;
        case 511: return MAX;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PortNum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PortNum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PortNum>() {
            public PortNum findValueByNumber(int number) {
              return PortNum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.geeksville.mesh.Portnums.getDescriptor().getEnumTypes().get(0);
    }

    private static final PortNum[] VALUES = values();

    public static PortNum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PortNum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PortNum)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016portnums.proto*\244\003\n\007PortNum\022\017\n\013UNKNOWN_" +
      "APP\020\000\022\024\n\020TEXT_MESSAGE_APP\020\001\022\027\n\023REMOTE_HA" +
      "RDWARE_APP\020\002\022\020\n\014POSITION_APP\020\003\022\020\n\014NODEIN" +
      "FO_APP\020\004\022\017\n\013ROUTING_APP\020\005\022\r\n\tADMIN_APP\020\006" +
      "\022\037\n\033TEXT_MESSAGE_COMPRESSED_APP\020\007\022\020\n\014WAY" +
      "POINT_APP\020\010\022\r\n\tAUDIO_APP\020\t\022\r\n\tREPLY_APP\020" +
      " \022\021\n\rIP_TUNNEL_APP\020!\022\016\n\nSERIAL_APP\020@\022\025\n\021" +
      "STORE_FORWARD_APP\020A\022\022\n\016RANGE_TEST_APP\020B\022" +
      "\021\n\rTELEMETRY_APP\020C\022\013\n\007ZPS_APP\020D\022\021\n\rSIMUL" +
      "ATOR_APP\020E\022\022\n\016TRACEROUTE_APP\020F\022\020\n\013PRIVAT" +
      "E_APP\020\200\002\022\023\n\016ATAK_FORWARDER\020\201\002\022\010\n\003MAX\020\377\003B" +
      "\\\n\023com.geeksville.meshB\010PortnumsH\003Z\"gith" +
      "ub.com/meshtastic/go/generated\252\002\024Meshtas" +
      "tic.Protobufsb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
